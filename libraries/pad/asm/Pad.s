.include "macros.inc"

.section .text, "ax"  # 0x800065A0 - 0x8010F860

.global DoReset
DoReset:
/* 800D05A0 000CC4C0  7C 08 02 A6 */	mflr r0
/* 800D05A4 000CC4C4  3C 60 80 2C */	lis r3, PADType@ha
/* 800D05A8 000CC4C8  90 01 00 04 */	stw r0, 4(r1)
/* 800D05AC 000CC4CC  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800D05B0 000CC4D0  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800D05B4 000CC4D4  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800D05B8 000CC4D8  3B C3 7B F0 */	addi r30, r3, PADType@l
/* 800D05BC 000CC4DC  38 60 00 01 */	li r3, 1
/* 800D05C0 000CC4E0  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D05C4 000CC4E4  7C 00 00 34 */	cntlzw r0, r0
/* 800D05C8 000CC4E8  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D05CC 000CC4EC  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D05D0 000CC4F0  2C 00 00 00 */	cmpwi r0, 0
/* 800D05D4 000CC4F4  41 80 00 88 */	blt lbl_800D065C
/* 800D05D8 000CC4F8  2C 00 00 04 */	cmpwi r0, 4
/* 800D05DC 000CC4FC  40 80 00 80 */	bge lbl_800D065C
/* 800D05E0 000CC500  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D05E4 000CC504  7C 7E 02 14 */	add r3, r30, r0
/* 800D05E8 000CC508  38 80 00 00 */	li r4, 0
/* 800D05EC 000CC50C  38 A0 00 0C */	li r5, 0xc
/* 800D05F0 000CC510  38 63 00 20 */	addi r3, r3, 0x20
/* 800D05F4 000CC514  4B F3 2D 2D */	bl memset
/* 800D05F8 000CC518  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D05FC 000CC51C  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D0600 000CC520  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D0604 000CC524  54 60 10 3A */	slwi r0, r3, 2
/* 800D0608 000CC528  3B E0 00 00 */	li r31, 0
/* 800D060C 000CC52C  7C DE 02 14 */	add r6, r30, r0
/* 800D0610 000CC530  97 E6 00 10 */	stwu r31, 0x10(r6)
/* 800D0614 000CC534  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D0618 000CC538  7F FE 01 2E */	stwx r31, r30, r0
/* 800D061C 000CC53C  38 A0 00 01 */	li r5, 1
/* 800D0620 000CC540  38 E0 00 03 */	li r7, 3
/* 800D0624 000CC544  39 40 00 00 */	li r10, 0
/* 800D0628 000CC548  39 20 00 00 */	li r9, 0
/* 800D062C 000CC54C  4B FF 83 95 */	bl SITransfer
/* 800D0630 000CC550  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0634 000CC554  3C 80 80 00 */	lis r4, 0x8000
/* 800D0638 000CC558  80 AD A2 90 */	lwz r5, ResettingBits@sda21(r13)
/* 800D063C 000CC55C  2C 03 00 00 */	cmpwi r3, 0
/* 800D0640 000CC560  7C 80 04 30 */	srw r0, r4, r0
/* 800D0644 000CC564  7C A0 00 78 */	andc r0, r5, r0
/* 800D0648 000CC568  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D064C 000CC56C  40 82 00 10 */	bne lbl_800D065C
/* 800D0650 000CC570  38 00 00 20 */	li r0, 0x20
/* 800D0654 000CC574  93 ED A2 90 */	stw r31, ResettingBits@sda21(r13)
/* 800D0658 000CC578  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
lbl_800D065C:
/* 800D065C 000CC57C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800D0660 000CC580  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800D0664 000CC584  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800D0668 000CC588  7C 08 03 A6 */	mtlr r0
/* 800D066C 000CC58C  38 21 00 18 */	addi r1, r1, 0x18
/* 800D0670 000CC590  4E 80 00 20 */	blr

.global PADProbeCallback
PADProbeCallback:
/* 800D0674 000CC594  7C 08 02 A6 */	mflr r0
/* 800D0678 000CC598  90 01 00 04 */	stw r0, 4(r1)
/* 800D067C 000CC59C  54 80 07 3F */	clrlwi. r0, r4, 0x1c
/* 800D0680 000CC5A0  3C 80 80 2C */	lis r4, PADType@ha
/* 800D0684 000CC5A4  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 800D0688 000CC5A8  93 E1 00 3C */	stw r31, 0x3c(r1)
/* 800D068C 000CC5AC  3B E4 7B F0 */	addi r31, r4, PADType@l
/* 800D0690 000CC5B0  93 C1 00 38 */	stw r30, 0x38(r1)
/* 800D0694 000CC5B4  93 A1 00 34 */	stw r29, 0x34(r1)
/* 800D0698 000CC5B8  40 82 01 00 */	bne lbl_800D0798
/* 800D069C 000CC5BC  54 60 10 3A */	slwi r0, r3, 2
/* 800D06A0 000CC5C0  7C 7F 02 14 */	add r3, r31, r0
/* 800D06A4 000CC5C4  80 63 00 10 */	lwz r3, 0x10(r3)
/* 800D06A8 000CC5C8  54 60 03 19 */	rlwinm. r0, r3, 0, 0xc, 0xc
/* 800D06AC 000CC5CC  40 82 00 60 */	bne lbl_800D070C
/* 800D06B0 000CC5D0  54 60 03 5B */	rlwinm. r0, r3, 0, 0xd, 0xd
/* 800D06B4 000CC5D4  40 82 00 58 */	bne lbl_800D070C
/* 800D06B8 000CC5D8  83 CD 97 98 */	lwz r30, ResettingChan@sda21(r13)
/* 800D06BC 000CC5DC  3F A0 80 00 */	lis r29, 0x8000
/* 800D06C0 000CC5E0  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D06C4 000CC5E4  38 81 00 24 */	addi r4, r1, 0x24
/* 800D06C8 000CC5E8  7F A0 F4 30 */	srw r0, r29, r30
/* 800D06CC 000CC5EC  7C 60 03 78 */	or r0, r3, r0
/* 800D06D0 000CC5F0  90 0D A2 8C */	stw r0, EnabledBits@sda21(r13)
/* 800D06D4 000CC5F4  7F C3 F3 78 */	mr r3, r30
/* 800D06D8 000CC5F8  4B FF 82 39 */	bl SIGetResponse
/* 800D06DC 000CC5FC  80 0D 97 A0 */	lwz r0, AnalogMode@sda21(r13)
/* 800D06E0 000CC600  38 7E 00 00 */	addi r3, r30, 0
/* 800D06E4 000CC604  64 04 00 40 */	oris r4, r0, 0x40
/* 800D06E8 000CC608  4B FF 80 9D */	bl SISetCommand
/* 800D06EC 000CC60C  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D06F0 000CC610  4B FF 81 19 */	bl SIEnablePolling
/* 800D06F4 000CC614  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D06F8 000CC618  80 6D A2 9C */	lwz r3, WaitingBits@sda21(r13)
/* 800D06FC 000CC61C  7F A0 04 30 */	srw r0, r29, r0
/* 800D0700 000CC620  7C 60 03 78 */	or r0, r3, r0
/* 800D0704 000CC624  90 0D A2 9C */	stw r0, WaitingBits@sda21(r13)
/* 800D0708 000CC628  48 00 00 90 */	b lbl_800D0798
lbl_800D070C:
/* 800D070C 000CC62C  83 CD 97 98 */	lwz r30, ResettingChan@sda21(r13)
/* 800D0710 000CC630  3F A0 80 00 */	lis r29, 0x8000
/* 800D0714 000CC634  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D0718 000CC638  38 81 00 18 */	addi r4, r1, 0x18
/* 800D071C 000CC63C  7F A5 F4 30 */	srw r5, r29, r30
/* 800D0720 000CC640  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D0724 000CC644  7C 63 2B 78 */	or r3, r3, r5
/* 800D0728 000CC648  90 6D A2 8C */	stw r3, EnabledBits@sda21(r13)
/* 800D072C 000CC64C  7F C3 F3 78 */	mr r3, r30
/* 800D0730 000CC650  7C 00 2B 78 */	or r0, r0, r5
/* 800D0734 000CC654  90 0D A2 94 */	stw r0, ProbingBits@sda21(r13)
/* 800D0738 000CC658  4B FF 81 D9 */	bl SIGetResponse
/* 800D073C 000CC65C  57 C0 10 3A */	slwi r0, r30, 2
/* 800D0740 000CC660  7C 7F 02 14 */	add r3, r31, r0
/* 800D0744 000CC664  80 83 00 10 */	lwz r4, 0x10(r3)
/* 800D0748 000CC668  54 80 01 8D */	rlwinm. r0, r4, 0, 6, 6
/* 800D074C 000CC66C  40 82 00 1C */	bne lbl_800D0768
/* 800D0750 000CC670  A0 1D 30 E0 */	lhz r0, 0x30e0(r29)
/* 800D0754 000CC674  57 C3 70 22 */	slwi r3, r30, 0xe
/* 800D0758 000CC678  64 63 00 4D */	oris r3, r3, 0x4d
/* 800D075C 000CC67C  54 00 04 BE */	clrlwi r0, r0, 0x12
/* 800D0760 000CC680  7C 64 03 78 */	or r4, r3, r0
/* 800D0764 000CC684  48 00 00 24 */	b lbl_800D0788
lbl_800D0768:
/* 800D0768 000CC688  54 83 03 1A */	rlwinm r3, r4, 0, 0xc, 0xd
/* 800D076C 000CC68C  3C 03 FF FC */	addis r0, r3, 0xfffc
/* 800D0770 000CC690  28 00 00 00 */	cmplwi r0, 0
/* 800D0774 000CC694  40 82 00 0C */	bne lbl_800D0780
/* 800D0778 000CC698  3C 80 00 50 */	lis r4, 0x50
/* 800D077C 000CC69C  48 00 00 0C */	b lbl_800D0788
lbl_800D0780:
/* 800D0780 000CC6A0  54 83 03 5E */	rlwinm r3, r4, 0, 0xd, 0xf
/* 800D0784 000CC6A4  3C 83 00 44 */	addis r4, r3, 0x44
lbl_800D0788:
/* 800D0788 000CC6A8  7F C3 F3 78 */	mr r3, r30
/* 800D078C 000CC6AC  4B FF 7F F9 */	bl SISetCommand
/* 800D0790 000CC6B0  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D0794 000CC6B4  4B FF 80 75 */	bl SIEnablePolling
lbl_800D0798:
/* 800D0798 000CC6B8  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D079C 000CC6BC  7C 00 00 34 */	cntlzw r0, r0
/* 800D07A0 000CC6C0  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D07A4 000CC6C4  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D07A8 000CC6C8  2C 00 00 00 */	cmpwi r0, 0
/* 800D07AC 000CC6CC  41 80 00 88 */	blt lbl_800D0834
/* 800D07B0 000CC6D0  2C 00 00 04 */	cmpwi r0, 4
/* 800D07B4 000CC6D4  40 80 00 80 */	bge lbl_800D0834
/* 800D07B8 000CC6D8  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D07BC 000CC6DC  7C 7F 02 14 */	add r3, r31, r0
/* 800D07C0 000CC6E0  38 80 00 00 */	li r4, 0
/* 800D07C4 000CC6E4  38 A0 00 0C */	li r5, 0xc
/* 800D07C8 000CC6E8  38 63 00 20 */	addi r3, r3, 0x20
/* 800D07CC 000CC6EC  4B F3 2B 55 */	bl memset
/* 800D07D0 000CC6F0  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D07D4 000CC6F4  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D07D8 000CC6F8  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D07DC 000CC6FC  54 60 10 3A */	slwi r0, r3, 2
/* 800D07E0 000CC700  3B C0 00 00 */	li r30, 0
/* 800D07E4 000CC704  7C DF 02 14 */	add r6, r31, r0
/* 800D07E8 000CC708  97 C6 00 10 */	stwu r30, 0x10(r6)
/* 800D07EC 000CC70C  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D07F0 000CC710  7F DF 01 2E */	stwx r30, r31, r0
/* 800D07F4 000CC714  38 A0 00 01 */	li r5, 1
/* 800D07F8 000CC718  38 E0 00 03 */	li r7, 3
/* 800D07FC 000CC71C  39 40 00 00 */	li r10, 0
/* 800D0800 000CC720  39 20 00 00 */	li r9, 0
/* 800D0804 000CC724  4B FF 81 BD */	bl SITransfer
/* 800D0808 000CC728  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D080C 000CC72C  3C 80 80 00 */	lis r4, 0x8000
/* 800D0810 000CC730  80 AD A2 90 */	lwz r5, ResettingBits@sda21(r13)
/* 800D0814 000CC734  2C 03 00 00 */	cmpwi r3, 0
/* 800D0818 000CC738  7C 80 04 30 */	srw r0, r4, r0
/* 800D081C 000CC73C  7C A0 00 78 */	andc r0, r5, r0
/* 800D0820 000CC740  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D0824 000CC744  40 82 00 10 */	bne lbl_800D0834
/* 800D0828 000CC748  38 00 00 20 */	li r0, 0x20
/* 800D082C 000CC74C  93 CD A2 90 */	stw r30, ResettingBits@sda21(r13)
/* 800D0830 000CC750  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
lbl_800D0834:
/* 800D0834 000CC754  80 01 00 44 */	lwz r0, 0x44(r1)
/* 800D0838 000CC758  83 E1 00 3C */	lwz r31, 0x3c(r1)
/* 800D083C 000CC75C  83 C1 00 38 */	lwz r30, 0x38(r1)
/* 800D0840 000CC760  7C 08 03 A6 */	mtlr r0
/* 800D0844 000CC764  83 A1 00 34 */	lwz r29, 0x34(r1)
/* 800D0848 000CC768  38 21 00 40 */	addi r1, r1, 0x40
/* 800D084C 000CC76C  4E 80 00 20 */	blr

.global UpdateOrigin
UpdateOrigin:
/* 800D0850 000CC770  80 0D 97 A0 */	lwz r0, AnalogMode@sda21(r13)
/* 800D0854 000CC774  3C 80 80 2C */	lis r4, Origin@ha
/* 800D0858 000CC778  3C E0 80 00 */	lis r7, 0x8000
/* 800D085C 000CC77C  54 05 05 6E */	rlwinm r5, r0, 0, 0x15, 0x17
/* 800D0860 000CC780  1C C3 00 0C */	mulli r6, r3, 0xc
/* 800D0864 000CC784  38 84 7C 10 */	addi r4, r4, Origin@l
/* 800D0868 000CC788  2C 05 04 00 */	cmpwi r5, 0x400
/* 800D086C 000CC78C  7C E0 1C 30 */	srw r0, r7, r3
/* 800D0870 000CC790  7C 84 32 14 */	add r4, r4, r6
/* 800D0874 000CC794  41 82 00 F4 */	beq lbl_800D0968
/* 800D0878 000CC798  40 80 00 34 */	bge lbl_800D08AC
/* 800D087C 000CC79C  2C 05 02 00 */	cmpwi r5, 0x200
/* 800D0880 000CC7A0  41 82 00 B8 */	beq lbl_800D0938
/* 800D0884 000CC7A4  40 80 00 1C */	bge lbl_800D08A0
/* 800D0888 000CC7A8  2C 05 01 00 */	cmpwi r5, 0x100
/* 800D088C 000CC7AC  41 82 00 78 */	beq lbl_800D0904
/* 800D0890 000CC7B0  40 80 00 D8 */	bge lbl_800D0968
/* 800D0894 000CC7B4  2C 05 00 00 */	cmpwi r5, 0
/* 800D0898 000CC7B8  41 82 00 38 */	beq lbl_800D08D0
/* 800D089C 000CC7BC  48 00 00 CC */	b lbl_800D0968
lbl_800D08A0:
/* 800D08A0 000CC7C0  2C 05 03 00 */	cmpwi r5, 0x300
/* 800D08A4 000CC7C4  41 82 00 C4 */	beq lbl_800D0968
/* 800D08A8 000CC7C8  48 00 00 C0 */	b lbl_800D0968
lbl_800D08AC:
/* 800D08AC 000CC7CC  2C 05 06 00 */	cmpwi r5, 0x600
/* 800D08B0 000CC7D0  41 82 00 20 */	beq lbl_800D08D0
/* 800D08B4 000CC7D4  40 80 00 10 */	bge lbl_800D08C4
/* 800D08B8 000CC7D8  2C 05 05 00 */	cmpwi r5, 0x500
/* 800D08BC 000CC7DC  41 82 00 14 */	beq lbl_800D08D0
/* 800D08C0 000CC7E0  48 00 00 A8 */	b lbl_800D0968
lbl_800D08C4:
/* 800D08C4 000CC7E4  2C 05 07 00 */	cmpwi r5, 0x700
/* 800D08C8 000CC7E8  41 82 00 08 */	beq lbl_800D08D0
/* 800D08CC 000CC7EC  48 00 00 9C */	b lbl_800D0968
lbl_800D08D0:
/* 800D08D0 000CC7F0  88 A4 00 06 */	lbz r5, 6(r4)
/* 800D08D4 000CC7F4  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D08D8 000CC7F8  98 A4 00 06 */	stb r5, 6(r4)
/* 800D08DC 000CC7FC  88 A4 00 07 */	lbz r5, 7(r4)
/* 800D08E0 000CC800  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D08E4 000CC804  98 A4 00 07 */	stb r5, 7(r4)
/* 800D08E8 000CC808  88 A4 00 08 */	lbz r5, 8(r4)
/* 800D08EC 000CC80C  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D08F0 000CC810  98 A4 00 08 */	stb r5, 8(r4)
/* 800D08F4 000CC814  88 A4 00 09 */	lbz r5, 9(r4)
/* 800D08F8 000CC818  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D08FC 000CC81C  98 A4 00 09 */	stb r5, 9(r4)
/* 800D0900 000CC820  48 00 00 68 */	b lbl_800D0968
lbl_800D0904:
/* 800D0904 000CC824  88 A4 00 04 */	lbz r5, 4(r4)
/* 800D0908 000CC828  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D090C 000CC82C  98 A4 00 04 */	stb r5, 4(r4)
/* 800D0910 000CC830  88 A4 00 05 */	lbz r5, 5(r4)
/* 800D0914 000CC834  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D0918 000CC838  98 A4 00 05 */	stb r5, 5(r4)
/* 800D091C 000CC83C  88 A4 00 08 */	lbz r5, 8(r4)
/* 800D0920 000CC840  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D0924 000CC844  98 A4 00 08 */	stb r5, 8(r4)
/* 800D0928 000CC848  88 A4 00 09 */	lbz r5, 9(r4)
/* 800D092C 000CC84C  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D0930 000CC850  98 A4 00 09 */	stb r5, 9(r4)
/* 800D0934 000CC854  48 00 00 34 */	b lbl_800D0968
lbl_800D0938:
/* 800D0938 000CC858  88 A4 00 04 */	lbz r5, 4(r4)
/* 800D093C 000CC85C  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D0940 000CC860  98 A4 00 04 */	stb r5, 4(r4)
/* 800D0944 000CC864  88 A4 00 05 */	lbz r5, 5(r4)
/* 800D0948 000CC868  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D094C 000CC86C  98 A4 00 05 */	stb r5, 5(r4)
/* 800D0950 000CC870  88 A4 00 06 */	lbz r5, 6(r4)
/* 800D0954 000CC874  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D0958 000CC878  98 A4 00 06 */	stb r5, 6(r4)
/* 800D095C 000CC87C  88 A4 00 07 */	lbz r5, 7(r4)
/* 800D0960 000CC880  54 A5 00 36 */	rlwinm r5, r5, 0, 0, 0x1b
/* 800D0964 000CC884  98 A4 00 07 */	stb r5, 7(r4)
lbl_800D0968:
/* 800D0968 000CC888  88 A4 00 02 */	lbz r5, 2(r4)
/* 800D096C 000CC88C  38 A5 FF 80 */	addi r5, r5, -128
/* 800D0970 000CC890  98 A4 00 02 */	stb r5, 2(r4)
/* 800D0974 000CC894  88 A4 00 03 */	lbz r5, 3(r4)
/* 800D0978 000CC898  38 A5 FF 80 */	addi r5, r5, -128
/* 800D097C 000CC89C  98 A4 00 03 */	stb r5, 3(r4)
/* 800D0980 000CC8A0  88 A4 00 04 */	lbz r5, 4(r4)
/* 800D0984 000CC8A4  38 A5 FF 80 */	addi r5, r5, -128
/* 800D0988 000CC8A8  98 A4 00 04 */	stb r5, 4(r4)
/* 800D098C 000CC8AC  88 A4 00 05 */	lbz r5, 5(r4)
/* 800D0990 000CC8B0  38 A5 FF 80 */	addi r5, r5, -128
/* 800D0994 000CC8B4  98 A4 00 05 */	stb r5, 5(r4)
/* 800D0998 000CC8B8  80 AD 97 9C */	lwz r5, XPatchBits@sda21(r13)
/* 800D099C 000CC8BC  7C A0 00 39 */	and. r0, r5, r0
/* 800D09A0 000CC8C0  4D 82 00 20 */	beqlr
/* 800D09A4 000CC8C4  88 04 00 02 */	lbz r0, 2(r4)
/* 800D09A8 000CC8C8  7C 00 07 74 */	extsb r0, r0
/* 800D09AC 000CC8CC  2C 00 00 40 */	cmpwi r0, 0x40
/* 800D09B0 000CC8D0  4C 81 00 20 */	blelr
/* 800D09B4 000CC8D4  3C A0 80 2C */	lis r5, Type@ha
/* 800D09B8 000CC8D8  54 63 10 3A */	slwi r3, r3, 2
/* 800D09BC 000CC8DC  38 05 7C 00 */	addi r0, r5, Type@l
/* 800D09C0 000CC8E0  7C 60 1A 14 */	add r3, r0, r3
/* 800D09C4 000CC8E4  80 03 00 00 */	lwz r0, 0(r3)
/* 800D09C8 000CC8E8  54 03 00 1E */	rlwinm r3, r0, 0, 0, 0xf
/* 800D09CC 000CC8EC  3C 03 F7 00 */	addis r0, r3, 0xf700
/* 800D09D0 000CC8F0  28 00 00 00 */	cmplwi r0, 0
/* 800D09D4 000CC8F4  4C 82 00 20 */	bnelr
/* 800D09D8 000CC8F8  38 00 00 00 */	li r0, 0
/* 800D09DC 000CC8FC  98 04 00 02 */	stb r0, 2(r4)
/* 800D09E0 000CC900  4E 80 00 20 */	blr

.global PADOriginCallback
PADOriginCallback:
/* 800D09E4 000CC904  7C 08 02 A6 */	mflr r0
/* 800D09E8 000CC908  3C 60 80 2C */	lis r3, PADType@ha
/* 800D09EC 000CC90C  90 01 00 04 */	stw r0, 4(r1)
/* 800D09F0 000CC910  54 80 07 3F */	clrlwi. r0, r4, 0x1c
/* 800D09F4 000CC914  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 800D09F8 000CC918  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 800D09FC 000CC91C  93 C1 00 28 */	stw r30, 0x28(r1)
/* 800D0A00 000CC920  3B C3 7B F0 */	addi r30, r3, PADType@l
/* 800D0A04 000CC924  40 82 00 48 */	bne lbl_800D0A4C
/* 800D0A08 000CC928  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D0A0C 000CC92C  4B FF FE 45 */	bl UpdateOrigin
/* 800D0A10 000CC930  83 ED 97 98 */	lwz r31, ResettingChan@sda21(r13)
/* 800D0A14 000CC934  3C 00 80 00 */	lis r0, 0x8000
/* 800D0A18 000CC938  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D0A1C 000CC93C  38 81 00 1C */	addi r4, r1, 0x1c
/* 800D0A20 000CC940  7C 00 FC 30 */	srw r0, r0, r31
/* 800D0A24 000CC944  7C 60 03 78 */	or r0, r3, r0
/* 800D0A28 000CC948  90 0D A2 8C */	stw r0, EnabledBits@sda21(r13)
/* 800D0A2C 000CC94C  7F E3 FB 78 */	mr r3, r31
/* 800D0A30 000CC950  4B FF 7E E1 */	bl SIGetResponse
/* 800D0A34 000CC954  80 0D 97 A0 */	lwz r0, AnalogMode@sda21(r13)
/* 800D0A38 000CC958  38 7F 00 00 */	addi r3, r31, 0
/* 800D0A3C 000CC95C  64 04 00 40 */	oris r4, r0, 0x40
/* 800D0A40 000CC960  4B FF 7D 45 */	bl SISetCommand
/* 800D0A44 000CC964  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D0A48 000CC968  4B FF 7D C1 */	bl SIEnablePolling
lbl_800D0A4C:
/* 800D0A4C 000CC96C  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D0A50 000CC970  7C 00 00 34 */	cntlzw r0, r0
/* 800D0A54 000CC974  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D0A58 000CC978  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0A5C 000CC97C  2C 00 00 00 */	cmpwi r0, 0
/* 800D0A60 000CC980  41 80 00 88 */	blt lbl_800D0AE8
/* 800D0A64 000CC984  2C 00 00 04 */	cmpwi r0, 4
/* 800D0A68 000CC988  40 80 00 80 */	bge lbl_800D0AE8
/* 800D0A6C 000CC98C  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D0A70 000CC990  7C 7E 02 14 */	add r3, r30, r0
/* 800D0A74 000CC994  38 80 00 00 */	li r4, 0
/* 800D0A78 000CC998  38 A0 00 0C */	li r5, 0xc
/* 800D0A7C 000CC99C  38 63 00 20 */	addi r3, r3, 0x20
/* 800D0A80 000CC9A0  4B F3 28 A1 */	bl memset
/* 800D0A84 000CC9A4  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D0A88 000CC9A8  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D0A8C 000CC9AC  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D0A90 000CC9B0  54 60 10 3A */	slwi r0, r3, 2
/* 800D0A94 000CC9B4  3B E0 00 00 */	li r31, 0
/* 800D0A98 000CC9B8  7C DE 02 14 */	add r6, r30, r0
/* 800D0A9C 000CC9BC  97 E6 00 10 */	stwu r31, 0x10(r6)
/* 800D0AA0 000CC9C0  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D0AA4 000CC9C4  7F FE 01 2E */	stwx r31, r30, r0
/* 800D0AA8 000CC9C8  38 A0 00 01 */	li r5, 1
/* 800D0AAC 000CC9CC  38 E0 00 03 */	li r7, 3
/* 800D0AB0 000CC9D0  39 40 00 00 */	li r10, 0
/* 800D0AB4 000CC9D4  39 20 00 00 */	li r9, 0
/* 800D0AB8 000CC9D8  4B FF 7F 09 */	bl SITransfer
/* 800D0ABC 000CC9DC  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0AC0 000CC9E0  3C 80 80 00 */	lis r4, 0x8000
/* 800D0AC4 000CC9E4  80 AD A2 90 */	lwz r5, ResettingBits@sda21(r13)
/* 800D0AC8 000CC9E8  2C 03 00 00 */	cmpwi r3, 0
/* 800D0ACC 000CC9EC  7C 80 04 30 */	srw r0, r4, r0
/* 800D0AD0 000CC9F0  7C A0 00 78 */	andc r0, r5, r0
/* 800D0AD4 000CC9F4  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D0AD8 000CC9F8  40 82 00 10 */	bne lbl_800D0AE8
/* 800D0ADC 000CC9FC  38 00 00 20 */	li r0, 0x20
/* 800D0AE0 000CCA00  93 ED A2 90 */	stw r31, ResettingBits@sda21(r13)
/* 800D0AE4 000CCA04  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
lbl_800D0AE8:
/* 800D0AE8 000CCA08  80 01 00 34 */	lwz r0, 0x34(r1)
/* 800D0AEC 000CCA0C  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 800D0AF0 000CCA10  83 C1 00 28 */	lwz r30, 0x28(r1)
/* 800D0AF4 000CCA14  7C 08 03 A6 */	mtlr r0
/* 800D0AF8 000CCA18  38 21 00 30 */	addi r1, r1, 0x30
/* 800D0AFC 000CCA1C  4E 80 00 20 */	blr

.global PADOriginUpdateCallback
PADOriginUpdateCallback:
/* 800D0B00 000CCA20  7C 08 02 A6 */	mflr r0
/* 800D0B04 000CCA24  90 01 00 04 */	stw r0, 4(r1)
/* 800D0B08 000CCA28  3C 00 80 00 */	lis r0, 0x8000
/* 800D0B0C 000CCA2C  7C 00 1C 30 */	srw r0, r0, r3
/* 800D0B10 000CCA30  94 21 FF F8 */	stwu r1, -8(r1)
/* 800D0B14 000CCA34  80 AD A2 8C */	lwz r5, EnabledBits@sda21(r13)
/* 800D0B18 000CCA38  7C A0 00 39 */	and. r0, r5, r0
/* 800D0B1C 000CCA3C  41 82 00 10 */	beq lbl_800D0B2C
/* 800D0B20 000CCA40  54 80 07 3F */	clrlwi. r0, r4, 0x1c
/* 800D0B24 000CCA44  40 82 00 08 */	bne lbl_800D0B2C
/* 800D0B28 000CCA48  4B FF FD 29 */	bl UpdateOrigin
lbl_800D0B2C:
/* 800D0B2C 000CCA4C  80 01 00 0C */	lwz r0, 0xc(r1)
/* 800D0B30 000CCA50  38 21 00 08 */	addi r1, r1, 8
/* 800D0B34 000CCA54  7C 08 03 A6 */	mtlr r0
/* 800D0B38 000CCA58  4E 80 00 20 */	blr

.global PADFixCallback
PADFixCallback:
/* 800D0B3C 000CCA5C  7C 08 02 A6 */	mflr r0
/* 800D0B40 000CCA60  3C 60 80 2C */	lis r3, PADType@ha
/* 800D0B44 000CCA64  90 01 00 04 */	stw r0, 4(r1)
/* 800D0B48 000CCA68  54 80 07 3F */	clrlwi. r0, r4, 0x1c
/* 800D0B4C 000CCA6C  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 800D0B50 000CCA70  93 E1 00 34 */	stw r31, 0x34(r1)
/* 800D0B54 000CCA74  3B E3 7B F0 */	addi r31, r3, PADType@l
/* 800D0B58 000CCA78  93 C1 00 30 */	stw r30, 0x30(r1)
/* 800D0B5C 000CCA7C  93 A1 00 2C */	stw r29, 0x2c(r1)
/* 800D0B60 000CCA80  40 82 01 78 */	bne lbl_800D0CD8
/* 800D0B64 000CCA84  83 CD 97 98 */	lwz r30, ResettingChan@sda21(r13)
/* 800D0B68 000CCA88  57 C0 10 3A */	slwi r0, r30, 2
/* 800D0B6C 000CCA8C  7C 7F 02 14 */	add r3, r31, r0
/* 800D0B70 000CCA90  83 A3 00 10 */	lwz r29, 0x10(r3)
/* 800D0B74 000CCA94  4B FF 70 05 */	bl __OSLockSramEx
/* 800D0B78 000CCA98  57 C0 08 3C */	slwi r0, r30, 1
/* 800D0B7C 000CCA9C  7C 63 02 14 */	add r3, r3, r0
/* 800D0B80 000CCAA0  A3 C3 00 1C */	lhz r30, 0x1c(r3)
/* 800D0B84 000CCAA4  38 60 00 00 */	li r3, 0
/* 800D0B88 000CCAA8  4B FF 73 79 */	bl __OSUnlockSramEx
/* 800D0B8C 000CCAAC  57 A0 02 D7 */	rlwinm. r0, r29, 0, 0xb, 0xb
/* 800D0B90 000CCAB0  57 C4 40 2E */	slwi r4, r30, 8
/* 800D0B94 000CCAB4  41 82 00 1C */	beq lbl_800D0BB0
/* 800D0B98 000CCAB8  3C 60 00 D0 */	lis r3, 0x00CFFF00@ha
/* 800D0B9C 000CCABC  38 03 FF 00 */	addi r0, r3, 0x00CFFF00@l
/* 800D0BA0 000CCAC0  7C 83 00 38 */	and r3, r4, r0
/* 800D0BA4 000CCAC4  7F A0 00 38 */	and r0, r29, r0
/* 800D0BA8 000CCAC8  7C 03 00 40 */	cmplw r3, r0
/* 800D0BAC 000CCACC  41 82 00 A4 */	beq lbl_800D0C50
lbl_800D0BB0:
/* 800D0BB0 000CCAD0  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D0BB4 000CCAD4  7C 00 00 34 */	cntlzw r0, r0
/* 800D0BB8 000CCAD8  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D0BBC 000CCADC  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0BC0 000CCAE0  2C 00 00 00 */	cmpwi r0, 0
/* 800D0BC4 000CCAE4  41 80 01 B0 */	blt lbl_800D0D74
/* 800D0BC8 000CCAE8  2C 00 00 04 */	cmpwi r0, 4
/* 800D0BCC 000CCAEC  40 80 01 A8 */	bge lbl_800D0D74
/* 800D0BD0 000CCAF0  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D0BD4 000CCAF4  7C 7F 02 14 */	add r3, r31, r0
/* 800D0BD8 000CCAF8  38 80 00 00 */	li r4, 0
/* 800D0BDC 000CCAFC  38 A0 00 0C */	li r5, 0xc
/* 800D0BE0 000CCB00  38 63 00 20 */	addi r3, r3, 0x20
/* 800D0BE4 000CCB04  4B F3 27 3D */	bl memset
/* 800D0BE8 000CCB08  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D0BEC 000CCB0C  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D0BF0 000CCB10  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D0BF4 000CCB14  54 60 10 3A */	slwi r0, r3, 2
/* 800D0BF8 000CCB18  3B C0 00 00 */	li r30, 0
/* 800D0BFC 000CCB1C  7C DF 02 14 */	add r6, r31, r0
/* 800D0C00 000CCB20  97 C6 00 10 */	stwu r30, 0x10(r6)
/* 800D0C04 000CCB24  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D0C08 000CCB28  7F DF 01 2E */	stwx r30, r31, r0
/* 800D0C0C 000CCB2C  38 A0 00 01 */	li r5, 1
/* 800D0C10 000CCB30  38 E0 00 03 */	li r7, 3
/* 800D0C14 000CCB34  39 40 00 00 */	li r10, 0
/* 800D0C18 000CCB38  39 20 00 00 */	li r9, 0
/* 800D0C1C 000CCB3C  4B FF 7D A5 */	bl SITransfer
/* 800D0C20 000CCB40  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0C24 000CCB44  3C 80 80 00 */	lis r4, 0x8000
/* 800D0C28 000CCB48  80 AD A2 90 */	lwz r5, ResettingBits@sda21(r13)
/* 800D0C2C 000CCB4C  2C 03 00 00 */	cmpwi r3, 0
/* 800D0C30 000CCB50  7C 80 04 30 */	srw r0, r4, r0
/* 800D0C34 000CCB54  7C A0 00 78 */	andc r0, r5, r0
/* 800D0C38 000CCB58  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D0C3C 000CCB5C  40 82 01 38 */	bne lbl_800D0D74
/* 800D0C40 000CCB60  38 00 00 20 */	li r0, 0x20
/* 800D0C44 000CCB64  93 CD A2 90 */	stw r30, ResettingBits@sda21(r13)
/* 800D0C48 000CCB68  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D0C4C 000CCB6C  48 00 01 28 */	b lbl_800D0D74
lbl_800D0C50:
/* 800D0C50 000CCB70  57 A0 00 43 */	rlwinm. r0, r29, 0, 1, 1
/* 800D0C54 000CCB74  41 82 00 48 */	beq lbl_800D0C9C
/* 800D0C58 000CCB78  57 A0 03 19 */	rlwinm. r0, r29, 0, 0xc, 0xc
/* 800D0C5C 000CCB7C  40 82 00 40 */	bne lbl_800D0C9C
/* 800D0C60 000CCB80  57 A0 03 5B */	rlwinm. r0, r29, 0, 0xd, 0xd
/* 800D0C64 000CCB84  40 82 00 38 */	bne lbl_800D0C9C
/* 800D0C68 000CCB88  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D0C6C 000CCB8C  3C 80 80 0D */	lis r4, PADOriginCallback@ha
/* 800D0C70 000CCB90  39 04 09 E4 */	addi r8, r4, PADOriginCallback@l
/* 800D0C74 000CCB94  1C 03 00 0C */	mulli r0, r3, 0xc
/* 800D0C78 000CCB98  7C DF 02 14 */	add r6, r31, r0
/* 800D0C7C 000CCB9C  38 8D 97 AC */	addi r4, r13, cmdReadOrigin@sda21
/* 800D0C80 000CCBA0  38 A0 00 01 */	li r5, 1
/* 800D0C84 000CCBA4  38 E0 00 0A */	li r7, 0xa
/* 800D0C88 000CCBA8  39 40 00 00 */	li r10, 0
/* 800D0C8C 000CCBAC  39 20 00 00 */	li r9, 0
/* 800D0C90 000CCBB0  38 C6 00 20 */	addi r6, r6, 0x20
/* 800D0C94 000CCBB4  4B FF 7D 2D */	bl SITransfer
/* 800D0C98 000CCBB8  48 00 00 DC */	b lbl_800D0D74
lbl_800D0C9C:
/* 800D0C9C 000CCBBC  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D0CA0 000CCBC0  3C 80 80 0D */	lis r4, PADProbeCallback@ha
/* 800D0CA4 000CCBC4  39 04 06 74 */	addi r8, r4, PADProbeCallback@l
/* 800D0CA8 000CCBC8  1C 03 00 0C */	mulli r0, r3, 0xc
/* 800D0CAC 000CCBCC  54 64 10 3A */	slwi r4, r3, 2
/* 800D0CB0 000CCBD0  7C 9F 22 14 */	add r4, r31, r4
/* 800D0CB4 000CCBD4  7C DF 02 14 */	add r6, r31, r0
/* 800D0CB8 000CCBD8  38 A0 00 03 */	li r5, 3
/* 800D0CBC 000CCBDC  38 E0 00 08 */	li r7, 8
/* 800D0CC0 000CCBE0  39 40 00 00 */	li r10, 0
/* 800D0CC4 000CCBE4  39 20 00 00 */	li r9, 0
/* 800D0CC8 000CCBE8  38 84 00 50 */	addi r4, r4, 0x50
/* 800D0CCC 000CCBEC  38 C6 00 20 */	addi r6, r6, 0x20
/* 800D0CD0 000CCBF0  4B FF 7C F1 */	bl SITransfer
/* 800D0CD4 000CCBF4  48 00 00 A0 */	b lbl_800D0D74
lbl_800D0CD8:
/* 800D0CD8 000CCBF8  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D0CDC 000CCBFC  7C 00 00 34 */	cntlzw r0, r0
/* 800D0CE0 000CCC00  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D0CE4 000CCC04  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0CE8 000CCC08  2C 00 00 00 */	cmpwi r0, 0
/* 800D0CEC 000CCC0C  41 80 00 88 */	blt lbl_800D0D74
/* 800D0CF0 000CCC10  2C 00 00 04 */	cmpwi r0, 4
/* 800D0CF4 000CCC14  40 80 00 80 */	bge lbl_800D0D74
/* 800D0CF8 000CCC18  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D0CFC 000CCC1C  7C 7F 02 14 */	add r3, r31, r0
/* 800D0D00 000CCC20  38 80 00 00 */	li r4, 0
/* 800D0D04 000CCC24  38 A0 00 0C */	li r5, 0xc
/* 800D0D08 000CCC28  38 63 00 20 */	addi r3, r3, 0x20
/* 800D0D0C 000CCC2C  4B F3 26 15 */	bl memset
/* 800D0D10 000CCC30  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D0D14 000CCC34  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D0D18 000CCC38  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D0D1C 000CCC3C  54 60 10 3A */	slwi r0, r3, 2
/* 800D0D20 000CCC40  3B C0 00 00 */	li r30, 0
/* 800D0D24 000CCC44  7C DF 02 14 */	add r6, r31, r0
/* 800D0D28 000CCC48  97 C6 00 10 */	stwu r30, 0x10(r6)
/* 800D0D2C 000CCC4C  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D0D30 000CCC50  7F DF 01 2E */	stwx r30, r31, r0
/* 800D0D34 000CCC54  38 A0 00 01 */	li r5, 1
/* 800D0D38 000CCC58  38 E0 00 03 */	li r7, 3
/* 800D0D3C 000CCC5C  39 40 00 00 */	li r10, 0
/* 800D0D40 000CCC60  39 20 00 00 */	li r9, 0
/* 800D0D44 000CCC64  4B FF 7C 7D */	bl SITransfer
/* 800D0D48 000CCC68  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0D4C 000CCC6C  3C 80 80 00 */	lis r4, 0x8000
/* 800D0D50 000CCC70  80 AD A2 90 */	lwz r5, ResettingBits@sda21(r13)
/* 800D0D54 000CCC74  2C 03 00 00 */	cmpwi r3, 0
/* 800D0D58 000CCC78  7C 80 04 30 */	srw r0, r4, r0
/* 800D0D5C 000CCC7C  7C A0 00 78 */	andc r0, r5, r0
/* 800D0D60 000CCC80  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D0D64 000CCC84  40 82 00 10 */	bne lbl_800D0D74
/* 800D0D68 000CCC88  38 00 00 20 */	li r0, 0x20
/* 800D0D6C 000CCC8C  93 CD A2 90 */	stw r30, ResettingBits@sda21(r13)
/* 800D0D70 000CCC90  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
lbl_800D0D74:
/* 800D0D74 000CCC94  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 800D0D78 000CCC98  83 E1 00 34 */	lwz r31, 0x34(r1)
/* 800D0D7C 000CCC9C  83 C1 00 30 */	lwz r30, 0x30(r1)
/* 800D0D80 000CCCA0  7C 08 03 A6 */	mtlr r0
/* 800D0D84 000CCCA4  83 A1 00 2C */	lwz r29, 0x2c(r1)
/* 800D0D88 000CCCA8  38 21 00 38 */	addi r1, r1, 0x38
/* 800D0D8C 000CCCAC  4E 80 00 20 */	blr

.global PADResetCallback
PADResetCallback:
/* 800D0D90 000CCCB0  7C 08 02 A6 */	mflr r0
/* 800D0D94 000CCCB4  54 85 07 3F */	clrlwi. r5, r4, 0x1c
/* 800D0D98 000CCCB8  90 01 00 04 */	stw r0, 4(r1)
/* 800D0D9C 000CCCBC  3C 60 80 2C */	lis r3, PADType@ha
/* 800D0DA0 000CCCC0  94 21 FF A0 */	stwu r1, -0x60(r1)
/* 800D0DA4 000CCCC4  BF 41 00 48 */	stmw r26, 0x48(r1)
/* 800D0DA8 000CCCC8  3B E3 7B F0 */	addi r31, r3, PADType@l
/* 800D0DAC 000CCCCC  41 82 00 18 */	beq lbl_800D0DC4
/* 800D0DB0 000CCCD0  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0DB4 000CCCD4  38 80 00 00 */	li r4, 0
/* 800D0DB8 000CCCD8  54 00 10 3A */	slwi r0, r0, 2
/* 800D0DBC 000CCCDC  7C 7F 02 14 */	add r3, r31, r0
/* 800D0DC0 000CCCE0  90 83 00 10 */	stw r4, 0x10(r3)
lbl_800D0DC4:
/* 800D0DC4 000CCCE4  83 AD 97 98 */	lwz r29, ResettingChan@sda21(r13)
/* 800D0DC8 000CCCE8  3F C0 80 00 */	lis r30, 0x8000
/* 800D0DCC 000CCCEC  28 05 00 00 */	cmplwi r5, 0
/* 800D0DD0 000CCCF0  57 A0 10 3A */	slwi r0, r29, 2
/* 800D0DD4 000CCCF4  7C 7F 02 14 */	add r3, r31, r0
/* 800D0DD8 000CCCF8  83 83 00 10 */	lwz r28, 0x10(r3)
/* 800D0DDC 000CCCFC  7F C7 EC 30 */	srw r7, r30, r29
/* 800D0DE0 000CCD00  7C E6 38 F8 */	nor r6, r7, r7
/* 800D0DE4 000CCD04  7F 9F 01 2E */	stwx r28, r31, r0
/* 800D0DE8 000CCD08  80 AD A2 98 */	lwz r5, RecalibrateBits@sda21(r13)
/* 800D0DEC 000CCD0C  80 6D A2 B0 */	lwz r3, __PADFixBits@sda21(r13)
/* 800D0DF0 000CCD10  7C A4 30 38 */	and r4, r5, r6
/* 800D0DF4 000CCD14  7C 60 30 38 */	and r0, r3, r6
/* 800D0DF8 000CCD18  90 8D A2 98 */	stw r4, RecalibrateBits@sda21(r13)
/* 800D0DFC 000CCD1C  7C BB 38 38 */	and r27, r5, r7
/* 800D0E00 000CCD20  90 0D A2 B0 */	stw r0, __PADFixBits@sda21(r13)
/* 800D0E04 000CCD24  7C 7A 38 38 */	and r26, r3, r7
/* 800D0E08 000CCD28  40 82 00 14 */	bne lbl_800D0E1C
/* 800D0E0C 000CCD2C  57 83 00 C8 */	rlwinm r3, r28, 0, 3, 4
/* 800D0E10 000CCD30  3C 03 F8 00 */	addis r0, r3, 0xf800
/* 800D0E14 000CCD34  28 00 00 00 */	cmplwi r0, 0
/* 800D0E18 000CCD38  41 82 00 D8 */	beq lbl_800D0EF0
lbl_800D0E1C:
/* 800D0E1C 000CCD3C  4B FF 6D 5D */	bl __OSLockSramEx
/* 800D0E20 000CCD40  57 A0 08 3C */	slwi r0, r29, 1
/* 800D0E24 000CCD44  7C 63 02 14 */	add r3, r3, r0
/* 800D0E28 000CCD48  A4 03 00 1C */	lhzu r0, 0x1c(r3)
/* 800D0E2C 000CCD4C  28 00 00 00 */	cmplwi r0, 0
/* 800D0E30 000CCD50  41 82 00 18 */	beq lbl_800D0E48
/* 800D0E34 000CCD54  38 00 00 00 */	li r0, 0
/* 800D0E38 000CCD58  B0 03 00 00 */	sth r0, 0(r3)
/* 800D0E3C 000CCD5C  38 60 00 01 */	li r3, 1
/* 800D0E40 000CCD60  4B FF 70 C1 */	bl __OSUnlockSramEx
/* 800D0E44 000CCD64  48 00 00 0C */	b lbl_800D0E50
lbl_800D0E48:
/* 800D0E48 000CCD68  38 60 00 00 */	li r3, 0
/* 800D0E4C 000CCD6C  4B FF 70 B5 */	bl __OSUnlockSramEx
lbl_800D0E50:
/* 800D0E50 000CCD70  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D0E54 000CCD74  7C 00 00 34 */	cntlzw r0, r0
/* 800D0E58 000CCD78  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D0E5C 000CCD7C  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0E60 000CCD80  2C 00 00 00 */	cmpwi r0, 0
/* 800D0E64 000CCD84  41 80 06 48 */	blt lbl_800D14AC
/* 800D0E68 000CCD88  2C 00 00 04 */	cmpwi r0, 4
/* 800D0E6C 000CCD8C  40 80 06 40 */	bge lbl_800D14AC
/* 800D0E70 000CCD90  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D0E74 000CCD94  7C 7F 02 14 */	add r3, r31, r0
/* 800D0E78 000CCD98  38 80 00 00 */	li r4, 0
/* 800D0E7C 000CCD9C  38 A0 00 0C */	li r5, 0xc
/* 800D0E80 000CCDA0  38 63 00 20 */	addi r3, r3, 0x20
/* 800D0E84 000CCDA4  4B F3 24 9D */	bl memset
/* 800D0E88 000CCDA8  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D0E8C 000CCDAC  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D0E90 000CCDB0  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D0E94 000CCDB4  54 60 10 3A */	slwi r0, r3, 2
/* 800D0E98 000CCDB8  3B 60 00 00 */	li r27, 0
/* 800D0E9C 000CCDBC  7C DF 02 14 */	add r6, r31, r0
/* 800D0EA0 000CCDC0  97 66 00 10 */	stwu r27, 0x10(r6)
/* 800D0EA4 000CCDC4  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D0EA8 000CCDC8  7F 7F 01 2E */	stwx r27, r31, r0
/* 800D0EAC 000CCDCC  38 A0 00 01 */	li r5, 1
/* 800D0EB0 000CCDD0  38 E0 00 03 */	li r7, 3
/* 800D0EB4 000CCDD4  39 40 00 00 */	li r10, 0
/* 800D0EB8 000CCDD8  39 20 00 00 */	li r9, 0
/* 800D0EBC 000CCDDC  4B FF 7B 05 */	bl SITransfer
/* 800D0EC0 000CCDE0  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0EC4 000CCDE4  3C 80 80 00 */	lis r4, 0x8000
/* 800D0EC8 000CCDE8  80 AD A2 90 */	lwz r5, ResettingBits@sda21(r13)
/* 800D0ECC 000CCDEC  2C 03 00 00 */	cmpwi r3, 0
/* 800D0ED0 000CCDF0  7C 80 04 30 */	srw r0, r4, r0
/* 800D0ED4 000CCDF4  7C A0 00 78 */	andc r0, r5, r0
/* 800D0ED8 000CCDF8  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D0EDC 000CCDFC  40 82 05 D0 */	bne lbl_800D14AC
/* 800D0EE0 000CCE00  38 00 00 20 */	li r0, 0x20
/* 800D0EE4 000CCE04  93 6D A2 90 */	stw r27, ResettingBits@sda21(r13)
/* 800D0EE8 000CCE08  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D0EEC 000CCE0C  48 00 05 C0 */	b lbl_800D14AC
lbl_800D0EF0:
/* 800D0EF0 000CCE10  80 0D 97 A4 */	lwz r0, MakeStatus@sda21(r13)
/* 800D0EF4 000CCE14  28 00 00 02 */	cmplwi r0, 2
/* 800D0EF8 000CCE18  40 80 00 D0 */	bge lbl_800D0FC8
/* 800D0EFC 000CCE1C  80 0D A2 8C */	lwz r0, EnabledBits@sda21(r13)
/* 800D0F00 000CCE20  38 7D 00 00 */	addi r3, r29, 0
/* 800D0F04 000CCE24  38 81 00 38 */	addi r4, r1, 0x38
/* 800D0F08 000CCE28  7C 00 3B 78 */	or r0, r0, r7
/* 800D0F0C 000CCE2C  90 0D A2 8C */	stw r0, EnabledBits@sda21(r13)
/* 800D0F10 000CCE30  4B FF 7A 01 */	bl SIGetResponse
/* 800D0F14 000CCE34  80 0D 97 A0 */	lwz r0, AnalogMode@sda21(r13)
/* 800D0F18 000CCE38  38 7D 00 00 */	addi r3, r29, 0
/* 800D0F1C 000CCE3C  64 04 00 40 */	oris r4, r0, 0x40
/* 800D0F20 000CCE40  4B FF 78 65 */	bl SISetCommand
/* 800D0F24 000CCE44  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D0F28 000CCE48  4B FF 78 E1 */	bl SIEnablePolling
/* 800D0F2C 000CCE4C  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D0F30 000CCE50  7C 00 00 34 */	cntlzw r0, r0
/* 800D0F34 000CCE54  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D0F38 000CCE58  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0F3C 000CCE5C  2C 00 00 00 */	cmpwi r0, 0
/* 800D0F40 000CCE60  41 80 05 6C */	blt lbl_800D14AC
/* 800D0F44 000CCE64  2C 00 00 04 */	cmpwi r0, 4
/* 800D0F48 000CCE68  40 80 05 64 */	bge lbl_800D14AC
/* 800D0F4C 000CCE6C  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D0F50 000CCE70  7C 7F 02 14 */	add r3, r31, r0
/* 800D0F54 000CCE74  38 80 00 00 */	li r4, 0
/* 800D0F58 000CCE78  38 A0 00 0C */	li r5, 0xc
/* 800D0F5C 000CCE7C  38 63 00 20 */	addi r3, r3, 0x20
/* 800D0F60 000CCE80  4B F3 23 C1 */	bl memset
/* 800D0F64 000CCE84  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D0F68 000CCE88  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D0F6C 000CCE8C  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D0F70 000CCE90  54 60 10 3A */	slwi r0, r3, 2
/* 800D0F74 000CCE94  3B 60 00 00 */	li r27, 0
/* 800D0F78 000CCE98  7C DF 02 14 */	add r6, r31, r0
/* 800D0F7C 000CCE9C  97 66 00 10 */	stwu r27, 0x10(r6)
/* 800D0F80 000CCEA0  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D0F84 000CCEA4  7F 7F 01 2E */	stwx r27, r31, r0
/* 800D0F88 000CCEA8  38 A0 00 01 */	li r5, 1
/* 800D0F8C 000CCEAC  38 E0 00 03 */	li r7, 3
/* 800D0F90 000CCEB0  39 40 00 00 */	li r10, 0
/* 800D0F94 000CCEB4  39 20 00 00 */	li r9, 0
/* 800D0F98 000CCEB8  4B FF 7A 29 */	bl SITransfer
/* 800D0F9C 000CCEBC  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D0FA0 000CCEC0  2C 03 00 00 */	cmpwi r3, 0
/* 800D0FA4 000CCEC4  80 6D A2 90 */	lwz r3, ResettingBits@sda21(r13)
/* 800D0FA8 000CCEC8  7F C0 04 30 */	srw r0, r30, r0
/* 800D0FAC 000CCECC  7C 60 00 78 */	andc r0, r3, r0
/* 800D0FB0 000CCED0  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D0FB4 000CCED4  40 82 04 F8 */	bne lbl_800D14AC
/* 800D0FB8 000CCED8  38 00 00 20 */	li r0, 0x20
/* 800D0FBC 000CCEDC  93 6D A2 90 */	stw r27, ResettingBits@sda21(r13)
/* 800D0FC0 000CCEE0  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D0FC4 000CCEE4  48 00 04 E8 */	b lbl_800D14AC
lbl_800D0FC8:
/* 800D0FC8 000CCEE8  57 80 00 01 */	rlwinm. r0, r28, 0, 0, 0
/* 800D0FCC 000CCEEC  41 82 00 0C */	beq lbl_800D0FD8
/* 800D0FD0 000CCEF0  57 80 01 4B */	rlwinm. r0, r28, 0, 5, 5
/* 800D0FD4 000CCEF4  41 82 01 50 */	beq lbl_800D1124
lbl_800D0FD8:
/* 800D0FD8 000CCEF8  4B FF 6B A1 */	bl __OSLockSramEx
/* 800D0FDC 000CCEFC  57 A0 08 3C */	slwi r0, r29, 1
/* 800D0FE0 000CCF00  7C 63 02 14 */	add r3, r3, r0
/* 800D0FE4 000CCF04  A4 03 00 1C */	lhzu r0, 0x1c(r3)
/* 800D0FE8 000CCF08  28 00 00 00 */	cmplwi r0, 0
/* 800D0FEC 000CCF0C  41 82 00 18 */	beq lbl_800D1004
/* 800D0FF0 000CCF10  38 00 00 00 */	li r0, 0
/* 800D0FF4 000CCF14  B0 03 00 00 */	sth r0, 0(r3)
/* 800D0FF8 000CCF18  38 60 00 01 */	li r3, 1
/* 800D0FFC 000CCF1C  4B FF 6F 05 */	bl __OSUnlockSramEx
/* 800D1000 000CCF20  48 00 00 0C */	b lbl_800D100C
lbl_800D1004:
/* 800D1004 000CCF24  38 60 00 00 */	li r3, 0
/* 800D1008 000CCF28  4B FF 6E F9 */	bl __OSUnlockSramEx
lbl_800D100C:
/* 800D100C 000CCF2C  57 80 01 CF */	rlwinm. r0, r28, 0, 7, 7
/* 800D1010 000CCF30  40 82 00 A4 */	bne lbl_800D10B4
/* 800D1014 000CCF34  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D1018 000CCF38  7C 00 00 34 */	cntlzw r0, r0
/* 800D101C 000CCF3C  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D1020 000CCF40  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D1024 000CCF44  2C 00 00 00 */	cmpwi r0, 0
/* 800D1028 000CCF48  41 80 04 84 */	blt lbl_800D14AC
/* 800D102C 000CCF4C  2C 00 00 04 */	cmpwi r0, 4
/* 800D1030 000CCF50  40 80 04 7C */	bge lbl_800D14AC
/* 800D1034 000CCF54  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D1038 000CCF58  7C 7F 02 14 */	add r3, r31, r0
/* 800D103C 000CCF5C  38 80 00 00 */	li r4, 0
/* 800D1040 000CCF60  38 A0 00 0C */	li r5, 0xc
/* 800D1044 000CCF64  38 63 00 20 */	addi r3, r3, 0x20
/* 800D1048 000CCF68  4B F3 22 D9 */	bl memset
/* 800D104C 000CCF6C  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D1050 000CCF70  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D1054 000CCF74  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D1058 000CCF78  54 60 10 3A */	slwi r0, r3, 2
/* 800D105C 000CCF7C  3B 60 00 00 */	li r27, 0
/* 800D1060 000CCF80  7C DF 02 14 */	add r6, r31, r0
/* 800D1064 000CCF84  97 66 00 10 */	stwu r27, 0x10(r6)
/* 800D1068 000CCF88  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D106C 000CCF8C  7F 7F 01 2E */	stwx r27, r31, r0
/* 800D1070 000CCF90  38 A0 00 01 */	li r5, 1
/* 800D1074 000CCF94  38 E0 00 03 */	li r7, 3
/* 800D1078 000CCF98  39 40 00 00 */	li r10, 0
/* 800D107C 000CCF9C  39 20 00 00 */	li r9, 0
/* 800D1080 000CCFA0  4B FF 79 41 */	bl SITransfer
/* 800D1084 000CCFA4  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D1088 000CCFA8  3C 80 80 00 */	lis r4, 0x8000
/* 800D108C 000CCFAC  80 AD A2 90 */	lwz r5, ResettingBits@sda21(r13)
/* 800D1090 000CCFB0  2C 03 00 00 */	cmpwi r3, 0
/* 800D1094 000CCFB4  7C 80 04 30 */	srw r0, r4, r0
/* 800D1098 000CCFB8  7C A0 00 78 */	andc r0, r5, r0
/* 800D109C 000CCFBC  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D10A0 000CCFC0  40 82 04 0C */	bne lbl_800D14AC
/* 800D10A4 000CCFC4  38 00 00 20 */	li r0, 0x20
/* 800D10A8 000CCFC8  93 6D A2 90 */	stw r27, ResettingBits@sda21(r13)
/* 800D10AC 000CCFCC  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D10B0 000CCFD0  48 00 03 FC */	b lbl_800D14AC
lbl_800D10B4:
/* 800D10B4 000CCFD4  28 1B 00 00 */	cmplwi r27, 0
/* 800D10B8 000CCFD8  41 82 00 38 */	beq lbl_800D10F0
/* 800D10BC 000CCFDC  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D10C0 000CCFE0  3C 80 80 0D */	lis r4, PADOriginCallback@ha
/* 800D10C4 000CCFE4  39 04 09 E4 */	addi r8, r4, PADOriginCallback@l
/* 800D10C8 000CCFE8  1C 03 00 0C */	mulli r0, r3, 0xc
/* 800D10CC 000CCFEC  7C DF 02 14 */	add r6, r31, r0
/* 800D10D0 000CCFF0  38 8D 97 B0 */	addi r4, r13, cmdCalibrate@sda21
/* 800D10D4 000CCFF4  38 A0 00 03 */	li r5, 3
/* 800D10D8 000CCFF8  38 E0 00 0A */	li r7, 0xa
/* 800D10DC 000CCFFC  39 40 00 00 */	li r10, 0
/* 800D10E0 000CD000  39 20 00 00 */	li r9, 0
/* 800D10E4 000CD004  38 C6 00 20 */	addi r6, r6, 0x20
/* 800D10E8 000CD008  4B FF 78 D9 */	bl SITransfer
/* 800D10EC 000CD00C  48 00 03 C0 */	b lbl_800D14AC
lbl_800D10F0:
/* 800D10F0 000CD010  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D10F4 000CD014  3C 80 80 0D */	lis r4, PADOriginCallback@ha
/* 800D10F8 000CD018  39 04 09 E4 */	addi r8, r4, PADOriginCallback@l
/* 800D10FC 000CD01C  1C 03 00 0C */	mulli r0, r3, 0xc
/* 800D1100 000CD020  7C DF 02 14 */	add r6, r31, r0
/* 800D1104 000CD024  38 8D 97 AC */	addi r4, r13, cmdReadOrigin@sda21
/* 800D1108 000CD028  38 A0 00 01 */	li r5, 1
/* 800D110C 000CD02C  38 E0 00 0A */	li r7, 0xa
/* 800D1110 000CD030  39 40 00 00 */	li r10, 0
/* 800D1114 000CD034  39 20 00 00 */	li r9, 0
/* 800D1118 000CD038  38 C6 00 20 */	addi r6, r6, 0x20
/* 800D111C 000CD03C  4B FF 78 A5 */	bl SITransfer
/* 800D1120 000CD040  48 00 03 8C */	b lbl_800D14AC
lbl_800D1124:
/* 800D1124 000CD044  4B FF 6A 55 */	bl __OSLockSramEx
/* 800D1128 000CD048  57 A0 08 3C */	slwi r0, r29, 1
/* 800D112C 000CD04C  7C 63 02 14 */	add r3, r3, r0
/* 800D1130 000CD050  A3 63 00 1C */	lhz r27, 0x1c(r3)
/* 800D1134 000CD054  38 60 00 00 */	li r3, 0
/* 800D1138 000CD058  4B FF 6D C9 */	bl __OSUnlockSramEx
/* 800D113C 000CD05C  2C 1A 00 00 */	cmpwi r26, 0
/* 800D1140 000CD060  57 7D 40 2E */	slwi r29, r27, 8
/* 800D1144 000CD064  41 82 00 54 */	beq lbl_800D1198
/* 800D1148 000CD068  57 A0 02 D7 */	rlwinm. r0, r29, 0, 0xb, 0xb
/* 800D114C 000CD06C  41 82 00 4C */	beq lbl_800D1198
/* 800D1150 000CD070  3C 80 00 D0 */	lis r4, 0x00CFFF00@ha
/* 800D1154 000CD074  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D1158 000CD078  38 04 FF 00 */	addi r0, r4, 0x00CFFF00@l
/* 800D115C 000CD07C  7F A0 00 38 */	and r0, r29, r0
/* 800D1160 000CD080  54 66 10 3A */	slwi r6, r3, 2
/* 800D1164 000CD084  7C 9F 32 14 */	add r4, r31, r6
/* 800D1168 000CD088  64 00 4E 10 */	oris r0, r0, 0x4e10
/* 800D116C 000CD08C  3C A0 80 0D */	lis r5, PADFixCallback@ha
/* 800D1170 000CD090  94 04 00 60 */	stwu r0, 0x60(r4)
/* 800D1174 000CD094  7C DF 32 14 */	add r6, r31, r6
/* 800D1178 000CD098  39 05 0B 3C */	addi r8, r5, PADFixCallback@l
/* 800D117C 000CD09C  38 A0 00 03 */	li r5, 3
/* 800D1180 000CD0A0  38 E0 00 03 */	li r7, 3
/* 800D1184 000CD0A4  39 40 00 00 */	li r10, 0
/* 800D1188 000CD0A8  39 20 00 00 */	li r9, 0
/* 800D118C 000CD0AC  38 C6 00 10 */	addi r6, r6, 0x10
/* 800D1190 000CD0B0  4B FF 78 31 */	bl SITransfer
/* 800D1194 000CD0B4  48 00 03 18 */	b lbl_800D14AC
lbl_800D1198:
/* 800D1198 000CD0B8  57 80 02 D7 */	rlwinm. r0, r28, 0, 0xb, 0xb
/* 800D119C 000CD0BC  41 82 01 24 */	beq lbl_800D12C0
/* 800D11A0 000CD0C0  3C 60 00 D0 */	lis r3, 0x00CFFF00@ha
/* 800D11A4 000CD0C4  38 63 FF 00 */	addi r3, r3, 0x00CFFF00@l
/* 800D11A8 000CD0C8  7F A0 18 38 */	and r0, r29, r3
/* 800D11AC 000CD0CC  7F 83 18 38 */	and r3, r28, r3
/* 800D11B0 000CD0D0  7C 00 18 40 */	cmplw r0, r3
/* 800D11B4 000CD0D4  41 82 00 84 */	beq lbl_800D1238
/* 800D11B8 000CD0D8  57 A0 02 D7 */	rlwinm. r0, r29, 0, 0xb, 0xb
/* 800D11BC 000CD0DC  40 82 00 40 */	bne lbl_800D11FC
/* 800D11C0 000CD0E0  64 7D 00 10 */	oris r29, r3, 0x10
/* 800D11C4 000CD0E4  83 6D 97 98 */	lwz r27, ResettingChan@sda21(r13)
/* 800D11C8 000CD0E8  4B FF 69 B1 */	bl __OSLockSramEx
/* 800D11CC 000CD0EC  57 60 08 3C */	slwi r0, r27, 1
/* 800D11D0 000CD0F0  7C 83 02 14 */	add r4, r3, r0
/* 800D11D4 000CD0F4  A4 04 00 1C */	lhzu r0, 0x1c(r4)
/* 800D11D8 000CD0F8  57 A3 C4 3E */	rlwinm r3, r29, 0x18, 0x10, 0x1f
/* 800D11DC 000CD0FC  7C 00 18 40 */	cmplw r0, r3
/* 800D11E0 000CD100  41 82 00 14 */	beq lbl_800D11F4
/* 800D11E4 000CD104  B0 64 00 00 */	sth r3, 0(r4)
/* 800D11E8 000CD108  38 60 00 01 */	li r3, 1
/* 800D11EC 000CD10C  4B FF 6D 15 */	bl __OSUnlockSramEx
/* 800D11F0 000CD110  48 00 00 0C */	b lbl_800D11FC
lbl_800D11F4:
/* 800D11F4 000CD114  38 60 00 00 */	li r3, 0
/* 800D11F8 000CD118  4B FF 6D 09 */	bl __OSUnlockSramEx
lbl_800D11FC:
/* 800D11FC 000CD11C  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D1200 000CD120  3C 80 80 0D */	lis r4, PADFixCallback@ha
/* 800D1204 000CD124  67 A0 4E 00 */	oris r0, r29, 0x4e00
/* 800D1208 000CD128  54 65 10 3A */	slwi r5, r3, 2
/* 800D120C 000CD12C  39 04 0B 3C */	addi r8, r4, PADFixCallback@l
/* 800D1210 000CD130  7C 9F 2A 14 */	add r4, r31, r5
/* 800D1214 000CD134  94 04 00 60 */	stwu r0, 0x60(r4)
/* 800D1218 000CD138  7C DF 2A 14 */	add r6, r31, r5
/* 800D121C 000CD13C  38 A0 00 03 */	li r5, 3
/* 800D1220 000CD140  38 E0 00 03 */	li r7, 3
/* 800D1224 000CD144  39 40 00 00 */	li r10, 0
/* 800D1228 000CD148  39 20 00 00 */	li r9, 0
/* 800D122C 000CD14C  38 C6 00 10 */	addi r6, r6, 0x10
/* 800D1230 000CD150  4B FF 77 91 */	bl SITransfer
/* 800D1234 000CD154  48 00 02 78 */	b lbl_800D14AC
lbl_800D1238:
/* 800D1238 000CD158  57 80 00 43 */	rlwinm. r0, r28, 0, 1, 1
/* 800D123C 000CD15C  41 82 00 48 */	beq lbl_800D1284
/* 800D1240 000CD160  57 80 03 19 */	rlwinm. r0, r28, 0, 0xc, 0xc
/* 800D1244 000CD164  40 82 00 40 */	bne lbl_800D1284
/* 800D1248 000CD168  57 80 03 5B */	rlwinm. r0, r28, 0, 0xd, 0xd
/* 800D124C 000CD16C  40 82 00 38 */	bne lbl_800D1284
/* 800D1250 000CD170  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D1254 000CD174  3C 80 80 0D */	lis r4, PADOriginCallback@ha
/* 800D1258 000CD178  39 04 09 E4 */	addi r8, r4, PADOriginCallback@l
/* 800D125C 000CD17C  1C 03 00 0C */	mulli r0, r3, 0xc
/* 800D1260 000CD180  7C DF 02 14 */	add r6, r31, r0
/* 800D1264 000CD184  38 8D 97 AC */	addi r4, r13, cmdReadOrigin@sda21
/* 800D1268 000CD188  38 A0 00 01 */	li r5, 1
/* 800D126C 000CD18C  38 E0 00 0A */	li r7, 0xa
/* 800D1270 000CD190  39 40 00 00 */	li r10, 0
/* 800D1274 000CD194  39 20 00 00 */	li r9, 0
/* 800D1278 000CD198  38 C6 00 20 */	addi r6, r6, 0x20
/* 800D127C 000CD19C  4B FF 77 45 */	bl SITransfer
/* 800D1280 000CD1A0  48 00 02 2C */	b lbl_800D14AC
lbl_800D1284:
/* 800D1284 000CD1A4  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D1288 000CD1A8  3C 80 80 0D */	lis r4, PADProbeCallback@ha
/* 800D128C 000CD1AC  39 04 06 74 */	addi r8, r4, PADProbeCallback@l
/* 800D1290 000CD1B0  1C 03 00 0C */	mulli r0, r3, 0xc
/* 800D1294 000CD1B4  54 64 10 3A */	slwi r4, r3, 2
/* 800D1298 000CD1B8  7C 9F 22 14 */	add r4, r31, r4
/* 800D129C 000CD1BC  7C DF 02 14 */	add r6, r31, r0
/* 800D12A0 000CD1C0  38 A0 00 03 */	li r5, 3
/* 800D12A4 000CD1C4  38 E0 00 08 */	li r7, 8
/* 800D12A8 000CD1C8  39 40 00 00 */	li r10, 0
/* 800D12AC 000CD1CC  39 20 00 00 */	li r9, 0
/* 800D12B0 000CD1D0  38 84 00 50 */	addi r4, r4, 0x50
/* 800D12B4 000CD1D4  38 C6 00 20 */	addi r6, r6, 0x20
/* 800D12B8 000CD1D8  4B FF 77 09 */	bl SITransfer
/* 800D12BC 000CD1DC  48 00 01 F0 */	b lbl_800D14AC
lbl_800D12C0:
/* 800D12C0 000CD1E0  57 80 00 43 */	rlwinm. r0, r28, 0, 1, 1
/* 800D12C4 000CD1E4  41 82 00 88 */	beq lbl_800D134C
/* 800D12C8 000CD1E8  3C 60 00 D0 */	lis r3, 0x00CFFF00@ha
/* 800D12CC 000CD1EC  83 6D 97 98 */	lwz r27, ResettingChan@sda21(r13)
/* 800D12D0 000CD1F0  38 03 FF 00 */	addi r0, r3, 0x00CFFF00@l
/* 800D12D4 000CD1F4  7F 9A 00 38 */	and r26, r28, r0
/* 800D12D8 000CD1F8  67 5A 00 10 */	oris r26, r26, 0x10
/* 800D12DC 000CD1FC  4B FF 68 9D */	bl __OSLockSramEx
/* 800D12E0 000CD200  57 60 08 3C */	slwi r0, r27, 1
/* 800D12E4 000CD204  7C 83 02 14 */	add r4, r3, r0
/* 800D12E8 000CD208  A4 04 00 1C */	lhzu r0, 0x1c(r4)
/* 800D12EC 000CD20C  57 43 C4 3E */	rlwinm r3, r26, 0x18, 0x10, 0x1f
/* 800D12F0 000CD210  7C 00 18 40 */	cmplw r0, r3
/* 800D12F4 000CD214  41 82 00 14 */	beq lbl_800D1308
/* 800D12F8 000CD218  B0 64 00 00 */	sth r3, 0(r4)
/* 800D12FC 000CD21C  38 60 00 01 */	li r3, 1
/* 800D1300 000CD220  4B FF 6C 01 */	bl __OSUnlockSramEx
/* 800D1304 000CD224  48 00 00 0C */	b lbl_800D1310
lbl_800D1308:
/* 800D1308 000CD228  38 60 00 00 */	li r3, 0
/* 800D130C 000CD22C  4B FF 6B F5 */	bl __OSUnlockSramEx
lbl_800D1310:
/* 800D1310 000CD230  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D1314 000CD234  3C 80 80 0D */	lis r4, PADFixCallback@ha
/* 800D1318 000CD238  67 40 4E 00 */	oris r0, r26, 0x4e00
/* 800D131C 000CD23C  54 65 10 3A */	slwi r5, r3, 2
/* 800D1320 000CD240  39 04 0B 3C */	addi r8, r4, PADFixCallback@l
/* 800D1324 000CD244  7C 9F 2A 14 */	add r4, r31, r5
/* 800D1328 000CD248  94 04 00 60 */	stwu r0, 0x60(r4)
/* 800D132C 000CD24C  7C DF 2A 14 */	add r6, r31, r5
/* 800D1330 000CD250  38 A0 00 03 */	li r5, 3
/* 800D1334 000CD254  38 E0 00 03 */	li r7, 3
/* 800D1338 000CD258  39 40 00 00 */	li r10, 0
/* 800D133C 000CD25C  39 20 00 00 */	li r9, 0
/* 800D1340 000CD260  38 C6 00 10 */	addi r6, r6, 0x10
/* 800D1344 000CD264  4B FF 76 7D */	bl SITransfer
/* 800D1348 000CD268  48 00 01 64 */	b lbl_800D14AC
lbl_800D134C:
/* 800D134C 000CD26C  83 6D 97 98 */	lwz r27, ResettingChan@sda21(r13)
/* 800D1350 000CD270  4B FF 68 29 */	bl __OSLockSramEx
/* 800D1354 000CD274  57 60 08 3C */	slwi r0, r27, 1
/* 800D1358 000CD278  7C 63 02 14 */	add r3, r3, r0
/* 800D135C 000CD27C  A4 03 00 1C */	lhzu r0, 0x1c(r3)
/* 800D1360 000CD280  28 00 00 00 */	cmplwi r0, 0
/* 800D1364 000CD284  41 82 00 18 */	beq lbl_800D137C
/* 800D1368 000CD288  38 00 00 00 */	li r0, 0
/* 800D136C 000CD28C  B0 03 00 00 */	sth r0, 0(r3)
/* 800D1370 000CD290  38 60 00 01 */	li r3, 1
/* 800D1374 000CD294  4B FF 6B 8D */	bl __OSUnlockSramEx
/* 800D1378 000CD298  48 00 00 0C */	b lbl_800D1384
lbl_800D137C:
/* 800D137C 000CD29C  38 60 00 00 */	li r3, 0
/* 800D1380 000CD2A0  4B FF 6B 81 */	bl __OSUnlockSramEx
lbl_800D1384:
/* 800D1384 000CD2A4  83 AD 97 98 */	lwz r29, ResettingChan@sda21(r13)
/* 800D1388 000CD2A8  3F 60 80 00 */	lis r27, 0x8000
/* 800D138C 000CD2AC  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D1390 000CD2B0  38 81 00 1C */	addi r4, r1, 0x1c
/* 800D1394 000CD2B4  7F 65 EC 30 */	srw r5, r27, r29
/* 800D1398 000CD2B8  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D139C 000CD2BC  7C 63 2B 78 */	or r3, r3, r5
/* 800D13A0 000CD2C0  90 6D A2 8C */	stw r3, EnabledBits@sda21(r13)
/* 800D13A4 000CD2C4  7F A3 EB 78 */	mr r3, r29
/* 800D13A8 000CD2C8  7C 00 2B 78 */	or r0, r0, r5
/* 800D13AC 000CD2CC  90 0D A2 94 */	stw r0, ProbingBits@sda21(r13)
/* 800D13B0 000CD2D0  4B FF 75 61 */	bl SIGetResponse
/* 800D13B4 000CD2D4  57 A0 10 3A */	slwi r0, r29, 2
/* 800D13B8 000CD2D8  7C 7F 02 14 */	add r3, r31, r0
/* 800D13BC 000CD2DC  80 83 00 10 */	lwz r4, 0x10(r3)
/* 800D13C0 000CD2E0  54 80 01 8D */	rlwinm. r0, r4, 0, 6, 6
/* 800D13C4 000CD2E4  40 82 00 1C */	bne lbl_800D13E0
/* 800D13C8 000CD2E8  A0 1B 30 E0 */	lhz r0, 0x30e0(r27)
/* 800D13CC 000CD2EC  57 A3 70 22 */	slwi r3, r29, 0xe
/* 800D13D0 000CD2F0  64 63 00 4D */	oris r3, r3, 0x4d
/* 800D13D4 000CD2F4  54 00 04 BE */	clrlwi r0, r0, 0x12
/* 800D13D8 000CD2F8  7C 64 03 78 */	or r4, r3, r0
/* 800D13DC 000CD2FC  48 00 00 24 */	b lbl_800D1400
lbl_800D13E0:
/* 800D13E0 000CD300  54 83 03 1A */	rlwinm r3, r4, 0, 0xc, 0xd
/* 800D13E4 000CD304  3C 03 FF FC */	addis r0, r3, 0xfffc
/* 800D13E8 000CD308  28 00 00 00 */	cmplwi r0, 0
/* 800D13EC 000CD30C  40 82 00 0C */	bne lbl_800D13F8
/* 800D13F0 000CD310  3C 80 00 50 */	lis r4, 0x50
/* 800D13F4 000CD314  48 00 00 0C */	b lbl_800D1400
lbl_800D13F8:
/* 800D13F8 000CD318  54 83 03 5E */	rlwinm r3, r4, 0, 0xd, 0xf
/* 800D13FC 000CD31C  3C 83 00 44 */	addis r4, r3, 0x44
lbl_800D1400:
/* 800D1400 000CD320  7F A3 EB 78 */	mr r3, r29
/* 800D1404 000CD324  4B FF 73 81 */	bl SISetCommand
/* 800D1408 000CD328  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D140C 000CD32C  4B FF 73 FD */	bl SIEnablePolling
/* 800D1410 000CD330  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D1414 000CD334  7C 00 00 34 */	cntlzw r0, r0
/* 800D1418 000CD338  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D141C 000CD33C  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D1420 000CD340  2C 00 00 00 */	cmpwi r0, 0
/* 800D1424 000CD344  41 80 00 88 */	blt lbl_800D14AC
/* 800D1428 000CD348  2C 00 00 04 */	cmpwi r0, 4
/* 800D142C 000CD34C  40 80 00 80 */	bge lbl_800D14AC
/* 800D1430 000CD350  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D1434 000CD354  7C 7F 02 14 */	add r3, r31, r0
/* 800D1438 000CD358  38 80 00 00 */	li r4, 0
/* 800D143C 000CD35C  38 A0 00 0C */	li r5, 0xc
/* 800D1440 000CD360  38 63 00 20 */	addi r3, r3, 0x20
/* 800D1444 000CD364  4B F3 1E DD */	bl memset
/* 800D1448 000CD368  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D144C 000CD36C  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D1450 000CD370  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D1454 000CD374  54 60 10 3A */	slwi r0, r3, 2
/* 800D1458 000CD378  3B 60 00 00 */	li r27, 0
/* 800D145C 000CD37C  7C DF 02 14 */	add r6, r31, r0
/* 800D1460 000CD380  97 66 00 10 */	stwu r27, 0x10(r6)
/* 800D1464 000CD384  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D1468 000CD388  7F 7F 01 2E */	stwx r27, r31, r0
/* 800D146C 000CD38C  38 A0 00 01 */	li r5, 1
/* 800D1470 000CD390  38 E0 00 03 */	li r7, 3
/* 800D1474 000CD394  39 40 00 00 */	li r10, 0
/* 800D1478 000CD398  39 20 00 00 */	li r9, 0
/* 800D147C 000CD39C  4B FF 75 45 */	bl SITransfer
/* 800D1480 000CD3A0  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D1484 000CD3A4  3C 80 80 00 */	lis r4, 0x8000
/* 800D1488 000CD3A8  80 AD A2 90 */	lwz r5, ResettingBits@sda21(r13)
/* 800D148C 000CD3AC  2C 03 00 00 */	cmpwi r3, 0
/* 800D1490 000CD3B0  7C 80 04 30 */	srw r0, r4, r0
/* 800D1494 000CD3B4  7C A0 00 78 */	andc r0, r5, r0
/* 800D1498 000CD3B8  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D149C 000CD3BC  40 82 00 10 */	bne lbl_800D14AC
/* 800D14A0 000CD3C0  38 00 00 20 */	li r0, 0x20
/* 800D14A4 000CD3C4  93 6D A2 90 */	stw r27, ResettingBits@sda21(r13)
/* 800D14A8 000CD3C8  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
lbl_800D14AC:
/* 800D14AC 000CD3CC  BB 41 00 48 */	lmw r26, 0x48(r1)
/* 800D14B0 000CD3D0  80 01 00 64 */	lwz r0, 0x64(r1)
/* 800D14B4 000CD3D4  38 21 00 60 */	addi r1, r1, 0x60
/* 800D14B8 000CD3D8  7C 08 03 A6 */	mtlr r0
/* 800D14BC 000CD3DC  4E 80 00 20 */	blr

.global PADReset
PADReset:
/* 800D14C0 000CD3E0  7C 08 02 A6 */	mflr r0
/* 800D14C4 000CD3E4  3C 80 80 2C */	lis r4, PADType@ha
/* 800D14C8 000CD3E8  90 01 00 04 */	stw r0, 4(r1)
/* 800D14CC 000CD3EC  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800D14D0 000CD3F0  93 E1 00 24 */	stw r31, 0x24(r1)
/* 800D14D4 000CD3F4  3B E4 7B F0 */	addi r31, r4, PADType@l
/* 800D14D8 000CD3F8  93 C1 00 20 */	stw r30, 0x20(r1)
/* 800D14DC 000CD3FC  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 800D14E0 000CD400  3B A0 00 00 */	li r29, 0
/* 800D14E4 000CD404  93 81 00 18 */	stw r28, 0x18(r1)
/* 800D14E8 000CD408  3B 83 00 00 */	addi r28, r3, 0
/* 800D14EC 000CD40C  4B FF 4B D1 */	bl OSDisableInterrupts
/* 800D14F0 000CD410  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D14F4 000CD414  7C 7E 1B 78 */	mr r30, r3
/* 800D14F8 000CD418  80 CD A2 9C */	lwz r6, WaitingBits@sda21(r13)
/* 800D14FC 000CD41C  80 8D A2 A0 */	lwz r4, CheckingBits@sda21(r13)
/* 800D1500 000CD420  7C 03 33 78 */	or r3, r0, r6
/* 800D1504 000CD424  80 0D 97 A4 */	lwz r0, MakeStatus@sda21(r13)
/* 800D1508 000CD428  7C 83 1B 78 */	or r3, r4, r3
/* 800D150C 000CD42C  80 8D A2 90 */	lwz r4, ResettingBits@sda21(r13)
/* 800D1510 000CD430  7F 9C 18 78 */	andc r28, r28, r3
/* 800D1514 000CD434  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D1518 000CD438  7C 85 E3 78 */	or r5, r4, r28
/* 800D151C 000CD43C  7F 87 E0 F8 */	nor r7, r28, r28
/* 800D1520 000CD440  90 AD A2 90 */	stw r5, ResettingBits@sda21(r13)
/* 800D1524 000CD444  7C 64 38 38 */	and r4, r3, r7
/* 800D1528 000CD448  7C C3 38 38 */	and r3, r6, r7
/* 800D152C 000CD44C  90 8D A2 8C */	stw r4, EnabledBits@sda21(r13)
/* 800D1530 000CD450  28 00 00 04 */	cmplwi r0, 4
/* 800D1534 000CD454  90 6D A2 9C */	stw r3, WaitingBits@sda21(r13)
/* 800D1538 000CD458  40 82 00 10 */	bne lbl_800D1548
/* 800D153C 000CD45C  80 0D A2 98 */	lwz r0, RecalibrateBits@sda21(r13)
/* 800D1540 000CD460  7C 00 E3 78 */	or r0, r0, r28
/* 800D1544 000CD464  90 0D A2 98 */	stw r0, RecalibrateBits@sda21(r13)
lbl_800D1548:
/* 800D1548 000CD468  80 6D A2 90 */	lwz r3, ResettingBits@sda21(r13)
/* 800D154C 000CD46C  4B FF 73 59 */	bl SIDisablePolling
/* 800D1550 000CD470  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D1554 000CD474  2C 00 00 20 */	cmpwi r0, 0x20
/* 800D1558 000CD478  40 82 00 A8 */	bne lbl_800D1600
/* 800D155C 000CD47C  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D1560 000CD480  38 60 00 01 */	li r3, 1
/* 800D1564 000CD484  7C 00 00 34 */	cntlzw r0, r0
/* 800D1568 000CD488  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D156C 000CD48C  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D1570 000CD490  2C 00 00 00 */	cmpwi r0, 0
/* 800D1574 000CD494  41 80 00 88 */	blt lbl_800D15FC
/* 800D1578 000CD498  2C 00 00 04 */	cmpwi r0, 4
/* 800D157C 000CD49C  40 80 00 80 */	bge lbl_800D15FC
/* 800D1580 000CD4A0  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D1584 000CD4A4  7C 7F 02 14 */	add r3, r31, r0
/* 800D1588 000CD4A8  38 80 00 00 */	li r4, 0
/* 800D158C 000CD4AC  38 A0 00 0C */	li r5, 0xc
/* 800D1590 000CD4B0  38 63 00 20 */	addi r3, r3, 0x20
/* 800D1594 000CD4B4  4B F3 1D 8D */	bl memset
/* 800D1598 000CD4B8  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D159C 000CD4BC  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D15A0 000CD4C0  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D15A4 000CD4C4  54 60 10 3A */	slwi r0, r3, 2
/* 800D15A8 000CD4C8  3B 80 00 00 */	li r28, 0
/* 800D15AC 000CD4CC  7C DF 02 14 */	add r6, r31, r0
/* 800D15B0 000CD4D0  97 86 00 10 */	stwu r28, 0x10(r6)
/* 800D15B4 000CD4D4  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D15B8 000CD4D8  7F 9F 01 2E */	stwx r28, r31, r0
/* 800D15BC 000CD4DC  38 A0 00 01 */	li r5, 1
/* 800D15C0 000CD4E0  38 E0 00 03 */	li r7, 3
/* 800D15C4 000CD4E4  39 40 00 00 */	li r10, 0
/* 800D15C8 000CD4E8  39 20 00 00 */	li r9, 0
/* 800D15CC 000CD4EC  4B FF 73 F5 */	bl SITransfer
/* 800D15D0 000CD4F0  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D15D4 000CD4F4  3C 80 80 00 */	lis r4, 0x8000
/* 800D15D8 000CD4F8  80 AD A2 90 */	lwz r5, ResettingBits@sda21(r13)
/* 800D15DC 000CD4FC  2C 03 00 00 */	cmpwi r3, 0
/* 800D15E0 000CD500  7C 80 04 30 */	srw r0, r4, r0
/* 800D15E4 000CD504  7C A0 00 78 */	andc r0, r5, r0
/* 800D15E8 000CD508  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D15EC 000CD50C  40 82 00 10 */	bne lbl_800D15FC
/* 800D15F0 000CD510  38 00 00 20 */	li r0, 0x20
/* 800D15F4 000CD514  93 8D A2 90 */	stw r28, ResettingBits@sda21(r13)
/* 800D15F8 000CD518  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
lbl_800D15FC:
/* 800D15FC 000CD51C  7C 7D 1B 78 */	mr r29, r3
lbl_800D1600:
/* 800D1600 000CD520  7F C3 F3 78 */	mr r3, r30
/* 800D1604 000CD524  4B FF 4A E1 */	bl OSRestoreInterrupts
/* 800D1608 000CD528  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800D160C 000CD52C  7F A3 EB 78 */	mr r3, r29
/* 800D1610 000CD530  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800D1614 000CD534  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800D1618 000CD538  7C 08 03 A6 */	mtlr r0
/* 800D161C 000CD53C  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 800D1620 000CD540  83 81 00 18 */	lwz r28, 0x18(r1)
/* 800D1624 000CD544  38 21 00 28 */	addi r1, r1, 0x28
/* 800D1628 000CD548  4E 80 00 20 */	blr

.global PADRecalibrate
PADRecalibrate:
/* 800D162C 000CD54C  7C 08 02 A6 */	mflr r0
/* 800D1630 000CD550  3C 80 80 2C */	lis r4, PADType@ha
/* 800D1634 000CD554  90 01 00 04 */	stw r0, 4(r1)
/* 800D1638 000CD558  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800D163C 000CD55C  93 E1 00 24 */	stw r31, 0x24(r1)
/* 800D1640 000CD560  3B E4 7B F0 */	addi r31, r4, PADType@l
/* 800D1644 000CD564  93 C1 00 20 */	stw r30, 0x20(r1)
/* 800D1648 000CD568  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 800D164C 000CD56C  3B A0 00 00 */	li r29, 0
/* 800D1650 000CD570  93 81 00 18 */	stw r28, 0x18(r1)
/* 800D1654 000CD574  3B 83 00 00 */	addi r28, r3, 0
/* 800D1658 000CD578  4B FF 4A 65 */	bl OSDisableInterrupts
/* 800D165C 000CD57C  80 8D A2 94 */	lwz r4, ProbingBits@sda21(r13)
/* 800D1660 000CD580  7C 7E 1B 78 */	mr r30, r3
/* 800D1664 000CD584  80 0D A2 9C */	lwz r0, WaitingBits@sda21(r13)
/* 800D1668 000CD588  80 6D A2 A0 */	lwz r3, CheckingBits@sda21(r13)
/* 800D166C 000CD58C  7C 80 03 78 */	or r0, r4, r0
/* 800D1670 000CD590  80 8D A2 90 */	lwz r4, ResettingBits@sda21(r13)
/* 800D1674 000CD594  7C 60 03 78 */	or r0, r3, r0
/* 800D1678 000CD598  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D167C 000CD59C  7F 9C 00 78 */	andc r28, r28, r0
/* 800D1680 000CD5A0  80 0D A2 98 */	lwz r0, RecalibrateBits@sda21(r13)
/* 800D1684 000CD5A4  7C 84 E3 78 */	or r4, r4, r28
/* 800D1688 000CD5A8  7C 63 E0 78 */	andc r3, r3, r28
/* 800D168C 000CD5AC  90 8D A2 90 */	stw r4, ResettingBits@sda21(r13)
/* 800D1690 000CD5B0  7C 00 E3 78 */	or r0, r0, r28
/* 800D1694 000CD5B4  90 6D A2 8C */	stw r3, EnabledBits@sda21(r13)
/* 800D1698 000CD5B8  80 6D A2 90 */	lwz r3, ResettingBits@sda21(r13)
/* 800D169C 000CD5BC  90 0D A2 98 */	stw r0, RecalibrateBits@sda21(r13)
/* 800D16A0 000CD5C0  4B FF 72 05 */	bl SIDisablePolling
/* 800D16A4 000CD5C4  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D16A8 000CD5C8  2C 00 00 20 */	cmpwi r0, 0x20
/* 800D16AC 000CD5CC  40 82 00 A8 */	bne lbl_800D1754
/* 800D16B0 000CD5D0  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D16B4 000CD5D4  38 60 00 01 */	li r3, 1
/* 800D16B8 000CD5D8  7C 00 00 34 */	cntlzw r0, r0
/* 800D16BC 000CD5DC  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
/* 800D16C0 000CD5E0  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D16C4 000CD5E4  2C 00 00 00 */	cmpwi r0, 0
/* 800D16C8 000CD5E8  41 80 00 88 */	blt lbl_800D1750
/* 800D16CC 000CD5EC  2C 00 00 04 */	cmpwi r0, 4
/* 800D16D0 000CD5F0  40 80 00 80 */	bge lbl_800D1750
/* 800D16D4 000CD5F4  1C 00 00 0C */	mulli r0, r0, 0xc
/* 800D16D8 000CD5F8  7C 7F 02 14 */	add r3, r31, r0
/* 800D16DC 000CD5FC  38 80 00 00 */	li r4, 0
/* 800D16E0 000CD600  38 A0 00 0C */	li r5, 0xc
/* 800D16E4 000CD604  38 63 00 20 */	addi r3, r3, 0x20
/* 800D16E8 000CD608  4B F3 1C 39 */	bl memset
/* 800D16EC 000CD60C  80 6D 97 98 */	lwz r3, ResettingChan@sda21(r13)
/* 800D16F0 000CD610  3C 80 80 0D */	lis r4, PADResetCallback@ha
/* 800D16F4 000CD614  39 04 0D 90 */	addi r8, r4, PADResetCallback@l
/* 800D16F8 000CD618  54 60 10 3A */	slwi r0, r3, 2
/* 800D16FC 000CD61C  3B A0 00 00 */	li r29, 0
/* 800D1700 000CD620  7C DF 02 14 */	add r6, r31, r0
/* 800D1704 000CD624  97 A6 00 10 */	stwu r29, 0x10(r6)
/* 800D1708 000CD628  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D170C 000CD62C  7F BF 01 2E */	stwx r29, r31, r0
/* 800D1710 000CD630  38 A0 00 01 */	li r5, 1
/* 800D1714 000CD634  38 E0 00 03 */	li r7, 3
/* 800D1718 000CD638  39 40 00 00 */	li r10, 0
/* 800D171C 000CD63C  39 20 00 00 */	li r9, 0
/* 800D1720 000CD640  4B FF 72 A1 */	bl SITransfer
/* 800D1724 000CD644  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D1728 000CD648  3C 80 80 00 */	lis r4, 0x8000
/* 800D172C 000CD64C  80 AD A2 90 */	lwz r5, ResettingBits@sda21(r13)
/* 800D1730 000CD650  2C 03 00 00 */	cmpwi r3, 0
/* 800D1734 000CD654  7C 80 04 30 */	srw r0, r4, r0
/* 800D1738 000CD658  7C A0 00 78 */	andc r0, r5, r0
/* 800D173C 000CD65C  90 0D A2 90 */	stw r0, ResettingBits@sda21(r13)
/* 800D1740 000CD660  40 82 00 10 */	bne lbl_800D1750
/* 800D1744 000CD664  38 00 00 20 */	li r0, 0x20
/* 800D1748 000CD668  93 AD A2 90 */	stw r29, ResettingBits@sda21(r13)
/* 800D174C 000CD66C  90 0D 97 98 */	stw r0, ResettingChan@sda21(r13)
lbl_800D1750:
/* 800D1750 000CD670  7C 7D 1B 78 */	mr r29, r3
lbl_800D1754:
/* 800D1754 000CD674  7F C3 F3 78 */	mr r3, r30
/* 800D1758 000CD678  4B FF 49 8D */	bl OSRestoreInterrupts
/* 800D175C 000CD67C  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800D1760 000CD680  7F A3 EB 78 */	mr r3, r29
/* 800D1764 000CD684  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800D1768 000CD688  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800D176C 000CD68C  7C 08 03 A6 */	mtlr r0
/* 800D1770 000CD690  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 800D1774 000CD694  83 81 00 18 */	lwz r28, 0x18(r1)
/* 800D1778 000CD698  38 21 00 28 */	addi r1, r1, 0x28
/* 800D177C 000CD69C  4E 80 00 20 */	blr

.global PADInit
PADInit:
/* 800D1780 000CD6A0  7C 08 02 A6 */	mflr r0
/* 800D1784 000CD6A4  3C 60 80 2C */	lis r3, PADType@ha
/* 800D1788 000CD6A8  90 01 00 04 */	stw r0, 4(r1)
/* 800D178C 000CD6AC  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 800D1790 000CD6B0  BF 21 00 1C */	stmw r25, 0x1c(r1)
/* 800D1794 000CD6B4  3B E3 7B F0 */	addi r31, r3, PADType@l
/* 800D1798 000CD6B8  80 0D A2 88 */	lwz r0, lbl_802F2468@sda21(r13)
/* 800D179C 000CD6BC  2C 00 00 00 */	cmpwi r0, 0
/* 800D17A0 000CD6C0  40 82 01 04 */	bne lbl_800D18A4
/* 800D17A4 000CD6C4  80 6D A2 AC */	lwz r3, __PADSpec@sda21(r13)
/* 800D17A8 000CD6C8  28 03 00 00 */	cmplwi r3, 0
/* 800D17AC 000CD6CC  41 82 00 08 */	beq lbl_800D17B4
/* 800D17B0 000CD6D0  48 00 08 61 */	bl PADSetSpec
lbl_800D17B4:
/* 800D17B4 000CD6D4  80 6D A2 B0 */	lwz r3, __PADFixBits@sda21(r13)
/* 800D17B8 000CD6D8  3C 03 00 01 */	addis r0, r3, 1
/* 800D17BC 000CD6DC  28 00 FF FF */	cmplwi r0, 0xffff
/* 800D17C0 000CD6E0  40 82 00 84 */	bne lbl_800D1844
/* 800D17C4 000CD6E4  4B FF 81 B9 */	bl OSGetTime
/* 800D17C8 000CD6E8  3B 24 00 00 */	addi r25, r4, 0
/* 800D17CC 000CD6EC  3B 43 00 00 */	addi r26, r3, 0
/* 800D17D0 000CD6F0  38 A0 00 10 */	li r5, 0x10
/* 800D17D4 000CD6F4  48 03 22 51 */	bl __shr2i
/* 800D17D8 000CD6F8  3C A0 00 01 */	lis r5, 0x0000FFFF@ha
/* 800D17DC 000CD6FC  3B 65 FF FF */	addi r27, r5, 0x0000FFFF@l
/* 800D17E0 000CD700  3B 80 00 00 */	li r28, 0
/* 800D17E4 000CD704  7C 86 D8 38 */	and r6, r4, r27
/* 800D17E8 000CD708  7F 24 D8 38 */	and r4, r25, r27
/* 800D17EC 000CD70C  7C 65 E0 38 */	and r5, r3, r28
/* 800D17F0 000CD710  7F 40 E0 38 */	and r0, r26, r28
/* 800D17F4 000CD714  7F A4 30 14 */	addc r29, r4, r6
/* 800D17F8 000CD718  38 7A 00 00 */	addi r3, r26, 0
/* 800D17FC 000CD71C  38 99 00 00 */	addi r4, r25, 0
/* 800D1800 000CD720  7F C0 29 14 */	adde r30, r0, r5
/* 800D1804 000CD724  38 A0 00 20 */	li r5, 0x20
/* 800D1808 000CD728  48 03 22 1D */	bl __shr2i
/* 800D180C 000CD72C  7C 84 D8 38 */	and r4, r4, r27
/* 800D1810 000CD730  7C 60 E0 38 */	and r0, r3, r28
/* 800D1814 000CD734  7F A4 E8 14 */	addc r29, r4, r29
/* 800D1818 000CD738  38 7A 00 00 */	addi r3, r26, 0
/* 800D181C 000CD73C  38 99 00 00 */	addi r4, r25, 0
/* 800D1820 000CD740  7F C0 F1 14 */	adde r30, r0, r30
/* 800D1824 000CD744  38 A0 00 30 */	li r5, 0x30
/* 800D1828 000CD748  48 03 21 FD */	bl __shr2i
/* 800D182C 000CD74C  7C 80 D8 38 */	and r0, r4, r27
/* 800D1830 000CD750  7C 80 E8 14 */	addc r4, r0, r29
/* 800D1834 000CD754  38 00 3F FF */	li r0, 0x3fff
/* 800D1838 000CD758  7C 80 00 38 */	and r0, r4, r0
/* 800D183C 000CD75C  3C 60 80 00 */	lis r3, 0x800030E0@ha
/* 800D1840 000CD760  B0 03 30 E0 */	sth r0, 0x800030E0@l(r3)
lbl_800D1844:
/* 800D1844 000CD764  3C A0 80 00 */	lis r5, 0x800030E0@ha
/* 800D1848 000CD768  A0 85 30 E0 */	lhz r4, 0x800030E0@l(r5)
/* 800D184C 000CD76C  38 00 00 01 */	li r0, 1
/* 800D1850 000CD770  38 60 00 00 */	li r3, 0
/* 800D1854 000CD774  54 84 42 AE */	rlwinm r4, r4, 8, 0xa, 0x17
/* 800D1858 000CD778  64 84 4D 00 */	oris r4, r4, 0x4d00
/* 800D185C 000CD77C  90 9F 00 50 */	stw r4, 0x50(r31)
/* 800D1860 000CD780  A0 85 30 E0 */	lhz r4, 0x30e0(r5)
/* 800D1864 000CD784  54 84 42 AE */	rlwinm r4, r4, 8, 0xa, 0x17
/* 800D1868 000CD788  64 84 4D 40 */	oris r4, r4, 0x4d40
/* 800D186C 000CD78C  90 9F 00 54 */	stw r4, 0x54(r31)
/* 800D1870 000CD790  A0 85 30 E0 */	lhz r4, 0x30e0(r5)
/* 800D1874 000CD794  54 84 42 AE */	rlwinm r4, r4, 8, 0xa, 0x17
/* 800D1878 000CD798  64 84 4D 80 */	oris r4, r4, 0x4d80
/* 800D187C 000CD79C  90 9F 00 58 */	stw r4, 0x58(r31)
/* 800D1880 000CD7A0  A0 85 30 E0 */	lhz r4, 0x30e0(r5)
/* 800D1884 000CD7A4  54 84 42 AE */	rlwinm r4, r4, 8, 0xa, 0x17
/* 800D1888 000CD7A8  64 84 4D C0 */	oris r4, r4, 0x4dc0
/* 800D188C 000CD7AC  90 9F 00 5C */	stw r4, 0x5c(r31)
/* 800D1890 000CD7B0  90 0D A2 88 */	stw r0, lbl_802F2468@sda21(r13)
/* 800D1894 000CD7B4  48 00 05 45 */	bl PADSetSamplingRate
/* 800D1898 000CD7B8  3C 60 80 1F */	lis r3, lbl_801E8880@ha
/* 800D189C 000CD7BC  38 63 88 80 */	addi r3, r3, lbl_801E8880@l
/* 800D18A0 000CD7C0  4B FF 59 F5 */	bl OSRegisterResetFunction
lbl_800D18A4:
/* 800D18A4 000CD7C4  3F A0 F0 00 */	lis r29, 0xf000
/* 800D18A8 000CD7C8  3B 60 00 00 */	li r27, 0
/* 800D18AC 000CD7CC  4B FF 48 11 */	bl OSDisableInterrupts
/* 800D18B0 000CD7D0  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D18B4 000CD7D4  7C 7C 1B 78 */	mr r28, r3
/* 800D18B8 000CD7D8  80 CD A2 9C */	lwz r6, WaitingBits@sda21(r13)
/* 800D18BC 000CD7DC  80 8D A2 A0 */	lwz r4, CheckingBits@sda21(r13)
/* 800D18C0 000CD7E0  7C 03 33 78 */	or r3, r0, r6
/* 800D18C4 000CD7E4  80 0D 97 A4 */	lwz r0, MakeStatus@sda21(r13)
/* 800D18C8 000CD7E8  7C 83 1B 78 */	or r3, r4, r3
/* 800D18CC 000CD7EC  80 8D A2 90 */	lwz r4, ResettingBits@sda21(r13)
/* 800D18D0 000CD7F0  7F BD 18 78 */	andc r29, r29, r3
/* 800D18D4 000CD7F4  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D18D8 000CD7F8  7C 85 EB 78 */	or r5, r4, r29
/* 800D18DC 000CD7FC  7F A7 E8 F8 */	nor r7, r29, r29
/* 800D18E0 000CD800  90 AD A2 90 */	stw r5, ResettingBits@sda21(r13)
/* 800D18E4 000CD804  7C 64 38 38 */	and r4, r3, r7
/* 800D18E8 000CD808  7C C3 38 38 */	and r3, r6, r7
/* 800D18EC 000CD80C  90 8D A2 8C */	stw r4, EnabledBits@sda21(r13)
/* 800D18F0 000CD810  28 00 00 04 */	cmplwi r0, 4
/* 800D18F4 000CD814  90 6D A2 9C */	stw r3, WaitingBits@sda21(r13)
/* 800D18F8 000CD818  40 82 00 10 */	bne lbl_800D1908
/* 800D18FC 000CD81C  80 0D A2 98 */	lwz r0, RecalibrateBits@sda21(r13)
/* 800D1900 000CD820  7C 00 EB 78 */	or r0, r0, r29
/* 800D1904 000CD824  90 0D A2 98 */	stw r0, RecalibrateBits@sda21(r13)
lbl_800D1908:
/* 800D1908 000CD828  80 6D A2 90 */	lwz r3, ResettingBits@sda21(r13)
/* 800D190C 000CD82C  4B FF 6F 99 */	bl SIDisablePolling
/* 800D1910 000CD830  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D1914 000CD834  2C 00 00 20 */	cmpwi r0, 0x20
/* 800D1918 000CD838  40 82 00 0C */	bne lbl_800D1924
/* 800D191C 000CD83C  4B FF EC 85 */	bl DoReset
/* 800D1920 000CD840  7C 7B 1B 78 */	mr r27, r3
lbl_800D1924:
/* 800D1924 000CD844  7F 83 E3 78 */	mr r3, r28
/* 800D1928 000CD848  4B FF 47 BD */	bl OSRestoreInterrupts
/* 800D192C 000CD84C  7F 63 DB 78 */	mr r3, r27
/* 800D1930 000CD850  BB 21 00 1C */	lmw r25, 0x1c(r1)
/* 800D1934 000CD854  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 800D1938 000CD858  38 21 00 38 */	addi r1, r1, 0x38
/* 800D193C 000CD85C  7C 08 03 A6 */	mtlr r0
/* 800D1940 000CD860  4E 80 00 20 */	blr

.global PADReceiveCheckCallback
PADReceiveCheckCallback:
/* 800D1944 000CD864  7C 08 02 A6 */	mflr r0
/* 800D1948 000CD868  3C E0 80 2C */	lis r7, Type@ha
/* 800D194C 000CD86C  90 01 00 04 */	stw r0, 4(r1)
/* 800D1950 000CD870  3C C0 80 00 */	lis r6, 0x8000
/* 800D1954 000CD874  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800D1958 000CD878  93 E1 00 24 */	stw r31, 0x24(r1)
/* 800D195C 000CD87C  93 C1 00 20 */	stw r30, 0x20(r1)
/* 800D1960 000CD880  7C 7E 1B 78 */	mr r30, r3
/* 800D1964 000CD884  7C DF F4 30 */	srw r31, r6, r30
/* 800D1968 000CD888  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 800D196C 000CD88C  57 C8 10 3A */	slwi r8, r30, 2
/* 800D1970 000CD890  38 C7 7C 00 */	addi r6, r7, Type@l
/* 800D1974 000CD894  80 0D A2 8C */	lwz r0, EnabledBits@sda21(r13)
/* 800D1978 000CD898  7C C6 42 14 */	add r6, r6, r8
/* 800D197C 000CD89C  80 AD A2 9C */	lwz r5, WaitingBits@sda21(r13)
/* 800D1980 000CD8A0  7F E9 F8 F8 */	nor r9, r31, r31
/* 800D1984 000CD8A4  80 6D A2 A0 */	lwz r3, CheckingBits@sda21(r13)
/* 800D1988 000CD8A8  80 C6 00 00 */	lwz r6, 0(r6)
/* 800D198C 000CD8AC  7C A5 48 38 */	and r5, r5, r9
/* 800D1990 000CD8B0  7C 63 48 38 */	and r3, r3, r9
/* 800D1994 000CD8B4  7C 00 F8 39 */	and. r0, r0, r31
/* 800D1998 000CD8B8  90 AD A2 9C */	stw r5, WaitingBits@sda21(r13)
/* 800D199C 000CD8BC  90 6D A2 A0 */	stw r3, CheckingBits@sda21(r13)
/* 800D19A0 000CD8C0  41 82 00 E4 */	beq lbl_800D1A84
/* 800D19A4 000CD8C4  54 80 07 3F */	clrlwi. r0, r4, 0x1c
/* 800D19A8 000CD8C8  40 82 00 5C */	bne lbl_800D1A04
/* 800D19AC 000CD8CC  54 C0 00 01 */	rlwinm. r0, r6, 0, 0, 0
/* 800D19B0 000CD8D0  41 82 00 54 */	beq lbl_800D1A04
/* 800D19B4 000CD8D4  54 C0 01 8D */	rlwinm. r0, r6, 0, 6, 6
/* 800D19B8 000CD8D8  41 82 00 4C */	beq lbl_800D1A04
/* 800D19BC 000CD8DC  54 C0 00 43 */	rlwinm. r0, r6, 0, 1, 1
/* 800D19C0 000CD8E0  41 82 00 44 */	beq lbl_800D1A04
/* 800D19C4 000CD8E4  54 C0 01 4B */	rlwinm. r0, r6, 0, 5, 5
/* 800D19C8 000CD8E8  40 82 00 3C */	bne lbl_800D1A04
/* 800D19CC 000CD8EC  1C 9E 00 0C */	mulli r4, r30, 0xc
/* 800D19D0 000CD8F0  3C 60 80 2C */	lis r3, Origin@ha
/* 800D19D4 000CD8F4  38 03 7C 10 */	addi r0, r3, Origin@l
/* 800D19D8 000CD8F8  3C 60 80 0D */	lis r3, PADOriginUpdateCallback@ha
/* 800D19DC 000CD8FC  7C C0 22 14 */	add r6, r0, r4
/* 800D19E0 000CD900  39 03 0B 00 */	addi r8, r3, PADOriginUpdateCallback@l
/* 800D19E4 000CD904  38 7E 00 00 */	addi r3, r30, 0
/* 800D19E8 000CD908  38 8D 97 AC */	addi r4, r13, cmdReadOrigin@sda21
/* 800D19EC 000CD90C  38 A0 00 01 */	li r5, 1
/* 800D19F0 000CD910  38 E0 00 0A */	li r7, 0xa
/* 800D19F4 000CD914  39 40 00 00 */	li r10, 0
/* 800D19F8 000CD918  39 20 00 00 */	li r9, 0
/* 800D19FC 000CD91C  4B FF 6F C5 */	bl SITransfer
/* 800D1A00 000CD920  48 00 00 84 */	b lbl_800D1A84
lbl_800D1A04:
/* 800D1A04 000CD924  4B FF 46 B9 */	bl OSDisableInterrupts
/* 800D1A08 000CD928  3B A3 00 00 */	addi r29, r3, 0
/* 800D1A0C 000CD92C  38 7F 00 00 */	addi r3, r31, 0
/* 800D1A10 000CD930  4B FF 6E 95 */	bl SIDisablePolling
/* 800D1A14 000CD934  80 0D A2 8C */	lwz r0, EnabledBits@sda21(r13)
/* 800D1A18 000CD938  7F E6 F8 F8 */	nor r6, r31, r31
/* 800D1A1C 000CD93C  80 8D A2 9C */	lwz r4, WaitingBits@sda21(r13)
/* 800D1A20 000CD940  80 6D A2 A0 */	lwz r3, CheckingBits@sda21(r13)
/* 800D1A24 000CD944  7C 05 30 38 */	and r5, r0, r6
/* 800D1A28 000CD948  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D1A2C 000CD94C  7C 84 30 38 */	and r4, r4, r6
/* 800D1A30 000CD950  7C 63 30 38 */	and r3, r3, r6
/* 800D1A34 000CD954  7C 00 30 38 */	and r0, r0, r6
/* 800D1A38 000CD958  90 AD A2 8C */	stw r5, EnabledBits@sda21(r13)
/* 800D1A3C 000CD95C  90 8D A2 9C */	stw r4, WaitingBits@sda21(r13)
/* 800D1A40 000CD960  90 6D A2 A0 */	stw r3, CheckingBits@sda21(r13)
/* 800D1A44 000CD964  90 0D A2 94 */	stw r0, ProbingBits@sda21(r13)
/* 800D1A48 000CD968  4B FF 61 31 */	bl __OSLockSramEx
/* 800D1A4C 000CD96C  57 C0 08 3C */	slwi r0, r30, 1
/* 800D1A50 000CD970  7C 63 02 14 */	add r3, r3, r0
/* 800D1A54 000CD974  A4 03 00 1C */	lhzu r0, 0x1c(r3)
/* 800D1A58 000CD978  28 00 00 00 */	cmplwi r0, 0
/* 800D1A5C 000CD97C  41 82 00 18 */	beq lbl_800D1A74
/* 800D1A60 000CD980  38 00 00 00 */	li r0, 0
/* 800D1A64 000CD984  B0 03 00 00 */	sth r0, 0(r3)
/* 800D1A68 000CD988  38 60 00 01 */	li r3, 1
/* 800D1A6C 000CD98C  4B FF 64 95 */	bl __OSUnlockSramEx
/* 800D1A70 000CD990  48 00 00 0C */	b lbl_800D1A7C
lbl_800D1A74:
/* 800D1A74 000CD994  38 60 00 00 */	li r3, 0
/* 800D1A78 000CD998  4B FF 64 89 */	bl __OSUnlockSramEx
lbl_800D1A7C:
/* 800D1A7C 000CD99C  7F A3 EB 78 */	mr r3, r29
/* 800D1A80 000CD9A0  4B FF 46 65 */	bl OSRestoreInterrupts
lbl_800D1A84:
/* 800D1A84 000CD9A4  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800D1A88 000CD9A8  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800D1A8C 000CD9AC  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800D1A90 000CD9B0  7C 08 03 A6 */	mtlr r0
/* 800D1A94 000CD9B4  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 800D1A98 000CD9B8  38 21 00 28 */	addi r1, r1, 0x28
/* 800D1A9C 000CD9BC  4E 80 00 20 */	blr

.global PADRead
PADRead:
/* 800D1AA0 000CD9C0  7C 08 02 A6 */	mflr r0
/* 800D1AA4 000CD9C4  3C 80 80 2C */	lis r4, Origin@ha
/* 800D1AA8 000CD9C8  90 01 00 04 */	stw r0, 4(r1)
/* 800D1AAC 000CD9CC  38 04 7C 10 */	addi r0, r4, Origin@l
/* 800D1AB0 000CD9D0  3C C0 80 2C */	lis r6, Type@ha
/* 800D1AB4 000CD9D4  94 21 FF B8 */	stwu r1, -0x48(r1)
/* 800D1AB8 000CD9D8  3C 80 80 0D */	lis r4, PADOriginUpdateCallback@ha
/* 800D1ABC 000CD9DC  BE A1 00 1C */	stmw r21, 0x1c(r1)
/* 800D1AC0 000CD9E0  3A E0 00 00 */	li r23, 0
/* 800D1AC4 000CD9E4  1C B7 00 0C */	mulli r5, r23, 0xc
/* 800D1AC8 000CD9E8  7F 20 2A 14 */	add r25, r0, r5
/* 800D1ACC 000CD9EC  3C A0 80 0D */	lis r5, PADReceiveCheckCallback@ha
/* 800D1AD0 000CD9F0  56 E7 10 3A */	slwi r7, r23, 2
/* 800D1AD4 000CD9F4  38 06 7C 00 */	addi r0, r6, Type@l
/* 800D1AD8 000CD9F8  7F 60 3A 14 */	add r27, r0, r7
/* 800D1ADC 000CD9FC  3A A3 00 00 */	addi r21, r3, 0
/* 800D1AE0 000CDA00  3B E4 0B 00 */	addi r31, r4, PADOriginUpdateCallback@l
/* 800D1AE4 000CDA04  3B C5 19 44 */	addi r30, r5, PADReceiveCheckCallback@l
/* 800D1AE8 000CDA08  3A C0 00 00 */	li r22, 0
/* 800D1AEC 000CDA0C  3B 40 00 00 */	li r26, 0
/* 800D1AF0 000CDA10  3F A0 80 00 */	lis r29, 0x8000
lbl_800D1AF4:
/* 800D1AF4 000CDA14  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D1AF8 000CDA18  7F B8 BC 30 */	srw r24, r29, r23
/* 800D1AFC 000CDA1C  20 77 00 03 */	subfic r3, r23, 3
/* 800D1B00 000CDA20  7C 00 C0 39 */	and. r0, r0, r24
/* 800D1B04 000CDA24  54 7C 18 38 */	slwi r28, r3, 3
/* 800D1B08 000CDA28  40 82 00 10 */	bne lbl_800D1B18
/* 800D1B0C 000CDA2C  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D1B10 000CDA30  7C 00 B8 00 */	cmpw r0, r23
/* 800D1B14 000CDA34  40 82 00 20 */	bne lbl_800D1B34
lbl_800D1B18:
/* 800D1B18 000CDA38  38 00 FF FE */	li r0, -2
/* 800D1B1C 000CDA3C  98 15 00 0A */	stb r0, 0xa(r21)
/* 800D1B20 000CDA40  38 75 00 00 */	addi r3, r21, 0
/* 800D1B24 000CDA44  38 80 00 00 */	li r4, 0
/* 800D1B28 000CDA48  38 A0 00 0A */	li r5, 0xa
/* 800D1B2C 000CDA4C  4B F3 17 F5 */	bl memset
/* 800D1B30 000CDA50  48 00 02 74 */	b lbl_800D1DA4
lbl_800D1B34:
/* 800D1B34 000CDA54  80 0D A2 8C */	lwz r0, EnabledBits@sda21(r13)
/* 800D1B38 000CDA58  7C 00 C0 39 */	and. r0, r0, r24
/* 800D1B3C 000CDA5C  40 82 00 20 */	bne lbl_800D1B5C
/* 800D1B40 000CDA60  38 00 FF FF */	li r0, -1
/* 800D1B44 000CDA64  98 15 00 0A */	stb r0, 0xa(r21)
/* 800D1B48 000CDA68  38 75 00 00 */	addi r3, r21, 0
/* 800D1B4C 000CDA6C  38 80 00 00 */	li r4, 0
/* 800D1B50 000CDA70  38 A0 00 0A */	li r5, 0xa
/* 800D1B54 000CDA74  4B F3 17 CD */	bl memset
/* 800D1B58 000CDA78  48 00 02 4C */	b lbl_800D1DA4
lbl_800D1B5C:
/* 800D1B5C 000CDA7C  4B FF 6C 19 */	bl SIGetCommand
/* 800D1B60 000CDA80  38 00 00 08 */	li r0, 8
/* 800D1B64 000CDA84  7C 00 E0 30 */	slw r0, r0, r28
/* 800D1B68 000CDA88  7C 60 00 39 */	and. r0, r3, r0
/* 800D1B6C 000CDA8C  41 82 01 1C */	beq lbl_800D1C88
/* 800D1B70 000CDA90  80 0D A2 9C */	lwz r0, WaitingBits@sda21(r13)
/* 800D1B74 000CDA94  7C 00 C0 39 */	and. r0, r0, r24
/* 800D1B78 000CDA98  41 82 00 74 */	beq lbl_800D1BEC
/* 800D1B7C 000CDA9C  38 00 00 00 */	li r0, 0
/* 800D1B80 000CDAA0  98 15 00 0A */	stb r0, 0xa(r21)
/* 800D1B84 000CDAA4  38 75 00 00 */	addi r3, r21, 0
/* 800D1B88 000CDAA8  38 80 00 00 */	li r4, 0
/* 800D1B8C 000CDAAC  38 A0 00 0A */	li r5, 0xa
/* 800D1B90 000CDAB0  4B F3 17 91 */	bl memset
/* 800D1B94 000CDAB4  80 0D A2 A0 */	lwz r0, CheckingBits@sda21(r13)
/* 800D1B98 000CDAB8  7C 00 C0 39 */	and. r0, r0, r24
/* 800D1B9C 000CDABC  40 82 02 08 */	bne lbl_800D1DA4
/* 800D1BA0 000CDAC0  4B FF 45 1D */	bl OSDisableInterrupts
/* 800D1BA4 000CDAC4  3B 83 00 00 */	addi r28, r3, 0
/* 800D1BA8 000CDAC8  38 77 00 00 */	addi r3, r23, 0
/* 800D1BAC 000CDACC  38 DB 00 00 */	addi r6, r27, 0
/* 800D1BB0 000CDAD0  39 1E 00 00 */	addi r8, r30, 0
/* 800D1BB4 000CDAD4  38 8D A2 A4 */	addi r4, r13, cmdTypeAndStatus@sda21
/* 800D1BB8 000CDAD8  38 A0 00 01 */	li r5, 1
/* 800D1BBC 000CDADC  38 E0 00 03 */	li r7, 3
/* 800D1BC0 000CDAE0  39 40 00 00 */	li r10, 0
/* 800D1BC4 000CDAE4  39 20 00 00 */	li r9, 0
/* 800D1BC8 000CDAE8  4B FF 6D F9 */	bl SITransfer
/* 800D1BCC 000CDAEC  2C 03 00 00 */	cmpwi r3, 0
/* 800D1BD0 000CDAF0  41 82 00 10 */	beq lbl_800D1BE0
/* 800D1BD4 000CDAF4  80 0D A2 A0 */	lwz r0, CheckingBits@sda21(r13)
/* 800D1BD8 000CDAF8  7C 00 C3 78 */	or r0, r0, r24
/* 800D1BDC 000CDAFC  90 0D A2 A0 */	stw r0, CheckingBits@sda21(r13)
lbl_800D1BE0:
/* 800D1BE0 000CDB00  7F 83 E3 78 */	mr r3, r28
/* 800D1BE4 000CDB04  4B FF 45 01 */	bl OSRestoreInterrupts
/* 800D1BE8 000CDB08  48 00 01 BC */	b lbl_800D1DA4
lbl_800D1BEC:
/* 800D1BEC 000CDB0C  4B FF 44 D1 */	bl OSDisableInterrupts
/* 800D1BF0 000CDB10  3B 83 00 00 */	addi r28, r3, 0
/* 800D1BF4 000CDB14  38 78 00 00 */	addi r3, r24, 0
/* 800D1BF8 000CDB18  4B FF 6C AD */	bl SIDisablePolling
/* 800D1BFC 000CDB1C  80 0D A2 8C */	lwz r0, EnabledBits@sda21(r13)
/* 800D1C00 000CDB20  7F 06 C0 F8 */	nor r6, r24, r24
/* 800D1C04 000CDB24  80 8D A2 9C */	lwz r4, WaitingBits@sda21(r13)
/* 800D1C08 000CDB28  80 6D A2 A0 */	lwz r3, CheckingBits@sda21(r13)
/* 800D1C0C 000CDB2C  7C 05 30 38 */	and r5, r0, r6
/* 800D1C10 000CDB30  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D1C14 000CDB34  7C 84 30 38 */	and r4, r4, r6
/* 800D1C18 000CDB38  7C 63 30 38 */	and r3, r3, r6
/* 800D1C1C 000CDB3C  7C 00 30 38 */	and r0, r0, r6
/* 800D1C20 000CDB40  90 AD A2 8C */	stw r5, EnabledBits@sda21(r13)
/* 800D1C24 000CDB44  90 8D A2 9C */	stw r4, WaitingBits@sda21(r13)
/* 800D1C28 000CDB48  90 6D A2 A0 */	stw r3, CheckingBits@sda21(r13)
/* 800D1C2C 000CDB4C  90 0D A2 94 */	stw r0, ProbingBits@sda21(r13)
/* 800D1C30 000CDB50  4B FF 5F 49 */	bl __OSLockSramEx
/* 800D1C34 000CDB54  38 9A 00 1C */	addi r4, r26, 0x1c
/* 800D1C38 000CDB58  7C 83 22 14 */	add r4, r3, r4
/* 800D1C3C 000CDB5C  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D1C40 000CDB60  28 00 00 00 */	cmplwi r0, 0
/* 800D1C44 000CDB64  41 82 00 18 */	beq lbl_800D1C5C
/* 800D1C48 000CDB68  38 00 00 00 */	li r0, 0
/* 800D1C4C 000CDB6C  B0 04 00 00 */	sth r0, 0(r4)
/* 800D1C50 000CDB70  38 60 00 01 */	li r3, 1
/* 800D1C54 000CDB74  4B FF 62 AD */	bl __OSUnlockSramEx
/* 800D1C58 000CDB78  48 00 00 0C */	b lbl_800D1C64
lbl_800D1C5C:
/* 800D1C5C 000CDB7C  38 60 00 00 */	li r3, 0
/* 800D1C60 000CDB80  4B FF 62 A1 */	bl __OSUnlockSramEx
lbl_800D1C64:
/* 800D1C64 000CDB84  7F 83 E3 78 */	mr r3, r28
/* 800D1C68 000CDB88  4B FF 44 7D */	bl OSRestoreInterrupts
/* 800D1C6C 000CDB8C  38 00 FF FF */	li r0, -1
/* 800D1C70 000CDB90  98 15 00 0A */	stb r0, 0xa(r21)
/* 800D1C74 000CDB94  38 75 00 00 */	addi r3, r21, 0
/* 800D1C78 000CDB98  38 80 00 00 */	li r4, 0
/* 800D1C7C 000CDB9C  38 A0 00 0A */	li r5, 0xa
/* 800D1C80 000CDBA0  4B F3 16 A1 */	bl memset
/* 800D1C84 000CDBA4  48 00 01 20 */	b lbl_800D1DA4
lbl_800D1C88:
/* 800D1C88 000CDBA8  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D1C8C 000CDBAC  7C 00 C0 39 */	and. r0, r0, r24
/* 800D1C90 000CDBB0  40 82 00 14 */	bne lbl_800D1CA4
/* 800D1C94 000CDBB4  80 1B 00 00 */	lwz r0, 0(r27)
/* 800D1C98 000CDBB8  54 00 00 85 */	rlwinm. r0, r0, 0, 2, 2
/* 800D1C9C 000CDBBC  40 82 00 08 */	bne lbl_800D1CA4
/* 800D1CA0 000CDBC0  7E D6 C3 78 */	or r22, r22, r24
lbl_800D1CA4:
/* 800D1CA4 000CDBC4  38 00 00 20 */	li r0, 0x20
/* 800D1CA8 000CDBC8  7C 00 E0 30 */	slw r0, r0, r28
/* 800D1CAC 000CDBCC  7C 60 00 39 */	and. r0, r3, r0
/* 800D1CB0 000CDBD0  40 82 00 20 */	bne lbl_800D1CD0
/* 800D1CB4 000CDBD4  38 00 FF FD */	li r0, -3
/* 800D1CB8 000CDBD8  98 15 00 0A */	stb r0, 0xa(r21)
/* 800D1CBC 000CDBDC  38 75 00 00 */	addi r3, r21, 0
/* 800D1CC0 000CDBE0  38 80 00 00 */	li r4, 0
/* 800D1CC4 000CDBE4  38 A0 00 0A */	li r5, 0xa
/* 800D1CC8 000CDBE8  4B F3 16 59 */	bl memset
/* 800D1CCC 000CDBEC  48 00 00 D8 */	b lbl_800D1DA4
lbl_800D1CD0:
/* 800D1CD0 000CDBF0  38 77 00 00 */	addi r3, r23, 0
/* 800D1CD4 000CDBF4  38 81 00 0C */	addi r4, r1, 0xc
/* 800D1CD8 000CDBF8  4B FF 6C 39 */	bl SIGetResponse
/* 800D1CDC 000CDBFC  80 01 00 0C */	lwz r0, 0xc(r1)
/* 800D1CE0 000CDC00  54 00 00 01 */	rlwinm. r0, r0, 0, 0, 0
/* 800D1CE4 000CDC04  41 82 00 20 */	beq lbl_800D1D04
/* 800D1CE8 000CDC08  38 00 FF FD */	li r0, -3
/* 800D1CEC 000CDC0C  98 15 00 0A */	stb r0, 0xa(r21)
/* 800D1CF0 000CDC10  38 75 00 00 */	addi r3, r21, 0
/* 800D1CF4 000CDC14  38 80 00 00 */	li r4, 0
/* 800D1CF8 000CDC18  38 A0 00 0A */	li r5, 0xa
/* 800D1CFC 000CDC1C  4B F3 16 25 */	bl memset
/* 800D1D00 000CDC20  48 00 00 A4 */	b lbl_800D1DA4
lbl_800D1D04:
/* 800D1D04 000CDC24  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D1D08 000CDC28  7C 00 C0 39 */	and. r0, r0, r24
/* 800D1D0C 000CDC2C  41 82 00 20 */	beq lbl_800D1D2C
/* 800D1D10 000CDC30  38 00 FF FF */	li r0, -1
/* 800D1D14 000CDC34  98 15 00 0A */	stb r0, 0xa(r21)
/* 800D1D18 000CDC38  38 75 00 00 */	addi r3, r21, 0
/* 800D1D1C 000CDC3C  38 80 00 00 */	li r4, 0
/* 800D1D20 000CDC40  38 A0 00 0A */	li r5, 0xa
/* 800D1D24 000CDC44  4B F3 15 FD */	bl memset
/* 800D1D28 000CDC48  48 00 00 7C */	b lbl_800D1DA4
lbl_800D1D2C:
/* 800D1D2C 000CDC4C  81 8D 97 A8 */	lwz r12, lbl_802F1988@sda21(r13)
/* 800D1D30 000CDC50  38 77 00 00 */	addi r3, r23, 0
/* 800D1D34 000CDC54  38 95 00 00 */	addi r4, r21, 0
/* 800D1D38 000CDC58  7D 88 03 A6 */	mtlr r12
/* 800D1D3C 000CDC5C  38 A1 00 0C */	addi r5, r1, 0xc
/* 800D1D40 000CDC60  4E 80 00 21 */	blrl
/* 800D1D44 000CDC64  A0 15 00 00 */	lhz r0, 0(r21)
/* 800D1D48 000CDC68  54 00 04 A5 */	rlwinm. r0, r0, 0, 0x12, 0x12
/* 800D1D4C 000CDC6C  41 82 00 44 */	beq lbl_800D1D90
/* 800D1D50 000CDC70  38 00 FF FD */	li r0, -3
/* 800D1D54 000CDC74  98 15 00 0A */	stb r0, 0xa(r21)
/* 800D1D58 000CDC78  38 75 00 00 */	addi r3, r21, 0
/* 800D1D5C 000CDC7C  38 80 00 00 */	li r4, 0
/* 800D1D60 000CDC80  38 A0 00 0A */	li r5, 0xa
/* 800D1D64 000CDC84  4B F3 15 BD */	bl memset
/* 800D1D68 000CDC88  38 77 00 00 */	addi r3, r23, 0
/* 800D1D6C 000CDC8C  38 D9 00 00 */	addi r6, r25, 0
/* 800D1D70 000CDC90  39 1F 00 00 */	addi r8, r31, 0
/* 800D1D74 000CDC94  38 8D 97 AC */	addi r4, r13, cmdReadOrigin@sda21
/* 800D1D78 000CDC98  38 A0 00 01 */	li r5, 1
/* 800D1D7C 000CDC9C  38 E0 00 0A */	li r7, 0xa
/* 800D1D80 000CDCA0  39 40 00 00 */	li r10, 0
/* 800D1D84 000CDCA4  39 20 00 00 */	li r9, 0
/* 800D1D88 000CDCA8  4B FF 6C 39 */	bl SITransfer
/* 800D1D8C 000CDCAC  48 00 00 18 */	b lbl_800D1DA4
lbl_800D1D90:
/* 800D1D90 000CDCB0  38 00 00 00 */	li r0, 0
/* 800D1D94 000CDCB4  98 15 00 0A */	stb r0, 0xa(r21)
/* 800D1D98 000CDCB8  A0 15 00 00 */	lhz r0, 0(r21)
/* 800D1D9C 000CDCBC  54 00 06 6E */	rlwinm r0, r0, 0, 0x19, 0x17
/* 800D1DA0 000CDCC0  B0 15 00 00 */	sth r0, 0(r21)
lbl_800D1DA4:
/* 800D1DA4 000CDCC4  3A F7 00 01 */	addi r23, r23, 1
/* 800D1DA8 000CDCC8  2C 17 00 04 */	cmpwi r23, 4
/* 800D1DAC 000CDCCC  3B 7B 00 04 */	addi r27, r27, 4
/* 800D1DB0 000CDCD0  3B 5A 00 02 */	addi r26, r26, 2
/* 800D1DB4 000CDCD4  3B 39 00 0C */	addi r25, r25, 0xc
/* 800D1DB8 000CDCD8  3A B5 00 0C */	addi r21, r21, 0xc
/* 800D1DBC 000CDCDC  41 80 FD 38 */	blt lbl_800D1AF4
/* 800D1DC0 000CDCE0  7E C3 B3 78 */	mr r3, r22
/* 800D1DC4 000CDCE4  BA A1 00 1C */	lmw r21, 0x1c(r1)
/* 800D1DC8 000CDCE8  80 01 00 4C */	lwz r0, 0x4c(r1)
/* 800D1DCC 000CDCEC  38 21 00 48 */	addi r1, r1, 0x48
/* 800D1DD0 000CDCF0  7C 08 03 A6 */	mtlr r0
/* 800D1DD4 000CDCF4  4E 80 00 20 */	blr

.global PADSetSamplingRate
PADSetSamplingRate:
/* 800D1DD8 000CDCF8  7C 08 02 A6 */	mflr r0
/* 800D1DDC 000CDCFC  90 01 00 04 */	stw r0, 4(r1)
/* 800D1DE0 000CDD00  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800D1DE4 000CDD04  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800D1DE8 000CDD08  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800D1DEC 000CDD0C  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800D1DF0 000CDD10  3B A3 00 00 */	addi r29, r3, 0
/* 800D1DF4 000CDD14  28 1D 00 0B */	cmplwi r29, 0xb
/* 800D1DF8 000CDD18  3C 60 80 1F */	lis r3, lbl_801E8880@ha
/* 800D1DFC 000CDD1C  3B E3 88 80 */	addi r31, r3, lbl_801E8880@l
/* 800D1E00 000CDD20  40 81 00 08 */	ble lbl_800D1E08
/* 800D1E04 000CDD24  3B A0 00 0B */	li r29, 0xb
lbl_800D1E08:
/* 800D1E08 000CDD28  4B FF E7 8D */	bl VIGetTvFormat
/* 800D1E0C 000CDD2C  2C 03 00 01 */	cmpwi r3, 1
/* 800D1E10 000CDD30  41 82 00 24 */	beq lbl_800D1E34
/* 800D1E14 000CDD34  40 80 00 10 */	bge lbl_800D1E24
/* 800D1E18 000CDD38  2C 03 00 00 */	cmpwi r3, 0
/* 800D1E1C 000CDD3C  40 80 00 10 */	bge lbl_800D1E2C
/* 800D1E20 000CDD40  48 00 00 1C */	b lbl_800D1E3C
lbl_800D1E24:
/* 800D1E24 000CDD44  2C 03 00 03 */	cmpwi r3, 3
/* 800D1E28 000CDD48  40 80 00 14 */	bge lbl_800D1E3C
lbl_800D1E2C:
/* 800D1E2C 000CDD4C  3B DF 00 10 */	addi r30, r31, 0x10
/* 800D1E30 000CDD50  48 00 00 20 */	b lbl_800D1E50
lbl_800D1E34:
/* 800D1E34 000CDD54  3B DF 00 28 */	addi r30, r31, 0x28
/* 800D1E38 000CDD58  48 00 00 18 */	b lbl_800D1E50
lbl_800D1E3C:
/* 800D1E3C 000CDD5C  38 BF 00 40 */	addi r5, r31, 0x40
/* 800D1E40 000CDD60  4C C6 31 82 */	crclr 6
/* 800D1E44 000CDD64  38 6D 97 B4 */	addi r3, r13, lbl_802F1994@sda21
/* 800D1E48 000CDD68  38 80 05 10 */	li r4, 0x510
/* 800D1E4C 000CDD6C  4B FF 1E 55 */	bl OSPanic
lbl_800D1E50:
/* 800D1E50 000CDD70  57 A0 08 3C */	slwi r0, r29, 1
/* 800D1E54 000CDD74  7C 9E 02 14 */	add r4, r30, r0
/* 800D1E58 000CDD78  7C 7E 00 AE */	lbzx r3, r30, r0
/* 800D1E5C 000CDD7C  88 84 00 01 */	lbz r4, 1(r4)
/* 800D1E60 000CDD80  4B FF 69 49 */	bl SISetXY
/* 800D1E64 000CDD84  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D1E68 000CDD88  4B FF 69 A1 */	bl SIEnablePolling
/* 800D1E6C 000CDD8C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800D1E70 000CDD90  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800D1E74 000CDD94  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800D1E78 000CDD98  7C 08 03 A6 */	mtlr r0
/* 800D1E7C 000CDD9C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800D1E80 000CDDA0  38 21 00 20 */	addi r1, r1, 0x20
/* 800D1E84 000CDDA4  4E 80 00 20 */	blr

.global PADControlAllMotors
PADControlAllMotors:
/* 800D1E88 000CDDA8  7C 08 02 A6 */	mflr r0
/* 800D1E8C 000CDDAC  90 01 00 04 */	stw r0, 4(r1)
/* 800D1E90 000CDDB0  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800D1E94 000CDDB4  BF 61 00 14 */	stmw r27, 0x14(r1)
/* 800D1E98 000CDDB8  7C 7F 1B 78 */	mr r31, r3
/* 800D1E9C 000CDDBC  4B FF 42 21 */	bl OSDisableInterrupts
/* 800D1EA0 000CDDC0  3C 80 80 2C */	lis r4, Type@ha
/* 800D1EA4 000CDDC4  3B A4 7C 00 */	addi r29, r4, Type@l
/* 800D1EA8 000CDDC8  3B 83 00 00 */	addi r28, r3, 0
/* 800D1EAC 000CDDCC  38 80 00 00 */	li r4, 0
/* 800D1EB0 000CDDD0  3B 60 00 00 */	li r27, 0
/* 800D1EB4 000CDDD4  3F C0 80 00 */	lis r30, 0x8000
lbl_800D1EB8:
/* 800D1EB8 000CDDD8  80 0D A2 8C */	lwz r0, EnabledBits@sda21(r13)
/* 800D1EBC 000CDDDC  7F C3 DC 30 */	srw r3, r30, r27
/* 800D1EC0 000CDDE0  7C 00 18 39 */	and. r0, r0, r3
/* 800D1EC4 000CDDE4  41 82 00 54 */	beq lbl_800D1F18
/* 800D1EC8 000CDDE8  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D1ECC 000CDDEC  7C 00 18 39 */	and. r0, r0, r3
/* 800D1ED0 000CDDF0  40 82 00 48 */	bne lbl_800D1F18
/* 800D1ED4 000CDDF4  80 1D 00 00 */	lwz r0, 0(r29)
/* 800D1ED8 000CDDF8  54 00 00 85 */	rlwinm. r0, r0, 0, 2, 2
/* 800D1EDC 000CDDFC  40 82 00 3C */	bne lbl_800D1F18
/* 800D1EE0 000CDE00  80 0D 97 A4 */	lwz r0, MakeStatus@sda21(r13)
/* 800D1EE4 000CDE04  80 7F 00 00 */	lwz r3, 0(r31)
/* 800D1EE8 000CDE08  28 00 00 02 */	cmplwi r0, 2
/* 800D1EEC 000CDE0C  40 80 00 10 */	bge lbl_800D1EFC
/* 800D1EF0 000CDE10  28 03 00 02 */	cmplwi r3, 2
/* 800D1EF4 000CDE14  40 82 00 08 */	bne lbl_800D1EFC
/* 800D1EF8 000CDE18  38 60 00 00 */	li r3, 0
lbl_800D1EFC:
/* 800D1EFC 000CDE1C  80 8D 97 A0 */	lwz r4, AnalogMode@sda21(r13)
/* 800D1F00 000CDE20  54 60 07 BE */	clrlwi r0, r3, 0x1e
/* 800D1F04 000CDE24  38 7B 00 00 */	addi r3, r27, 0
/* 800D1F08 000CDE28  64 84 00 40 */	oris r4, r4, 0x40
/* 800D1F0C 000CDE2C  7C 84 03 78 */	or r4, r4, r0
/* 800D1F10 000CDE30  4B FF 68 75 */	bl SISetCommand
/* 800D1F14 000CDE34  38 80 00 01 */	li r4, 1
lbl_800D1F18:
/* 800D1F18 000CDE38  3B 7B 00 01 */	addi r27, r27, 1
/* 800D1F1C 000CDE3C  2C 1B 00 04 */	cmpwi r27, 4
/* 800D1F20 000CDE40  3B BD 00 04 */	addi r29, r29, 4
/* 800D1F24 000CDE44  3B FF 00 04 */	addi r31, r31, 4
/* 800D1F28 000CDE48  41 80 FF 90 */	blt lbl_800D1EB8
/* 800D1F2C 000CDE4C  2C 04 00 00 */	cmpwi r4, 0
/* 800D1F30 000CDE50  41 82 00 08 */	beq lbl_800D1F38
/* 800D1F34 000CDE54  4B FF 68 65 */	bl SITransferCommands
lbl_800D1F38:
/* 800D1F38 000CDE58  7F 83 E3 78 */	mr r3, r28
/* 800D1F3C 000CDE5C  4B FF 41 A9 */	bl OSRestoreInterrupts
/* 800D1F40 000CDE60  BB 61 00 14 */	lmw r27, 0x14(r1)
/* 800D1F44 000CDE64  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800D1F48 000CDE68  38 21 00 28 */	addi r1, r1, 0x28
/* 800D1F4C 000CDE6C  7C 08 03 A6 */	mtlr r0
/* 800D1F50 000CDE70  4E 80 00 20 */	blr

.global PADControlMotor
PADControlMotor:
/* 800D1F54 000CDE74  7C 08 02 A6 */	mflr r0
/* 800D1F58 000CDE78  90 01 00 04 */	stw r0, 4(r1)
/* 800D1F5C 000CDE7C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800D1F60 000CDE80  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800D1F64 000CDE84  3B E3 00 00 */	addi r31, r3, 0
/* 800D1F68 000CDE88  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800D1F6C 000CDE8C  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800D1F70 000CDE90  3B A4 00 00 */	addi r29, r4, 0
/* 800D1F74 000CDE94  4B FF 41 49 */	bl OSDisableInterrupts
/* 800D1F78 000CDE98  3C 80 80 00 */	lis r4, 0x8000
/* 800D1F7C 000CDE9C  80 0D A2 8C */	lwz r0, EnabledBits@sda21(r13)
/* 800D1F80 000CDEA0  7C 84 FC 30 */	srw r4, r4, r31
/* 800D1F84 000CDEA4  7C 00 20 39 */	and. r0, r0, r4
/* 800D1F88 000CDEA8  3B C3 00 00 */	addi r30, r3, 0
/* 800D1F8C 000CDEAC  41 82 00 60 */	beq lbl_800D1FEC
/* 800D1F90 000CDEB0  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D1F94 000CDEB4  7C 00 20 39 */	and. r0, r0, r4
/* 800D1F98 000CDEB8  40 82 00 54 */	bne lbl_800D1FEC
/* 800D1F9C 000CDEBC  3C 60 80 2C */	lis r3, Type@ha
/* 800D1FA0 000CDEC0  57 E4 10 3A */	slwi r4, r31, 2
/* 800D1FA4 000CDEC4  38 03 7C 00 */	addi r0, r3, Type@l
/* 800D1FA8 000CDEC8  7C 60 22 14 */	add r3, r0, r4
/* 800D1FAC 000CDECC  80 03 00 00 */	lwz r0, 0(r3)
/* 800D1FB0 000CDED0  54 00 00 85 */	rlwinm. r0, r0, 0, 2, 2
/* 800D1FB4 000CDED4  40 82 00 38 */	bne lbl_800D1FEC
/* 800D1FB8 000CDED8  80 0D 97 A4 */	lwz r0, MakeStatus@sda21(r13)
/* 800D1FBC 000CDEDC  28 00 00 02 */	cmplwi r0, 2
/* 800D1FC0 000CDEE0  40 80 00 10 */	bge lbl_800D1FD0
/* 800D1FC4 000CDEE4  28 1D 00 02 */	cmplwi r29, 2
/* 800D1FC8 000CDEE8  40 82 00 08 */	bne lbl_800D1FD0
/* 800D1FCC 000CDEEC  3B A0 00 00 */	li r29, 0
lbl_800D1FD0:
/* 800D1FD0 000CDEF0  80 8D 97 A0 */	lwz r4, AnalogMode@sda21(r13)
/* 800D1FD4 000CDEF4  57 A0 07 BE */	clrlwi r0, r29, 0x1e
/* 800D1FD8 000CDEF8  38 7F 00 00 */	addi r3, r31, 0
/* 800D1FDC 000CDEFC  64 84 00 40 */	oris r4, r4, 0x40
/* 800D1FE0 000CDF00  7C 84 03 78 */	or r4, r4, r0
/* 800D1FE4 000CDF04  4B FF 67 A1 */	bl SISetCommand
/* 800D1FE8 000CDF08  4B FF 67 B1 */	bl SITransferCommands
lbl_800D1FEC:
/* 800D1FEC 000CDF0C  7F C3 F3 78 */	mr r3, r30
/* 800D1FF0 000CDF10  4B FF 40 F5 */	bl OSRestoreInterrupts
/* 800D1FF4 000CDF14  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800D1FF8 000CDF18  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800D1FFC 000CDF1C  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800D2000 000CDF20  7C 08 03 A6 */	mtlr r0
/* 800D2004 000CDF24  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800D2008 000CDF28  38 21 00 20 */	addi r1, r1, 0x20
/* 800D200C 000CDF2C  4E 80 00 20 */	blr

.global PADSetSpec
PADSetSpec:
/* 800D2010 000CDF30  38 00 00 00 */	li r0, 0
/* 800D2014 000CDF34  2C 03 00 01 */	cmpwi r3, 1
/* 800D2018 000CDF38  90 0D A2 AC */	stw r0, __PADSpec@sda21(r13)
/* 800D201C 000CDF3C  41 82 00 30 */	beq lbl_800D204C
/* 800D2020 000CDF40  40 80 00 10 */	bge lbl_800D2030
/* 800D2024 000CDF44  2C 03 00 00 */	cmpwi r3, 0
/* 800D2028 000CDF48  40 80 00 14 */	bge lbl_800D203C
/* 800D202C 000CDF4C  48 00 00 3C */	b lbl_800D2068
lbl_800D2030:
/* 800D2030 000CDF50  2C 03 00 06 */	cmpwi r3, 6
/* 800D2034 000CDF54  40 80 00 34 */	bge lbl_800D2068
/* 800D2038 000CDF58  48 00 00 24 */	b lbl_800D205C
lbl_800D203C:
/* 800D203C 000CDF5C  3C 80 80 0D */	lis r4, SPEC0_MakeStatus@ha
/* 800D2040 000CDF60  38 04 20 70 */	addi r0, r4, SPEC0_MakeStatus@l
/* 800D2044 000CDF64  90 0D 97 A8 */	stw r0, lbl_802F1988@sda21(r13)
/* 800D2048 000CDF68  48 00 00 20 */	b lbl_800D2068
lbl_800D204C:
/* 800D204C 000CDF6C  3C 80 80 0D */	lis r4, SPEC1_MakeStatus@ha
/* 800D2050 000CDF70  38 04 21 E4 */	addi r0, r4, SPEC1_MakeStatus@l
/* 800D2054 000CDF74  90 0D 97 A8 */	stw r0, lbl_802F1988@sda21(r13)
/* 800D2058 000CDF78  48 00 00 10 */	b lbl_800D2068
lbl_800D205C:
/* 800D205C 000CDF7C  3C 80 80 0D */	lis r4, SPEC2_MakeStatus@ha
/* 800D2060 000CDF80  38 04 23 58 */	addi r0, r4, SPEC2_MakeStatus@l
/* 800D2064 000CDF84  90 0D 97 A8 */	stw r0, lbl_802F1988@sda21(r13)
lbl_800D2068:
/* 800D2068 000CDF88  90 6D 97 A4 */	stw r3, MakeStatus@sda21(r13)
/* 800D206C 000CDF8C  4E 80 00 20 */	blr

.global SPEC0_MakeStatus
SPEC0_MakeStatus:
/* 800D2070 000CDF90  38 60 00 00 */	li r3, 0
/* 800D2074 000CDF94  B0 64 00 00 */	sth r3, 0(r4)
/* 800D2078 000CDF98  80 05 00 00 */	lwz r0, 0(r5)
/* 800D207C 000CDF9C  54 00 87 39 */	rlwinm. r0, r0, 0x10, 0x1c, 0x1c
/* 800D2080 000CDFA0  41 82 00 08 */	beq lbl_800D2088
/* 800D2084 000CDFA4  38 60 01 00 */	li r3, 0x100
lbl_800D2088:
/* 800D2088 000CDFA8  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D208C 000CDFAC  7C 00 1B 78 */	or r0, r0, r3
/* 800D2090 000CDFB0  B0 04 00 00 */	sth r0, 0(r4)
/* 800D2094 000CDFB4  80 05 00 00 */	lwz r0, 0(r5)
/* 800D2098 000CDFB8  54 00 86 B5 */	rlwinm. r0, r0, 0x10, 0x1a, 0x1a
/* 800D209C 000CDFBC  41 82 00 0C */	beq lbl_800D20A8
/* 800D20A0 000CDFC0  38 60 02 00 */	li r3, 0x200
/* 800D20A4 000CDFC4  48 00 00 08 */	b lbl_800D20AC
lbl_800D20A8:
/* 800D20A8 000CDFC8  38 60 00 00 */	li r3, 0
lbl_800D20AC:
/* 800D20AC 000CDFCC  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D20B0 000CDFD0  7C 00 1B 78 */	or r0, r0, r3
/* 800D20B4 000CDFD4  B0 04 00 00 */	sth r0, 0(r4)
/* 800D20B8 000CDFD8  80 05 00 00 */	lwz r0, 0(r5)
/* 800D20BC 000CDFDC  54 00 85 EF */	rlwinm. r0, r0, 0x10, 0x17, 0x17
/* 800D20C0 000CDFE0  41 82 00 0C */	beq lbl_800D20CC
/* 800D20C4 000CDFE4  38 60 04 00 */	li r3, 0x400
/* 800D20C8 000CDFE8  48 00 00 08 */	b lbl_800D20D0
lbl_800D20CC:
/* 800D20CC 000CDFEC  38 60 00 00 */	li r3, 0
lbl_800D20D0:
/* 800D20D0 000CDFF0  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D20D4 000CDFF4  7C 00 1B 78 */	or r0, r0, r3
/* 800D20D8 000CDFF8  B0 04 00 00 */	sth r0, 0(r4)
/* 800D20DC 000CDFFC  80 05 00 00 */	lwz r0, 0(r5)
/* 800D20E0 000CE000  54 00 87 FF */	rlwinm. r0, r0, 0x10, 0x1f, 0x1f
/* 800D20E4 000CE004  41 82 00 0C */	beq lbl_800D20F0
/* 800D20E8 000CE008  38 60 08 00 */	li r3, 0x800
/* 800D20EC 000CE00C  48 00 00 08 */	b lbl_800D20F4
lbl_800D20F0:
/* 800D20F0 000CE010  38 60 00 00 */	li r3, 0
lbl_800D20F4:
/* 800D20F4 000CE014  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D20F8 000CE018  7C 00 1B 78 */	or r0, r0, r3
/* 800D20FC 000CE01C  B0 04 00 00 */	sth r0, 0(r4)
/* 800D2100 000CE020  80 05 00 00 */	lwz r0, 0(r5)
/* 800D2104 000CE024  54 00 86 F7 */	rlwinm. r0, r0, 0x10, 0x1b, 0x1b
/* 800D2108 000CE028  41 82 00 0C */	beq lbl_800D2114
/* 800D210C 000CE02C  38 C0 10 00 */	li r6, 0x1000
/* 800D2110 000CE030  48 00 00 08 */	b lbl_800D2118
lbl_800D2114:
/* 800D2114 000CE034  38 C0 00 00 */	li r6, 0
lbl_800D2118:
/* 800D2118 000CE038  A0 64 00 00 */	lhz r3, 0(r4)
/* 800D211C 000CE03C  38 00 00 00 */	li r0, 0
/* 800D2120 000CE040  7C 63 33 78 */	or r3, r3, r6
/* 800D2124 000CE044  B0 64 00 00 */	sth r3, 0(r4)
/* 800D2128 000CE048  80 65 00 04 */	lwz r3, 4(r5)
/* 800D212C 000CE04C  54 63 84 3E */	srwi r3, r3, 0x10
/* 800D2130 000CE050  7C 63 07 74 */	extsb r3, r3
/* 800D2134 000CE054  98 64 00 02 */	stb r3, 2(r4)
/* 800D2138 000CE058  80 65 00 04 */	lwz r3, 4(r5)
/* 800D213C 000CE05C  54 63 46 3E */	srwi r3, r3, 0x18
/* 800D2140 000CE060  7C 63 07 74 */	extsb r3, r3
/* 800D2144 000CE064  98 64 00 03 */	stb r3, 3(r4)
/* 800D2148 000CE068  80 65 00 04 */	lwz r3, 4(r5)
/* 800D214C 000CE06C  7C 63 07 74 */	extsb r3, r3
/* 800D2150 000CE070  98 64 00 04 */	stb r3, 4(r4)
/* 800D2154 000CE074  80 65 00 04 */	lwz r3, 4(r5)
/* 800D2158 000CE078  54 63 C2 3E */	srwi r3, r3, 8
/* 800D215C 000CE07C  7C 63 07 74 */	extsb r3, r3
/* 800D2160 000CE080  98 64 00 05 */	stb r3, 5(r4)
/* 800D2164 000CE084  80 65 00 00 */	lwz r3, 0(r5)
/* 800D2168 000CE088  54 63 C6 3E */	rlwinm r3, r3, 0x18, 0x18, 0x1f
/* 800D216C 000CE08C  98 64 00 06 */	stb r3, 6(r4)
/* 800D2170 000CE090  80 65 00 00 */	lwz r3, 0(r5)
/* 800D2174 000CE094  98 64 00 07 */	stb r3, 7(r4)
/* 800D2178 000CE098  98 04 00 08 */	stb r0, 8(r4)
/* 800D217C 000CE09C  98 04 00 09 */	stb r0, 9(r4)
/* 800D2180 000CE0A0  88 04 00 06 */	lbz r0, 6(r4)
/* 800D2184 000CE0A4  28 00 00 AA */	cmplwi r0, 0xaa
/* 800D2188 000CE0A8  41 80 00 10 */	blt lbl_800D2198
/* 800D218C 000CE0AC  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D2190 000CE0B0  60 00 00 40 */	ori r0, r0, 0x40
/* 800D2194 000CE0B4  B0 04 00 00 */	sth r0, 0(r4)
lbl_800D2198:
/* 800D2198 000CE0B8  88 04 00 07 */	lbz r0, 7(r4)
/* 800D219C 000CE0BC  28 00 00 AA */	cmplwi r0, 0xaa
/* 800D21A0 000CE0C0  41 80 00 10 */	blt lbl_800D21B0
/* 800D21A4 000CE0C4  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D21A8 000CE0C8  60 00 00 20 */	ori r0, r0, 0x20
/* 800D21AC 000CE0CC  B0 04 00 00 */	sth r0, 0(r4)
lbl_800D21B0:
/* 800D21B0 000CE0D0  88 64 00 02 */	lbz r3, 2(r4)
/* 800D21B4 000CE0D4  38 03 FF 80 */	addi r0, r3, -128
/* 800D21B8 000CE0D8  98 04 00 02 */	stb r0, 2(r4)
/* 800D21BC 000CE0DC  88 64 00 03 */	lbz r3, 3(r4)
/* 800D21C0 000CE0E0  38 03 FF 80 */	addi r0, r3, -128
/* 800D21C4 000CE0E4  98 04 00 03 */	stb r0, 3(r4)
/* 800D21C8 000CE0E8  88 64 00 04 */	lbz r3, 4(r4)
/* 800D21CC 000CE0EC  38 03 FF 80 */	addi r0, r3, -128
/* 800D21D0 000CE0F0  98 04 00 04 */	stb r0, 4(r4)
/* 800D21D4 000CE0F4  88 64 00 05 */	lbz r3, 5(r4)
/* 800D21D8 000CE0F8  38 03 FF 80 */	addi r0, r3, -128
/* 800D21DC 000CE0FC  98 04 00 05 */	stb r0, 5(r4)
/* 800D21E0 000CE100  4E 80 00 20 */	blr

.global SPEC1_MakeStatus
SPEC1_MakeStatus:
/* 800D21E4 000CE104  38 60 00 00 */	li r3, 0
/* 800D21E8 000CE108  B0 64 00 00 */	sth r3, 0(r4)
/* 800D21EC 000CE10C  80 05 00 00 */	lwz r0, 0(r5)
/* 800D21F0 000CE110  54 00 86 31 */	rlwinm. r0, r0, 0x10, 0x18, 0x18
/* 800D21F4 000CE114  41 82 00 08 */	beq lbl_800D21FC
/* 800D21F8 000CE118  38 60 01 00 */	li r3, 0x100
lbl_800D21FC:
/* 800D21FC 000CE11C  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D2200 000CE120  7C 00 1B 78 */	or r0, r0, r3
/* 800D2204 000CE124  B0 04 00 00 */	sth r0, 0(r4)
/* 800D2208 000CE128  80 05 00 00 */	lwz r0, 0(r5)
/* 800D220C 000CE12C  54 00 85 EF */	rlwinm. r0, r0, 0x10, 0x17, 0x17
/* 800D2210 000CE130  41 82 00 0C */	beq lbl_800D221C
/* 800D2214 000CE134  38 60 02 00 */	li r3, 0x200
/* 800D2218 000CE138  48 00 00 08 */	b lbl_800D2220
lbl_800D221C:
/* 800D221C 000CE13C  38 60 00 00 */	li r3, 0
lbl_800D2220:
/* 800D2220 000CE140  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D2224 000CE144  7C 00 1B 78 */	or r0, r0, r3
/* 800D2228 000CE148  B0 04 00 00 */	sth r0, 0(r4)
/* 800D222C 000CE14C  80 05 00 00 */	lwz r0, 0(r5)
/* 800D2230 000CE150  54 00 86 B5 */	rlwinm. r0, r0, 0x10, 0x1a, 0x1a
/* 800D2234 000CE154  41 82 00 0C */	beq lbl_800D2240
/* 800D2238 000CE158  38 60 04 00 */	li r3, 0x400
/* 800D223C 000CE15C  48 00 00 08 */	b lbl_800D2244
lbl_800D2240:
/* 800D2240 000CE160  38 60 00 00 */	li r3, 0
lbl_800D2244:
/* 800D2244 000CE164  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D2248 000CE168  7C 00 1B 78 */	or r0, r0, r3
/* 800D224C 000CE16C  B0 04 00 00 */	sth r0, 0(r4)
/* 800D2250 000CE170  80 05 00 00 */	lwz r0, 0(r5)
/* 800D2254 000CE174  54 00 86 F7 */	rlwinm. r0, r0, 0x10, 0x1b, 0x1b
/* 800D2258 000CE178  41 82 00 0C */	beq lbl_800D2264
/* 800D225C 000CE17C  38 60 08 00 */	li r3, 0x800
/* 800D2260 000CE180  48 00 00 08 */	b lbl_800D2268
lbl_800D2264:
/* 800D2264 000CE184  38 60 00 00 */	li r3, 0
lbl_800D2268:
/* 800D2268 000CE188  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D226C 000CE18C  7C 00 1B 78 */	or r0, r0, r3
/* 800D2270 000CE190  B0 04 00 00 */	sth r0, 0(r4)
/* 800D2274 000CE194  80 05 00 00 */	lwz r0, 0(r5)
/* 800D2278 000CE198  54 00 85 AD */	rlwinm. r0, r0, 0x10, 0x16, 0x16
/* 800D227C 000CE19C  41 82 00 0C */	beq lbl_800D2288
/* 800D2280 000CE1A0  38 C0 10 00 */	li r6, 0x1000
/* 800D2284 000CE1A4  48 00 00 08 */	b lbl_800D228C
lbl_800D2288:
/* 800D2288 000CE1A8  38 C0 00 00 */	li r6, 0
lbl_800D228C:
/* 800D228C 000CE1AC  A0 64 00 00 */	lhz r3, 0(r4)
/* 800D2290 000CE1B0  38 00 00 00 */	li r0, 0
/* 800D2294 000CE1B4  7C 63 33 78 */	or r3, r3, r6
/* 800D2298 000CE1B8  B0 64 00 00 */	sth r3, 0(r4)
/* 800D229C 000CE1BC  80 65 00 04 */	lwz r3, 4(r5)
/* 800D22A0 000CE1C0  54 63 84 3E */	srwi r3, r3, 0x10
/* 800D22A4 000CE1C4  7C 63 07 74 */	extsb r3, r3
/* 800D22A8 000CE1C8  98 64 00 02 */	stb r3, 2(r4)
/* 800D22AC 000CE1CC  80 65 00 04 */	lwz r3, 4(r5)
/* 800D22B0 000CE1D0  54 63 46 3E */	srwi r3, r3, 0x18
/* 800D22B4 000CE1D4  7C 63 07 74 */	extsb r3, r3
/* 800D22B8 000CE1D8  98 64 00 03 */	stb r3, 3(r4)
/* 800D22BC 000CE1DC  80 65 00 04 */	lwz r3, 4(r5)
/* 800D22C0 000CE1E0  7C 63 07 74 */	extsb r3, r3
/* 800D22C4 000CE1E4  98 64 00 04 */	stb r3, 4(r4)
/* 800D22C8 000CE1E8  80 65 00 04 */	lwz r3, 4(r5)
/* 800D22CC 000CE1EC  54 63 C2 3E */	srwi r3, r3, 8
/* 800D22D0 000CE1F0  7C 63 07 74 */	extsb r3, r3
/* 800D22D4 000CE1F4  98 64 00 05 */	stb r3, 5(r4)
/* 800D22D8 000CE1F8  80 65 00 00 */	lwz r3, 0(r5)
/* 800D22DC 000CE1FC  54 63 C6 3E */	rlwinm r3, r3, 0x18, 0x18, 0x1f
/* 800D22E0 000CE200  98 64 00 06 */	stb r3, 6(r4)
/* 800D22E4 000CE204  80 65 00 00 */	lwz r3, 0(r5)
/* 800D22E8 000CE208  98 64 00 07 */	stb r3, 7(r4)
/* 800D22EC 000CE20C  98 04 00 08 */	stb r0, 8(r4)
/* 800D22F0 000CE210  98 04 00 09 */	stb r0, 9(r4)
/* 800D22F4 000CE214  88 04 00 06 */	lbz r0, 6(r4)
/* 800D22F8 000CE218  28 00 00 AA */	cmplwi r0, 0xaa
/* 800D22FC 000CE21C  41 80 00 10 */	blt lbl_800D230C
/* 800D2300 000CE220  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D2304 000CE224  60 00 00 40 */	ori r0, r0, 0x40
/* 800D2308 000CE228  B0 04 00 00 */	sth r0, 0(r4)
lbl_800D230C:
/* 800D230C 000CE22C  88 04 00 07 */	lbz r0, 7(r4)
/* 800D2310 000CE230  28 00 00 AA */	cmplwi r0, 0xaa
/* 800D2314 000CE234  41 80 00 10 */	blt lbl_800D2324
/* 800D2318 000CE238  A0 04 00 00 */	lhz r0, 0(r4)
/* 800D231C 000CE23C  60 00 00 20 */	ori r0, r0, 0x20
/* 800D2320 000CE240  B0 04 00 00 */	sth r0, 0(r4)
lbl_800D2324:
/* 800D2324 000CE244  88 64 00 02 */	lbz r3, 2(r4)
/* 800D2328 000CE248  38 03 FF 80 */	addi r0, r3, -128
/* 800D232C 000CE24C  98 04 00 02 */	stb r0, 2(r4)
/* 800D2330 000CE250  88 64 00 03 */	lbz r3, 3(r4)
/* 800D2334 000CE254  38 03 FF 80 */	addi r0, r3, -128
/* 800D2338 000CE258  98 04 00 03 */	stb r0, 3(r4)
/* 800D233C 000CE25C  88 64 00 04 */	lbz r3, 4(r4)
/* 800D2340 000CE260  38 03 FF 80 */	addi r0, r3, -128
/* 800D2344 000CE264  98 04 00 04 */	stb r0, 4(r4)
/* 800D2348 000CE268  88 64 00 05 */	lbz r3, 5(r4)
/* 800D234C 000CE26C  38 03 FF 80 */	addi r0, r3, -128
/* 800D2350 000CE270  98 04 00 05 */	stb r0, 5(r4)
/* 800D2354 000CE274  4E 80 00 20 */	blr

.global SPEC2_MakeStatus
SPEC2_MakeStatus:
/* 800D2358 000CE278  80 05 00 00 */	lwz r0, 0(r5)
/* 800D235C 000CE27C  54 00 84 BE */	rlwinm r0, r0, 0x10, 0x12, 0x1f
/* 800D2360 000CE280  B0 04 00 00 */	sth r0, 0(r4)
/* 800D2364 000CE284  80 05 00 00 */	lwz r0, 0(r5)
/* 800D2368 000CE288  54 00 C2 3E */	srwi r0, r0, 8
/* 800D236C 000CE28C  7C 00 07 74 */	extsb r0, r0
/* 800D2370 000CE290  98 04 00 02 */	stb r0, 2(r4)
/* 800D2374 000CE294  80 05 00 00 */	lwz r0, 0(r5)
/* 800D2378 000CE298  7C 00 07 74 */	extsb r0, r0
/* 800D237C 000CE29C  98 04 00 03 */	stb r0, 3(r4)
/* 800D2380 000CE2A0  80 0D 97 A0 */	lwz r0, AnalogMode@sda21(r13)
/* 800D2384 000CE2A4  54 00 05 6E */	rlwinm r0, r0, 0, 0x15, 0x17
/* 800D2388 000CE2A8  2C 00 04 00 */	cmpwi r0, 0x400
/* 800D238C 000CE2AC  41 82 01 98 */	beq lbl_800D2524
/* 800D2390 000CE2B0  40 80 00 34 */	bge lbl_800D23C4
/* 800D2394 000CE2B4  2C 00 02 00 */	cmpwi r0, 0x200
/* 800D2398 000CE2B8  41 82 00 F8 */	beq lbl_800D2490
/* 800D239C 000CE2BC  40 80 00 1C */	bge lbl_800D23B8
/* 800D23A0 000CE2C0  2C 00 01 00 */	cmpwi r0, 0x100
/* 800D23A4 000CE2C4  41 82 00 98 */	beq lbl_800D243C
/* 800D23A8 000CE2C8  40 80 01 BC */	bge lbl_800D2564
/* 800D23AC 000CE2CC  2C 00 00 00 */	cmpwi r0, 0
/* 800D23B0 000CE2D0  41 82 00 38 */	beq lbl_800D23E8
/* 800D23B4 000CE2D4  48 00 01 B0 */	b lbl_800D2564
lbl_800D23B8:
/* 800D23B8 000CE2D8  2C 00 03 00 */	cmpwi r0, 0x300
/* 800D23BC 000CE2DC  41 82 01 24 */	beq lbl_800D24E0
/* 800D23C0 000CE2E0  48 00 01 A4 */	b lbl_800D2564
lbl_800D23C4:
/* 800D23C4 000CE2E4  2C 00 06 00 */	cmpwi r0, 0x600
/* 800D23C8 000CE2E8  41 82 00 20 */	beq lbl_800D23E8
/* 800D23CC 000CE2EC  40 80 00 10 */	bge lbl_800D23DC
/* 800D23D0 000CE2F0  2C 00 05 00 */	cmpwi r0, 0x500
/* 800D23D4 000CE2F4  41 82 00 14 */	beq lbl_800D23E8
/* 800D23D8 000CE2F8  48 00 01 8C */	b lbl_800D2564
lbl_800D23DC:
/* 800D23DC 000CE2FC  2C 00 07 00 */	cmpwi r0, 0x700
/* 800D23E0 000CE300  41 82 00 08 */	beq lbl_800D23E8
/* 800D23E4 000CE304  48 00 01 80 */	b lbl_800D2564
lbl_800D23E8:
/* 800D23E8 000CE308  80 05 00 04 */	lwz r0, 4(r5)
/* 800D23EC 000CE30C  54 00 46 3E */	srwi r0, r0, 0x18
/* 800D23F0 000CE310  7C 00 07 74 */	extsb r0, r0
/* 800D23F4 000CE314  98 04 00 04 */	stb r0, 4(r4)
/* 800D23F8 000CE318  80 05 00 04 */	lwz r0, 4(r5)
/* 800D23FC 000CE31C  54 00 84 3E */	srwi r0, r0, 0x10
/* 800D2400 000CE320  7C 00 07 74 */	extsb r0, r0
/* 800D2404 000CE324  98 04 00 05 */	stb r0, 5(r4)
/* 800D2408 000CE328  80 05 00 04 */	lwz r0, 4(r5)
/* 800D240C 000CE32C  54 00 C6 36 */	rlwinm r0, r0, 0x18, 0x18, 0x1b
/* 800D2410 000CE330  98 04 00 06 */	stb r0, 6(r4)
/* 800D2414 000CE334  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2418 000CE338  54 00 E6 36 */	rlwinm r0, r0, 0x1c, 0x18, 0x1b
/* 800D241C 000CE33C  98 04 00 07 */	stb r0, 7(r4)
/* 800D2420 000CE340  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2424 000CE344  54 00 06 36 */	rlwinm r0, r0, 0, 0x18, 0x1b
/* 800D2428 000CE348  98 04 00 08 */	stb r0, 8(r4)
/* 800D242C 000CE34C  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2430 000CE350  54 00 26 36 */	rlwinm r0, r0, 4, 0x18, 0x1b
/* 800D2434 000CE354  98 04 00 09 */	stb r0, 9(r4)
/* 800D2438 000CE358  48 00 01 2C */	b lbl_800D2564
lbl_800D243C:
/* 800D243C 000CE35C  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2440 000CE360  54 00 46 36 */	rlwinm r0, r0, 8, 0x18, 0x1b
/* 800D2444 000CE364  7C 00 07 74 */	extsb r0, r0
/* 800D2448 000CE368  98 04 00 04 */	stb r0, 4(r4)
/* 800D244C 000CE36C  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2450 000CE370  54 00 66 36 */	rlwinm r0, r0, 0xc, 0x18, 0x1b
/* 800D2454 000CE374  7C 00 07 74 */	extsb r0, r0
/* 800D2458 000CE378  98 04 00 05 */	stb r0, 5(r4)
/* 800D245C 000CE37C  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2460 000CE380  54 00 86 3E */	rlwinm r0, r0, 0x10, 0x18, 0x1f
/* 800D2464 000CE384  98 04 00 06 */	stb r0, 6(r4)
/* 800D2468 000CE388  80 05 00 04 */	lwz r0, 4(r5)
/* 800D246C 000CE38C  54 00 C6 3E */	rlwinm r0, r0, 0x18, 0x18, 0x1f
/* 800D2470 000CE390  98 04 00 07 */	stb r0, 7(r4)
/* 800D2474 000CE394  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2478 000CE398  54 00 06 36 */	rlwinm r0, r0, 0, 0x18, 0x1b
/* 800D247C 000CE39C  98 04 00 08 */	stb r0, 8(r4)
/* 800D2480 000CE3A0  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2484 000CE3A4  54 00 26 36 */	rlwinm r0, r0, 4, 0x18, 0x1b
/* 800D2488 000CE3A8  98 04 00 09 */	stb r0, 9(r4)
/* 800D248C 000CE3AC  48 00 00 D8 */	b lbl_800D2564
lbl_800D2490:
/* 800D2490 000CE3B0  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2494 000CE3B4  54 00 46 36 */	rlwinm r0, r0, 8, 0x18, 0x1b
/* 800D2498 000CE3B8  7C 00 07 74 */	extsb r0, r0
/* 800D249C 000CE3BC  98 04 00 04 */	stb r0, 4(r4)
/* 800D24A0 000CE3C0  80 05 00 04 */	lwz r0, 4(r5)
/* 800D24A4 000CE3C4  54 00 66 36 */	rlwinm r0, r0, 0xc, 0x18, 0x1b
/* 800D24A8 000CE3C8  7C 00 07 74 */	extsb r0, r0
/* 800D24AC 000CE3CC  98 04 00 05 */	stb r0, 5(r4)
/* 800D24B0 000CE3D0  80 05 00 04 */	lwz r0, 4(r5)
/* 800D24B4 000CE3D4  54 00 86 36 */	rlwinm r0, r0, 0x10, 0x18, 0x1b
/* 800D24B8 000CE3D8  98 04 00 06 */	stb r0, 6(r4)
/* 800D24BC 000CE3DC  80 05 00 04 */	lwz r0, 4(r5)
/* 800D24C0 000CE3E0  54 00 A6 36 */	rlwinm r0, r0, 0x14, 0x18, 0x1b
/* 800D24C4 000CE3E4  98 04 00 07 */	stb r0, 7(r4)
/* 800D24C8 000CE3E8  80 05 00 04 */	lwz r0, 4(r5)
/* 800D24CC 000CE3EC  54 00 C6 3E */	rlwinm r0, r0, 0x18, 0x18, 0x1f
/* 800D24D0 000CE3F0  98 04 00 08 */	stb r0, 8(r4)
/* 800D24D4 000CE3F4  80 05 00 04 */	lwz r0, 4(r5)
/* 800D24D8 000CE3F8  98 04 00 09 */	stb r0, 9(r4)
/* 800D24DC 000CE3FC  48 00 00 88 */	b lbl_800D2564
lbl_800D24E0:
/* 800D24E0 000CE400  80 C5 00 04 */	lwz r6, 4(r5)
/* 800D24E4 000CE404  38 00 00 00 */	li r0, 0
/* 800D24E8 000CE408  54 C6 46 3E */	srwi r6, r6, 0x18
/* 800D24EC 000CE40C  7C C6 07 74 */	extsb r6, r6
/* 800D24F0 000CE410  98 C4 00 04 */	stb r6, 4(r4)
/* 800D24F4 000CE414  80 C5 00 04 */	lwz r6, 4(r5)
/* 800D24F8 000CE418  54 C6 84 3E */	srwi r6, r6, 0x10
/* 800D24FC 000CE41C  7C C6 07 74 */	extsb r6, r6
/* 800D2500 000CE420  98 C4 00 05 */	stb r6, 5(r4)
/* 800D2504 000CE424  80 C5 00 04 */	lwz r6, 4(r5)
/* 800D2508 000CE428  54 C6 C6 3E */	rlwinm r6, r6, 0x18, 0x18, 0x1f
/* 800D250C 000CE42C  98 C4 00 06 */	stb r6, 6(r4)
/* 800D2510 000CE430  80 A5 00 04 */	lwz r5, 4(r5)
/* 800D2514 000CE434  98 A4 00 07 */	stb r5, 7(r4)
/* 800D2518 000CE438  98 04 00 08 */	stb r0, 8(r4)
/* 800D251C 000CE43C  98 04 00 09 */	stb r0, 9(r4)
/* 800D2520 000CE440  48 00 00 44 */	b lbl_800D2564
lbl_800D2524:
/* 800D2524 000CE444  80 C5 00 04 */	lwz r6, 4(r5)
/* 800D2528 000CE448  38 00 00 00 */	li r0, 0
/* 800D252C 000CE44C  54 C6 46 3E */	srwi r6, r6, 0x18
/* 800D2530 000CE450  7C C6 07 74 */	extsb r6, r6
/* 800D2534 000CE454  98 C4 00 04 */	stb r6, 4(r4)
/* 800D2538 000CE458  80 C5 00 04 */	lwz r6, 4(r5)
/* 800D253C 000CE45C  54 C6 84 3E */	srwi r6, r6, 0x10
/* 800D2540 000CE460  7C C6 07 74 */	extsb r6, r6
/* 800D2544 000CE464  98 C4 00 05 */	stb r6, 5(r4)
/* 800D2548 000CE468  98 04 00 06 */	stb r0, 6(r4)
/* 800D254C 000CE46C  98 04 00 07 */	stb r0, 7(r4)
/* 800D2550 000CE470  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2554 000CE474  54 00 C6 3E */	rlwinm r0, r0, 0x18, 0x18, 0x1f
/* 800D2558 000CE478  98 04 00 08 */	stb r0, 8(r4)
/* 800D255C 000CE47C  80 05 00 04 */	lwz r0, 4(r5)
/* 800D2560 000CE480  98 04 00 09 */	stb r0, 9(r4)
lbl_800D2564:
/* 800D2564 000CE484  88 C4 00 02 */	lbz r6, 2(r4)
/* 800D2568 000CE488  3C A0 80 2C */	lis r5, Origin@ha
/* 800D256C 000CE48C  1C 63 00 0C */	mulli r3, r3, 0xc
/* 800D2570 000CE490  38 06 FF 80 */	addi r0, r6, -128
/* 800D2574 000CE494  98 04 00 02 */	stb r0, 2(r4)
/* 800D2578 000CE498  38 05 7C 10 */	addi r0, r5, Origin@l
/* 800D257C 000CE49C  7C 60 1A 14 */	add r3, r0, r3
/* 800D2580 000CE4A0  88 A4 00 03 */	lbz r5, 3(r4)
/* 800D2584 000CE4A4  38 05 FF 80 */	addi r0, r5, -128
/* 800D2588 000CE4A8  98 04 00 03 */	stb r0, 3(r4)
/* 800D258C 000CE4AC  88 A4 00 04 */	lbz r5, 4(r4)
/* 800D2590 000CE4B0  38 05 FF 80 */	addi r0, r5, -128
/* 800D2594 000CE4B4  98 04 00 04 */	stb r0, 4(r4)
/* 800D2598 000CE4B8  88 A4 00 05 */	lbz r5, 5(r4)
/* 800D259C 000CE4BC  38 05 FF 80 */	addi r0, r5, -128
/* 800D25A0 000CE4C0  98 04 00 05 */	stb r0, 5(r4)
/* 800D25A4 000CE4C4  88 E3 00 02 */	lbz r7, 2(r3)
/* 800D25A8 000CE4C8  88 C4 00 02 */	lbz r6, 2(r4)
/* 800D25AC 000CE4CC  7C E0 07 75 */	extsb. r0, r7
/* 800D25B0 000CE4D0  40 81 00 24 */	ble lbl_800D25D4
/* 800D25B4 000CE4D4  7C E5 07 74 */	extsb r5, r7
/* 800D25B8 000CE4D8  38 05 FF 80 */	addi r0, r5, -128
/* 800D25BC 000CE4DC  7C 05 07 74 */	extsb r5, r0
/* 800D25C0 000CE4E0  7C C0 07 74 */	extsb r0, r6
/* 800D25C4 000CE4E4  7C 00 28 00 */	cmpw r0, r5
/* 800D25C8 000CE4E8  40 80 00 30 */	bge lbl_800D25F8
/* 800D25CC 000CE4EC  7C A6 2B 78 */	mr r6, r5
/* 800D25D0 000CE4F0  48 00 00 28 */	b lbl_800D25F8
lbl_800D25D4:
/* 800D25D4 000CE4F4  7C E0 07 75 */	extsb. r0, r7
/* 800D25D8 000CE4F8  40 80 00 20 */	bge lbl_800D25F8
/* 800D25DC 000CE4FC  7C E5 07 74 */	extsb r5, r7
/* 800D25E0 000CE500  38 05 00 7F */	addi r0, r5, 0x7f
/* 800D25E4 000CE504  7C 05 07 74 */	extsb r5, r0
/* 800D25E8 000CE508  7C C0 07 74 */	extsb r0, r6
/* 800D25EC 000CE50C  7C 05 00 00 */	cmpw r5, r0
/* 800D25F0 000CE510  40 80 00 08 */	bge lbl_800D25F8
/* 800D25F4 000CE514  7C A6 2B 78 */	mr r6, r5
lbl_800D25F8:
/* 800D25F8 000CE518  7C C7 30 50 */	subf r6, r7, r6
/* 800D25FC 000CE51C  98 C4 00 02 */	stb r6, 2(r4)
/* 800D2600 000CE520  88 E3 00 03 */	lbz r7, 3(r3)
/* 800D2604 000CE524  88 C4 00 03 */	lbz r6, 3(r4)
/* 800D2608 000CE528  7C E0 07 75 */	extsb. r0, r7
/* 800D260C 000CE52C  40 81 00 24 */	ble lbl_800D2630
/* 800D2610 000CE530  7C E5 07 74 */	extsb r5, r7
/* 800D2614 000CE534  38 05 FF 80 */	addi r0, r5, -128
/* 800D2618 000CE538  7C 05 07 74 */	extsb r5, r0
/* 800D261C 000CE53C  7C C0 07 74 */	extsb r0, r6
/* 800D2620 000CE540  7C 00 28 00 */	cmpw r0, r5
/* 800D2624 000CE544  40 80 00 30 */	bge lbl_800D2654
/* 800D2628 000CE548  7C A6 2B 78 */	mr r6, r5
/* 800D262C 000CE54C  48 00 00 28 */	b lbl_800D2654
lbl_800D2630:
/* 800D2630 000CE550  7C E0 07 75 */	extsb. r0, r7
/* 800D2634 000CE554  40 80 00 20 */	bge lbl_800D2654
/* 800D2638 000CE558  7C E5 07 74 */	extsb r5, r7
/* 800D263C 000CE55C  38 05 00 7F */	addi r0, r5, 0x7f
/* 800D2640 000CE560  7C 05 07 74 */	extsb r5, r0
/* 800D2644 000CE564  7C C0 07 74 */	extsb r0, r6
/* 800D2648 000CE568  7C 05 00 00 */	cmpw r5, r0
/* 800D264C 000CE56C  40 80 00 08 */	bge lbl_800D2654
/* 800D2650 000CE570  7C A6 2B 78 */	mr r6, r5
lbl_800D2654:
/* 800D2654 000CE574  7C C7 30 50 */	subf r6, r7, r6
/* 800D2658 000CE578  98 C4 00 03 */	stb r6, 3(r4)
/* 800D265C 000CE57C  88 E3 00 04 */	lbz r7, 4(r3)
/* 800D2660 000CE580  88 C4 00 04 */	lbz r6, 4(r4)
/* 800D2664 000CE584  7C E0 07 75 */	extsb. r0, r7
/* 800D2668 000CE588  40 81 00 24 */	ble lbl_800D268C
/* 800D266C 000CE58C  7C E5 07 74 */	extsb r5, r7
/* 800D2670 000CE590  38 05 FF 80 */	addi r0, r5, -128
/* 800D2674 000CE594  7C 05 07 74 */	extsb r5, r0
/* 800D2678 000CE598  7C C0 07 74 */	extsb r0, r6
/* 800D267C 000CE59C  7C 00 28 00 */	cmpw r0, r5
/* 800D2680 000CE5A0  40 80 00 30 */	bge lbl_800D26B0
/* 800D2684 000CE5A4  7C A6 2B 78 */	mr r6, r5
/* 800D2688 000CE5A8  48 00 00 28 */	b lbl_800D26B0
lbl_800D268C:
/* 800D268C 000CE5AC  7C E0 07 75 */	extsb. r0, r7
/* 800D2690 000CE5B0  40 80 00 20 */	bge lbl_800D26B0
/* 800D2694 000CE5B4  7C E5 07 74 */	extsb r5, r7
/* 800D2698 000CE5B8  38 05 00 7F */	addi r0, r5, 0x7f
/* 800D269C 000CE5BC  7C 05 07 74 */	extsb r5, r0
/* 800D26A0 000CE5C0  7C C0 07 74 */	extsb r0, r6
/* 800D26A4 000CE5C4  7C 05 00 00 */	cmpw r5, r0
/* 800D26A8 000CE5C8  40 80 00 08 */	bge lbl_800D26B0
/* 800D26AC 000CE5CC  7C A6 2B 78 */	mr r6, r5
lbl_800D26B0:
/* 800D26B0 000CE5D0  7C C7 30 50 */	subf r6, r7, r6
/* 800D26B4 000CE5D4  98 C4 00 04 */	stb r6, 4(r4)
/* 800D26B8 000CE5D8  88 E3 00 05 */	lbz r7, 5(r3)
/* 800D26BC 000CE5DC  88 C4 00 05 */	lbz r6, 5(r4)
/* 800D26C0 000CE5E0  7C E0 07 75 */	extsb. r0, r7
/* 800D26C4 000CE5E4  40 81 00 24 */	ble lbl_800D26E8
/* 800D26C8 000CE5E8  7C E5 07 74 */	extsb r5, r7
/* 800D26CC 000CE5EC  38 05 FF 80 */	addi r0, r5, -128
/* 800D26D0 000CE5F0  7C 05 07 74 */	extsb r5, r0
/* 800D26D4 000CE5F4  7C C0 07 74 */	extsb r0, r6
/* 800D26D8 000CE5F8  7C 00 28 00 */	cmpw r0, r5
/* 800D26DC 000CE5FC  40 80 00 30 */	bge lbl_800D270C
/* 800D26E0 000CE600  7C A6 2B 78 */	mr r6, r5
/* 800D26E4 000CE604  48 00 00 28 */	b lbl_800D270C
lbl_800D26E8:
/* 800D26E8 000CE608  7C E0 07 75 */	extsb. r0, r7
/* 800D26EC 000CE60C  40 80 00 20 */	bge lbl_800D270C
/* 800D26F0 000CE610  7C E5 07 74 */	extsb r5, r7
/* 800D26F4 000CE614  38 05 00 7F */	addi r0, r5, 0x7f
/* 800D26F8 000CE618  7C 05 07 74 */	extsb r5, r0
/* 800D26FC 000CE61C  7C C0 07 74 */	extsb r0, r6
/* 800D2700 000CE620  7C 05 00 00 */	cmpw r5, r0
/* 800D2704 000CE624  40 80 00 08 */	bge lbl_800D270C
/* 800D2708 000CE628  7C A6 2B 78 */	mr r6, r5
lbl_800D270C:
/* 800D270C 000CE62C  7C C7 30 50 */	subf r6, r7, r6
/* 800D2710 000CE630  98 C4 00 05 */	stb r6, 5(r4)
/* 800D2714 000CE634  88 03 00 06 */	lbz r0, 6(r3)
/* 800D2718 000CE638  88 A4 00 06 */	lbz r5, 6(r4)
/* 800D271C 000CE63C  7C 05 00 40 */	cmplw r5, r0
/* 800D2720 000CE640  40 80 00 08 */	bge lbl_800D2728
/* 800D2724 000CE644  7C 05 03 78 */	mr r5, r0
lbl_800D2728:
/* 800D2728 000CE648  7C A0 28 50 */	subf r5, r0, r5
/* 800D272C 000CE64C  98 A4 00 06 */	stb r5, 6(r4)
/* 800D2730 000CE650  88 03 00 07 */	lbz r0, 7(r3)
/* 800D2734 000CE654  88 64 00 07 */	lbz r3, 7(r4)
/* 800D2738 000CE658  7C 03 00 40 */	cmplw r3, r0
/* 800D273C 000CE65C  40 80 00 08 */	bge lbl_800D2744
/* 800D2740 000CE660  7C 03 03 78 */	mr r3, r0
lbl_800D2744:
/* 800D2744 000CE664  7C 60 18 50 */	subf r3, r0, r3
/* 800D2748 000CE668  98 64 00 07 */	stb r3, 7(r4)
/* 800D274C 000CE66C  4E 80 00 20 */	blr

.global PADSetAnalogMode
PADSetAnalogMode:
/* 800D2750 000CE670  7C 08 02 A6 */	mflr r0
/* 800D2754 000CE674  90 01 00 04 */	stw r0, 4(r1)
/* 800D2758 000CE678  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 800D275C 000CE67C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800D2760 000CE680  7C 7F 1B 78 */	mr r31, r3
/* 800D2764 000CE684  4B FF 39 59 */	bl OSDisableInterrupts
/* 800D2768 000CE688  80 AD A2 8C */	lwz r5, EnabledBits@sda21(r13)
/* 800D276C 000CE68C  57 E6 40 2E */	slwi r6, r31, 8
/* 800D2770 000CE690  80 0D A2 94 */	lwz r0, ProbingBits@sda21(r13)
/* 800D2774 000CE694  3B E3 00 00 */	addi r31, r3, 0
/* 800D2778 000CE698  80 8D A2 9C */	lwz r4, WaitingBits@sda21(r13)
/* 800D277C 000CE69C  7C A8 00 78 */	andc r8, r5, r0
/* 800D2780 000CE6A0  80 0D A2 A0 */	lwz r0, CheckingBits@sda21(r13)
/* 800D2784 000CE6A4  7D 07 40 F8 */	nor r7, r8, r8
/* 800D2788 000CE6A8  90 CD 97 A0 */	stw r6, AnalogMode@sda21(r13)
/* 800D278C 000CE6AC  7C A5 38 38 */	and r5, r5, r7
/* 800D2790 000CE6B0  7C 84 38 38 */	and r4, r4, r7
/* 800D2794 000CE6B4  90 AD A2 8C */	stw r5, EnabledBits@sda21(r13)
/* 800D2798 000CE6B8  7C 00 38 38 */	and r0, r0, r7
/* 800D279C 000CE6BC  90 8D A2 9C */	stw r4, WaitingBits@sda21(r13)
/* 800D27A0 000CE6C0  38 68 00 00 */	addi r3, r8, 0
/* 800D27A4 000CE6C4  90 0D A2 A0 */	stw r0, CheckingBits@sda21(r13)
/* 800D27A8 000CE6C8  4B FF 60 FD */	bl SIDisablePolling
/* 800D27AC 000CE6CC  7F E3 FB 78 */	mr r3, r31
/* 800D27B0 000CE6D0  4B FF 39 35 */	bl OSRestoreInterrupts
/* 800D27B4 000CE6D4  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 800D27B8 000CE6D8  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800D27BC 000CE6DC  38 21 00 18 */	addi r1, r1, 0x18
/* 800D27C0 000CE6E0  7C 08 03 A6 */	mtlr r0
/* 800D27C4 000CE6E4  4E 80 00 20 */	blr
.global func_800D27C8
func_800D27C8:
/* 800D27C8 000CE6E8  7C 08 02 A6 */	mflr r0
/* 800D27CC 000CE6EC  2C 03 00 00 */	cmpwi r3, 0
/* 800D27D0 000CE6F0  90 01 00 04 */	stw r0, 4(r1)
/* 800D27D4 000CE6F4  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800D27D8 000CE6F8  93 E1 00 24 */	stw r31, 0x24(r1)
/* 800D27DC 000CE6FC  93 C1 00 20 */	stw r30, 0x20(r1)
/* 800D27E0 000CE700  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 800D27E4 000CE704  40 82 00 D8 */	bne lbl_800D28BC
/* 800D27E8 000CE708  80 0D A2 90 */	lwz r0, ResettingBits@sda21(r13)
/* 800D27EC 000CE70C  3B A0 00 00 */	li r29, 0
/* 800D27F0 000CE710  38 7D 00 00 */	addi r3, r29, 0
/* 800D27F4 000CE714  28 00 00 00 */	cmplwi r0, 0
/* 800D27F8 000CE718  40 82 00 14 */	bne lbl_800D280C
/* 800D27FC 000CE71C  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D2800 000CE720  2C 00 00 20 */	cmpwi r0, 0x20
/* 800D2804 000CE724  40 82 00 08 */	bne lbl_800D280C
/* 800D2808 000CE728  38 60 00 01 */	li r3, 1
lbl_800D280C:
/* 800D280C 000CE72C  2C 03 00 00 */	cmpwi r3, 0
/* 800D2810 000CE730  41 82 00 14 */	beq lbl_800D2824
/* 800D2814 000CE734  4B FF 59 69 */	bl SIBusy
/* 800D2818 000CE738  2C 03 00 00 */	cmpwi r3, 0
/* 800D281C 000CE73C  40 82 00 08 */	bne lbl_800D2824
/* 800D2820 000CE740  3B A0 00 01 */	li r29, 1
lbl_800D2824:
/* 800D2824 000CE744  80 0D A2 A8 */	lwz r0, recalibrated@sda21(r13)
/* 800D2828 000CE748  2C 00 00 00 */	cmpwi r0, 0
/* 800D282C 000CE74C  40 82 00 88 */	bne lbl_800D28B4
/* 800D2830 000CE750  2C 1D 00 00 */	cmpwi r29, 0
/* 800D2834 000CE754  41 82 00 80 */	beq lbl_800D28B4
/* 800D2838 000CE758  3F A0 F0 00 */	lis r29, 0xf000
/* 800D283C 000CE75C  3B E0 00 00 */	li r31, 0
/* 800D2840 000CE760  4B FF 38 7D */	bl OSDisableInterrupts
/* 800D2844 000CE764  80 8D A2 94 */	lwz r4, ProbingBits@sda21(r13)
/* 800D2848 000CE768  7C 7E 1B 78 */	mr r30, r3
/* 800D284C 000CE76C  80 0D A2 9C */	lwz r0, WaitingBits@sda21(r13)
/* 800D2850 000CE770  80 6D A2 A0 */	lwz r3, CheckingBits@sda21(r13)
/* 800D2854 000CE774  7C 80 03 78 */	or r0, r4, r0
/* 800D2858 000CE778  80 8D A2 90 */	lwz r4, ResettingBits@sda21(r13)
/* 800D285C 000CE77C  7C 60 03 78 */	or r0, r3, r0
/* 800D2860 000CE780  80 6D A2 8C */	lwz r3, EnabledBits@sda21(r13)
/* 800D2864 000CE784  7F BD 00 78 */	andc r29, r29, r0
/* 800D2868 000CE788  80 0D A2 98 */	lwz r0, RecalibrateBits@sda21(r13)
/* 800D286C 000CE78C  7C 84 EB 78 */	or r4, r4, r29
/* 800D2870 000CE790  7C 63 E8 78 */	andc r3, r3, r29
/* 800D2874 000CE794  90 8D A2 90 */	stw r4, ResettingBits@sda21(r13)
/* 800D2878 000CE798  7C 00 EB 78 */	or r0, r0, r29
/* 800D287C 000CE79C  90 6D A2 8C */	stw r3, EnabledBits@sda21(r13)
/* 800D2880 000CE7A0  80 6D A2 90 */	lwz r3, ResettingBits@sda21(r13)
/* 800D2884 000CE7A4  90 0D A2 98 */	stw r0, RecalibrateBits@sda21(r13)
/* 800D2888 000CE7A8  4B FF 60 1D */	bl SIDisablePolling
/* 800D288C 000CE7AC  80 0D 97 98 */	lwz r0, ResettingChan@sda21(r13)
/* 800D2890 000CE7B0  2C 00 00 20 */	cmpwi r0, 0x20
/* 800D2894 000CE7B4  40 82 00 0C */	bne lbl_800D28A0
/* 800D2898 000CE7B8  4B FF DD 09 */	bl DoReset
/* 800D289C 000CE7BC  7C 7F 1B 78 */	mr r31, r3
lbl_800D28A0:
/* 800D28A0 000CE7C0  7F C3 F3 78 */	mr r3, r30
/* 800D28A4 000CE7C4  4B FF 38 41 */	bl OSRestoreInterrupts
/* 800D28A8 000CE7C8  93 ED A2 A8 */	stw r31, recalibrated@sda21(r13)
/* 800D28AC 000CE7CC  38 60 00 00 */	li r3, 0
/* 800D28B0 000CE7D0  48 00 00 18 */	b lbl_800D28C8
lbl_800D28B4:
/* 800D28B4 000CE7D4  7F A3 EB 78 */	mr r3, r29
/* 800D28B8 000CE7D8  48 00 00 10 */	b lbl_800D28C8
lbl_800D28BC:
/* 800D28BC 000CE7DC  38 00 00 00 */	li r0, 0
/* 800D28C0 000CE7E0  90 0D A2 A8 */	stw r0, recalibrated@sda21(r13)
/* 800D28C4 000CE7E4  38 60 00 01 */	li r3, 1
lbl_800D28C8:
/* 800D28C8 000CE7E8  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800D28CC 000CE7EC  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800D28D0 000CE7F0  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800D28D4 000CE7F4  7C 08 03 A6 */	mtlr r0
/* 800D28D8 000CE7F8  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 800D28DC 000CE7FC  38 21 00 28 */	addi r1, r1, 0x28
/* 800D28E0 000CE800  4E 80 00 20 */	blr

.section .data

.global lbl_801E8880
lbl_801E8880:
	# ROM: 0x1E5880
	.4byte func_800D27C8  ;# ptr
	.4byte 0x0000007F
	.4byte 0
	.4byte 0
	.4byte 0xF7020E13
	.4byte 0x1D092507
	.4byte 0x34054104
	.4byte 0x57035703
	.4byte 0x57038302
	.4byte 0x83028302
	.4byte 0x94030D18
	.4byte 0x1A0C2708
	.4byte 0x34063E05
	.4byte 0x4E046803
	.4byte 0x68036803
	.4byte 0x68039C02
glabel string_PADSetSamplingRate__unknown_TV_format
	.asciz "PADSetSamplingRate: unknown TV format"
	.balign 4

.section .sdata

    .balign 8
.global ResettingChan
ResettingChan:
	# ROM: 0x1EC0B8
	.4byte 0x00000020

.global XPatchBits
XPatchBits:
	# ROM: 0x1EC0BC
	.4byte 0xF0000000

.global AnalogMode
AnalogMode:
	# ROM: 0x1EC0C0
	.4byte 0x00000300

.global MakeStatus
MakeStatus:
	# ROM: 0x1EC0C4
	.4byte 0x00000005

.global lbl_802F1988
lbl_802F1988:
	# ROM: 0x1EC0C8
	.4byte SPEC2_MakeStatus  ;# ptr

.global cmdReadOrigin
cmdReadOrigin:
	# ROM: 0x1EC0CC
	.4byte 0x41000000

.global cmdCalibrate
cmdCalibrate:
	# ROM: 0x1EC0D0
	.4byte 0x42000000

.global lbl_802F1994
lbl_802F1994:
	# ROM: 0x1EC0D4
glabel string_Pad_c
	.asciz "Pad.c"
	.balign 4
	.4byte 0

.section .sbss

.global lbl_802F2468
lbl_802F2468:
	.skip 0x4
.global EnabledBits
EnabledBits:
	.skip 0x4
.global ResettingBits
ResettingBits:
	.skip 0x4
.global ProbingBits
ProbingBits:
	.skip 0x4
.global RecalibrateBits
RecalibrateBits:
	.skip 0x4
.global WaitingBits
WaitingBits:
	.skip 0x4
.global CheckingBits
CheckingBits:
	.skip 0x4
.global cmdTypeAndStatus
cmdTypeAndStatus:
	.skip 0x4
.global recalibrated
recalibrated:
	.skip 0x4
.global __PADSpec
__PADSpec:
	.skip 0x4
.global __PADFixBits
__PADFixBits:
	.skip 0x8

.section .bss

.global PADType
PADType:
	.skip 0x10
.global Type
Type:
	.skip 0x10
.global Origin
Origin:
	.skip 0x50
