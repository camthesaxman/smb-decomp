# TODO: Why isn't this with the rest of the OSInterrupt.s code?

.include "macros.inc"

.section .text, "ax"  # 0x800065A0 - 0x8010F860

.global OSDisableInterrupts
OSDisableInterrupts:
/* 800C60BC 000C1FDC  7C 60 00 A6 */	mfmsr r3
/* 800C60C0 000C1FE0  54 64 04 5E */	rlwinm r4, r3, 0, 0x11, 0xf
/* 800C60C4 000C1FE4  7C 80 01 24 */	mtmsr r4
/* 800C60C8 000C1FE8  54 63 8F FE */	rlwinm r3, r3, 0x11, 0x1f, 0x1f
.global lbl_800C60CC
lbl_800C60CC:
/* 800C60CC 000C1FEC  4E 80 00 20 */	blr

.global OSEnableInterrupts
OSEnableInterrupts:
/* 800C60D0 000C1FF0  7C 60 00 A6 */	mfmsr r3
/* 800C60D4 000C1FF4  60 64 80 00 */	ori r4, r3, 0x8000
/* 800C60D8 000C1FF8  7C 80 01 24 */	mtmsr r4
/* 800C60DC 000C1FFC  54 63 8F FE */	rlwinm r3, r3, 0x11, 0x1f, 0x1f
/* 800C60E0 000C2000  4E 80 00 20 */	blr

.global OSRestoreInterrupts
OSRestoreInterrupts:
/* 800C60E4 000C2004  2C 03 00 00 */	cmpwi r3, 0
/* 800C60E8 000C2008  7C 80 00 A6 */	mfmsr r4
/* 800C60EC 000C200C  41 82 00 0C */	beq lbl_800C60F8
/* 800C60F0 000C2010  60 85 80 00 */	ori r5, r4, 0x8000
/* 800C60F4 000C2014  48 00 00 08 */	b lbl_800C60FC
lbl_800C60F8:
/* 800C60F8 000C2018  54 85 04 5E */	rlwinm r5, r4, 0, 0x11, 0xf
lbl_800C60FC:
/* 800C60FC 000C201C  7C A0 01 24 */	mtmsr r5
/* 800C6100 000C2020  54 84 8F FE */	rlwinm r4, r4, 0x11, 0x1f, 0x1f
/* 800C6104 000C2024  4E 80 00 20 */	blr

.global __OSSetInterruptHandler
__OSSetInterruptHandler:
/* 800C6108 000C2028  7C 60 07 34 */	extsh r0, r3
/* 800C610C 000C202C  80 6D A1 30 */	lwz r3, InterruptHandlerTable@sda21(r13)
/* 800C6110 000C2030  54 00 10 3A */	slwi r0, r0, 2
/* 800C6114 000C2034  7C A3 02 14 */	add r5, r3, r0
/* 800C6118 000C2038  80 65 00 00 */	lwz r3, 0(r5)
/* 800C611C 000C203C  90 85 00 00 */	stw r4, 0(r5)
/* 800C6120 000C2040  4E 80 00 20 */	blr

.global __OSGetInterruptHandler
__OSGetInterruptHandler:
/* 800C6124 000C2044  7C 60 07 34 */	extsh r0, r3
/* 800C6128 000C2048  80 6D A1 30 */	lwz r3, InterruptHandlerTable@sda21(r13)
/* 800C612C 000C204C  54 00 10 3A */	slwi r0, r0, 2
/* 800C6130 000C2050  7C 63 00 2E */	lwzx r3, r3, r0
/* 800C6134 000C2054  4E 80 00 20 */	blr

.global __OSInterruptInit
__OSInterruptInit:
/* 800C6138 000C2058  7C 08 02 A6 */	mflr r0
/* 800C613C 000C205C  90 01 00 04 */	stw r0, 4(r1)
/* 800C6140 000C2060  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800C6144 000C2064  93 E1 00 0C */	stw r31, 0xc(r1)
/* 800C6148 000C2068  3F E0 80 00 */	lis r31, 0x80003040@ha
/* 800C614C 000C206C  38 1F 30 40 */	addi r0, r31, 0x80003040@l
/* 800C6150 000C2070  90 0D A1 30 */	stw r0, InterruptHandlerTable@sda21(r13)
/* 800C6154 000C2074  38 80 00 00 */	li r4, 0
/* 800C6158 000C2078  38 A0 00 80 */	li r5, 0x80
/* 800C615C 000C207C  80 6D A1 30 */	lwz r3, InterruptHandlerTable@sda21(r13)
/* 800C6160 000C2080  4B F3 D1 C1 */	bl memset
/* 800C6164 000C2084  38 00 00 00 */	li r0, 0
/* 800C6168 000C2088  90 1F 00 C4 */	stw r0, 0xc4(r31)
/* 800C616C 000C208C  3C 60 CC 00 */	lis r3, 0xCC003000@ha
/* 800C6170 000C2090  38 83 30 00 */	addi r4, r3, 0xCC003000@l
/* 800C6174 000C2094  90 1F 00 C8 */	stw r0, 0xc8(r31)
/* 800C6178 000C2098  38 00 00 F0 */	li r0, 0xf0
/* 800C617C 000C209C  38 60 FF E0 */	li r3, -32
/* 800C6180 000C20A0  90 04 00 04 */	stw r0, 4(r4)
/* 800C6184 000C20A4  48 00 02 D9 */	bl __OSMaskInterrupts
/* 800C6188 000C20A8  3C 60 80 0C */	lis r3, ExternalInterruptHandler@ha
/* 800C618C 000C20AC  38 83 68 90 */	addi r4, r3, ExternalInterruptHandler@l
/* 800C6190 000C20B0  38 60 00 04 */	li r3, 4
/* 800C6194 000C20B4  4B FF BB C5 */	bl __OSSetExceptionHandler
/* 800C6198 000C20B8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800C619C 000C20BC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 800C61A0 000C20C0  38 21 00 10 */	addi r1, r1, 0x10
/* 800C61A4 000C20C4  7C 08 03 A6 */	mtlr r0
/* 800C61A8 000C20C8  4E 80 00 20 */	blr

.global SetInterruptMask
SetInterruptMask:
/* 800C61AC 000C20CC  7C 60 00 34 */	cntlzw r0, r3
/* 800C61B0 000C20D0  28 00 00 1A */	cmplwi r0, 0x1a
/* 800C61B4 000C20D4  41 81 02 A4 */	bgt lbl_800C6458
/* 800C61B8 000C20D8  3C A0 80 1E */	lis r5, lbl_801E7444@ha
/* 800C61BC 000C20DC  38 A5 74 44 */	addi r5, r5, lbl_801E7444@l
/* 800C61C0 000C20E0  54 00 10 3A */	slwi r0, r0, 2
/* 800C61C4 000C20E4  7C 05 00 2E */	lwzx r0, r5, r0
/* 800C61C8 000C20E8  7C 09 03 A6 */	mtctr r0
/* 800C61CC 000C20EC  4E 80 04 20 */	bctr
.global lbl_800C61D0
lbl_800C61D0:
/* 800C61D0 000C20F0  54 80 00 00 */	rlwinm r0, r4, 0, 0, 0
/* 800C61D4 000C20F4  28 00 00 00 */	cmplwi r0, 0
/* 800C61D8 000C20F8  38 A0 00 00 */	li r5, 0
/* 800C61DC 000C20FC  40 82 00 08 */	bne lbl_800C61E4
/* 800C61E0 000C2100  60 A5 00 01 */	ori r5, r5, 1
lbl_800C61E4:
/* 800C61E4 000C2104  54 80 00 42 */	rlwinm r0, r4, 0, 1, 1
/* 800C61E8 000C2108  28 00 00 00 */	cmplwi r0, 0
/* 800C61EC 000C210C  40 82 00 08 */	bne lbl_800C61F4
/* 800C61F0 000C2110  60 A5 00 02 */	ori r5, r5, 2
lbl_800C61F4:
/* 800C61F4 000C2114  54 80 00 84 */	rlwinm r0, r4, 0, 2, 2
/* 800C61F8 000C2118  28 00 00 00 */	cmplwi r0, 0
/* 800C61FC 000C211C  40 82 00 08 */	bne lbl_800C6204
/* 800C6200 000C2120  60 A5 00 04 */	ori r5, r5, 4
lbl_800C6204:
/* 800C6204 000C2124  54 80 00 C6 */	rlwinm r0, r4, 0, 3, 3
/* 800C6208 000C2128  28 00 00 00 */	cmplwi r0, 0
/* 800C620C 000C212C  40 82 00 08 */	bne lbl_800C6214
/* 800C6210 000C2130  60 A5 00 08 */	ori r5, r5, 8
lbl_800C6214:
/* 800C6214 000C2134  54 80 01 08 */	rlwinm r0, r4, 0, 4, 4
/* 800C6218 000C2138  28 00 00 00 */	cmplwi r0, 0
/* 800C621C 000C213C  40 82 00 08 */	bne lbl_800C6224
/* 800C6220 000C2140  60 A5 00 10 */	ori r5, r5, 0x10
lbl_800C6224:
/* 800C6224 000C2144  3C 80 CC 00 */	lis r4, 0xCC004000@ha
/* 800C6228 000C2148  54 A0 04 3E */	clrlwi r0, r5, 0x10
/* 800C622C 000C214C  38 84 40 00 */	addi r4, r4, 0xCC004000@l
/* 800C6230 000C2150  B0 04 00 1C */	sth r0, 0x1c(r4)
/* 800C6234 000C2154  54 63 01 7E */	clrlwi r3, r3, 5
/* 800C6238 000C2158  48 00 02 20 */	b lbl_800C6458
.global lbl_800C623C
lbl_800C623C:
/* 800C623C 000C215C  3C A0 CC 00 */	lis r5, 0xCC005000@ha
/* 800C6240 000C2160  38 A5 50 00 */	addi r5, r5, 0xCC005000@l
/* 800C6244 000C2164  38 A5 00 0A */	addi r5, r5, 0xa
/* 800C6248 000C2168  54 80 01 4A */	rlwinm r0, r4, 0, 5, 5
/* 800C624C 000C216C  A0 C5 00 00 */	lhz r6, 0(r5)
/* 800C6250 000C2170  28 00 00 00 */	cmplwi r0, 0
/* 800C6254 000C2174  54 C6 07 6C */	rlwinm r6, r6, 0, 0x1d, 0x16
/* 800C6258 000C2178  40 82 00 08 */	bne lbl_800C6260
/* 800C625C 000C217C  60 C6 00 10 */	ori r6, r6, 0x10
lbl_800C6260:
/* 800C6260 000C2180  54 80 01 8C */	rlwinm r0, r4, 0, 6, 6
/* 800C6264 000C2184  28 00 00 00 */	cmplwi r0, 0
/* 800C6268 000C2188  40 82 00 08 */	bne lbl_800C6270
/* 800C626C 000C218C  60 C6 00 40 */	ori r6, r6, 0x40
lbl_800C6270:
/* 800C6270 000C2190  54 80 01 CE */	rlwinm r0, r4, 0, 7, 7
/* 800C6274 000C2194  28 00 00 00 */	cmplwi r0, 0
/* 800C6278 000C2198  40 82 00 08 */	bne lbl_800C6280
/* 800C627C 000C219C  60 C6 01 00 */	ori r6, r6, 0x100
lbl_800C6280:
/* 800C6280 000C21A0  54 C0 04 3E */	clrlwi r0, r6, 0x10
/* 800C6284 000C21A4  B0 05 00 00 */	sth r0, 0(r5)
/* 800C6288 000C21A8  54 63 02 08 */	rlwinm r3, r3, 0, 8, 4
/* 800C628C 000C21AC  48 00 01 CC */	b lbl_800C6458
.global lbl_800C6290
lbl_800C6290:
/* 800C6290 000C21B0  54 80 02 10 */	rlwinm r0, r4, 0, 8, 8
/* 800C6294 000C21B4  3C 80 CC 00 */	lis r4, 0xCC006C00@ha
/* 800C6298 000C21B8  28 00 00 00 */	cmplwi r0, 0
/* 800C629C 000C21BC  80 A4 6C 00 */	lwz r5, 0xCC006C00@l(r4)
/* 800C62A0 000C21C0  38 00 FF D3 */	li r0, -45
/* 800C62A4 000C21C4  7C A5 00 38 */	and r5, r5, r0
/* 800C62A8 000C21C8  40 82 00 08 */	bne lbl_800C62B0
/* 800C62AC 000C21CC  60 A5 00 04 */	ori r5, r5, 4
lbl_800C62B0:
/* 800C62B0 000C21D0  3C 80 CC 00 */	lis r4, 0xCC006C00@ha
/* 800C62B4 000C21D4  90 A4 6C 00 */	stw r5, 0xCC006C00@l(r4)
/* 800C62B8 000C21D8  54 63 02 4E */	rlwinm r3, r3, 0, 9, 7
/* 800C62BC 000C21DC  48 00 01 9C */	b lbl_800C6458
.global lbl_800C62C0
lbl_800C62C0:
/* 800C62C0 000C21E0  54 80 02 52 */	rlwinm r0, r4, 0, 9, 9
/* 800C62C4 000C21E4  3C A0 CC 00 */	lis r5, 0xCC006800@ha
/* 800C62C8 000C21E8  28 00 00 00 */	cmplwi r0, 0
/* 800C62CC 000C21EC  80 A5 68 00 */	lwz r5, 0xCC006800@l(r5)
/* 800C62D0 000C21F0  38 00 D3 F0 */	li r0, -11280
/* 800C62D4 000C21F4  7C A5 00 38 */	and r5, r5, r0
/* 800C62D8 000C21F8  40 82 00 08 */	bne lbl_800C62E0
/* 800C62DC 000C21FC  60 A5 00 01 */	ori r5, r5, 1
lbl_800C62E0:
/* 800C62E0 000C2200  54 80 02 94 */	rlwinm r0, r4, 0, 0xa, 0xa
/* 800C62E4 000C2204  28 00 00 00 */	cmplwi r0, 0
/* 800C62E8 000C2208  40 82 00 08 */	bne lbl_800C62F0
/* 800C62EC 000C220C  60 A5 00 04 */	ori r5, r5, 4
lbl_800C62F0:
/* 800C62F0 000C2210  54 80 02 D6 */	rlwinm r0, r4, 0, 0xb, 0xb
/* 800C62F4 000C2214  28 00 00 00 */	cmplwi r0, 0
/* 800C62F8 000C2218  40 82 00 08 */	bne lbl_800C6300
/* 800C62FC 000C221C  60 A5 04 00 */	ori r5, r5, 0x400
lbl_800C6300:
/* 800C6300 000C2220  3C 80 CC 00 */	lis r4, 0xCC006800@ha
/* 800C6304 000C2224  90 A4 68 00 */	stw r5, 0xCC006800@l(r4)
/* 800C6308 000C2228  54 63 03 10 */	rlwinm r3, r3, 0, 0xc, 8
/* 800C630C 000C222C  48 00 01 4C */	b lbl_800C6458
.global lbl_800C6310
lbl_800C6310:
/* 800C6310 000C2230  3C A0 CC 00 */	lis r5, 0xCC006800@ha
/* 800C6314 000C2234  38 C5 68 00 */	addi r6, r5, 0xCC006800@l
/* 800C6318 000C2238  38 C6 00 14 */	addi r6, r6, 0x14
/* 800C631C 000C223C  54 80 03 18 */	rlwinm r0, r4, 0, 0xc, 0xc
/* 800C6320 000C2240  80 E6 00 00 */	lwz r7, 0(r6)
/* 800C6324 000C2244  38 A0 F3 F0 */	li r5, -3088
/* 800C6328 000C2248  28 00 00 00 */	cmplwi r0, 0
/* 800C632C 000C224C  7C E7 28 38 */	and r7, r7, r5
/* 800C6330 000C2250  40 82 00 08 */	bne lbl_800C6338
/* 800C6334 000C2254  60 E7 00 01 */	ori r7, r7, 1
lbl_800C6338:
/* 800C6338 000C2258  54 80 03 5A */	rlwinm r0, r4, 0, 0xd, 0xd
/* 800C633C 000C225C  28 00 00 00 */	cmplwi r0, 0
/* 800C6340 000C2260  40 82 00 08 */	bne lbl_800C6348
/* 800C6344 000C2264  60 E7 00 04 */	ori r7, r7, 4
lbl_800C6348:
/* 800C6348 000C2268  54 80 03 9C */	rlwinm r0, r4, 0, 0xe, 0xe
/* 800C634C 000C226C  28 00 00 00 */	cmplwi r0, 0
/* 800C6350 000C2270  40 82 00 08 */	bne lbl_800C6358
/* 800C6354 000C2274  60 E7 04 00 */	ori r7, r7, 0x400
lbl_800C6358:
/* 800C6358 000C2278  90 E6 00 00 */	stw r7, 0(r6)
/* 800C635C 000C227C  54 63 03 D6 */	rlwinm r3, r3, 0, 0xf, 0xb
/* 800C6360 000C2280  48 00 00 F8 */	b lbl_800C6458
.global lbl_800C6364
lbl_800C6364:
/* 800C6364 000C2284  3C A0 CC 00 */	lis r5, 0xCC006800@ha
/* 800C6368 000C2288  38 A5 68 00 */	addi r5, r5, 0xCC006800@l
/* 800C636C 000C228C  38 A5 00 28 */	addi r5, r5, 0x28
/* 800C6370 000C2290  54 80 03 DE */	rlwinm r0, r4, 0, 0xf, 0xf
/* 800C6374 000C2294  80 C5 00 00 */	lwz r6, 0(r5)
/* 800C6378 000C2298  28 00 00 00 */	cmplwi r0, 0
/* 800C637C 000C229C  54 C6 00 36 */	rlwinm r6, r6, 0, 0, 0x1b
/* 800C6380 000C22A0  40 82 00 08 */	bne lbl_800C6388
/* 800C6384 000C22A4  60 C6 00 01 */	ori r6, r6, 1
lbl_800C6388:
/* 800C6388 000C22A8  54 80 04 20 */	rlwinm r0, r4, 0, 0x10, 0x10
/* 800C638C 000C22AC  28 00 00 00 */	cmplwi r0, 0
/* 800C6390 000C22B0  40 82 00 08 */	bne lbl_800C6398
/* 800C6394 000C22B4  60 C6 00 04 */	ori r6, r6, 4
lbl_800C6398:
/* 800C6398 000C22B8  90 C5 00 00 */	stw r6, 0(r5)
/* 800C639C 000C22BC  54 63 04 5C */	rlwinm r3, r3, 0, 0x11, 0xe
/* 800C63A0 000C22C0  48 00 00 B8 */	b lbl_800C6458
.global lbl_800C63A4
lbl_800C63A4:
/* 800C63A4 000C22C4  54 80 04 62 */	rlwinm r0, r4, 0, 0x11, 0x11
/* 800C63A8 000C22C8  28 00 00 00 */	cmplwi r0, 0
/* 800C63AC 000C22CC  38 A0 00 F0 */	li r5, 0xf0
/* 800C63B0 000C22D0  40 82 00 08 */	bne lbl_800C63B8
/* 800C63B4 000C22D4  60 A5 08 00 */	ori r5, r5, 0x800
lbl_800C63B8:
/* 800C63B8 000C22D8  54 80 05 28 */	rlwinm r0, r4, 0, 0x14, 0x14
/* 800C63BC 000C22DC  28 00 00 00 */	cmplwi r0, 0
/* 800C63C0 000C22E0  40 82 00 08 */	bne lbl_800C63C8
/* 800C63C4 000C22E4  60 A5 00 08 */	ori r5, r5, 8
lbl_800C63C8:
/* 800C63C8 000C22E8  54 80 05 6A */	rlwinm r0, r4, 0, 0x15, 0x15
/* 800C63CC 000C22EC  28 00 00 00 */	cmplwi r0, 0
/* 800C63D0 000C22F0  40 82 00 08 */	bne lbl_800C63D8
/* 800C63D4 000C22F4  60 A5 00 04 */	ori r5, r5, 4
lbl_800C63D8:
/* 800C63D8 000C22F8  54 80 05 AC */	rlwinm r0, r4, 0, 0x16, 0x16
/* 800C63DC 000C22FC  28 00 00 00 */	cmplwi r0, 0
/* 800C63E0 000C2300  40 82 00 08 */	bne lbl_800C63E8
/* 800C63E4 000C2304  60 A5 00 02 */	ori r5, r5, 2
lbl_800C63E8:
/* 800C63E8 000C2308  54 80 05 EE */	rlwinm r0, r4, 0, 0x17, 0x17
/* 800C63EC 000C230C  28 00 00 00 */	cmplwi r0, 0
/* 800C63F0 000C2310  40 82 00 08 */	bne lbl_800C63F8
/* 800C63F4 000C2314  60 A5 00 01 */	ori r5, r5, 1
lbl_800C63F8:
/* 800C63F8 000C2318  54 80 06 30 */	rlwinm r0, r4, 0, 0x18, 0x18
/* 800C63FC 000C231C  28 00 00 00 */	cmplwi r0, 0
/* 800C6400 000C2320  40 82 00 08 */	bne lbl_800C6408
/* 800C6404 000C2324  60 A5 01 00 */	ori r5, r5, 0x100
lbl_800C6408:
/* 800C6408 000C2328  54 80 06 72 */	rlwinm r0, r4, 0, 0x19, 0x19
/* 800C640C 000C232C  28 00 00 00 */	cmplwi r0, 0
/* 800C6410 000C2330  40 82 00 08 */	bne lbl_800C6418
/* 800C6414 000C2334  60 A5 10 00 */	ori r5, r5, 0x1000
lbl_800C6418:
/* 800C6418 000C2338  54 80 04 A4 */	rlwinm r0, r4, 0, 0x12, 0x12
/* 800C641C 000C233C  28 00 00 00 */	cmplwi r0, 0
/* 800C6420 000C2340  40 82 00 08 */	bne lbl_800C6428
/* 800C6424 000C2344  60 A5 02 00 */	ori r5, r5, 0x200
lbl_800C6428:
/* 800C6428 000C2348  54 80 04 E6 */	rlwinm r0, r4, 0, 0x13, 0x13
/* 800C642C 000C234C  28 00 00 00 */	cmplwi r0, 0
/* 800C6430 000C2350  40 82 00 08 */	bne lbl_800C6438
/* 800C6434 000C2354  60 A5 04 00 */	ori r5, r5, 0x400
lbl_800C6438:
/* 800C6438 000C2358  54 80 06 B4 */	rlwinm r0, r4, 0, 0x1a, 0x1a
/* 800C643C 000C235C  28 00 00 00 */	cmplwi r0, 0
/* 800C6440 000C2360  40 82 00 08 */	bne lbl_800C6448
/* 800C6444 000C2364  60 A5 20 00 */	ori r5, r5, 0x2000
lbl_800C6448:
/* 800C6448 000C2368  3C 80 CC 00 */	lis r4, 0xCC003000@ha
/* 800C644C 000C236C  38 84 30 00 */	addi r4, r4, 0xCC003000@l
/* 800C6450 000C2370  90 A4 00 04 */	stw r5, 4(r4)
/* 800C6454 000C2374  54 63 06 E0 */	rlwinm r3, r3, 0, 0x1b, 0x10
lbl_800C6458:
.global lbl_800C6458
/* 800C6458 000C2378  4E 80 00 20 */	blr

.global __OSMaskInterrupts
__OSMaskInterrupts:
/* 800C645C 000C237C  7C 08 02 A6 */	mflr r0
/* 800C6460 000C2380  90 01 00 04 */	stw r0, 4(r1)
/* 800C6464 000C2384  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800C6468 000C2388  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800C646C 000C238C  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800C6470 000C2390  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800C6474 000C2394  7C 7F 1B 78 */	mr r31, r3
/* 800C6478 000C2398  4B FF FC 45 */	bl OSDisableInterrupts
/* 800C647C 000C239C  3C 80 80 00 */	lis r4, 0x800000C4@ha
/* 800C6480 000C23A0  83 A4 00 C4 */	lwz r29, 0x800000C4@l(r4)
/* 800C6484 000C23A4  7C 7E 1B 78 */	mr r30, r3
/* 800C6488 000C23A8  80 A4 00 C8 */	lwz r5, 0xc8(r4)
/* 800C648C 000C23AC  7F A0 2B 78 */	or r0, r29, r5
/* 800C6490 000C23B0  7F E3 00 78 */	andc r3, r31, r0
/* 800C6494 000C23B4  7F FF EB 78 */	or r31, r31, r29
/* 800C6498 000C23B8  93 E4 00 C4 */	stw r31, 0xc4(r4)
/* 800C649C 000C23BC  7F FF 2B 78 */	or r31, r31, r5
/* 800C64A0 000C23C0  48 00 00 04 */	b lbl_800C64A4
lbl_800C64A4:
/* 800C64A4 000C23C4  48 00 00 04 */	b lbl_800C64A8
lbl_800C64A8:
/* 800C64A8 000C23C8  48 00 00 0C */	b lbl_800C64B4
lbl_800C64AC:
/* 800C64AC 000C23CC  7F E4 FB 78 */	mr r4, r31
/* 800C64B0 000C23D0  4B FF FC FD */	bl SetInterruptMask
lbl_800C64B4:
/* 800C64B4 000C23D4  28 03 00 00 */	cmplwi r3, 0
/* 800C64B8 000C23D8  40 82 FF F4 */	bne lbl_800C64AC
/* 800C64BC 000C23DC  7F C3 F3 78 */	mr r3, r30
/* 800C64C0 000C23E0  4B FF FC 25 */	bl OSRestoreInterrupts
/* 800C64C4 000C23E4  7F A3 EB 78 */	mr r3, r29
/* 800C64C8 000C23E8  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800C64CC 000C23EC  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800C64D0 000C23F0  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800C64D4 000C23F4  7C 08 03 A6 */	mtlr r0
/* 800C64D8 000C23F8  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800C64DC 000C23FC  38 21 00 20 */	addi r1, r1, 0x20
/* 800C64E0 000C2400  4E 80 00 20 */	blr

.global __OSUnmaskInterrupts
__OSUnmaskInterrupts:
/* 800C64E4 000C2404  7C 08 02 A6 */	mflr r0
/* 800C64E8 000C2408  90 01 00 04 */	stw r0, 4(r1)
/* 800C64EC 000C240C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800C64F0 000C2410  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800C64F4 000C2414  93 C1 00 18 */	stw r30, 0x18(r1)
/* 800C64F8 000C2418  93 A1 00 14 */	stw r29, 0x14(r1)
/* 800C64FC 000C241C  7C 7F 1B 78 */	mr r31, r3
/* 800C6500 000C2420  4B FF FB BD */	bl OSDisableInterrupts
/* 800C6504 000C2424  3C 80 80 00 */	lis r4, 0x800000C4@ha
/* 800C6508 000C2428  83 A4 00 C4 */	lwz r29, 0x800000C4@l(r4)
/* 800C650C 000C242C  7C 7E 1B 78 */	mr r30, r3
/* 800C6510 000C2430  80 A4 00 C8 */	lwz r5, 0xc8(r4)
/* 800C6514 000C2434  7F A0 2B 78 */	or r0, r29, r5
/* 800C6518 000C2438  7F E3 00 38 */	and r3, r31, r0
/* 800C651C 000C243C  7F BF F8 78 */	andc r31, r29, r31
/* 800C6520 000C2440  93 E4 00 C4 */	stw r31, 0xc4(r4)
/* 800C6524 000C2444  7F FF 2B 78 */	or r31, r31, r5
/* 800C6528 000C2448  48 00 00 04 */	b lbl_800C652C
lbl_800C652C:
/* 800C652C 000C244C  48 00 00 04 */	b lbl_800C6530
lbl_800C6530:
/* 800C6530 000C2450  48 00 00 0C */	b lbl_800C653C
lbl_800C6534:
/* 800C6534 000C2454  7F E4 FB 78 */	mr r4, r31
/* 800C6538 000C2458  4B FF FC 75 */	bl SetInterruptMask
lbl_800C653C:
/* 800C653C 000C245C  28 03 00 00 */	cmplwi r3, 0
/* 800C6540 000C2460  40 82 FF F4 */	bne lbl_800C6534
/* 800C6544 000C2464  7F C3 F3 78 */	mr r3, r30
/* 800C6548 000C2468  4B FF FB 9D */	bl OSRestoreInterrupts
/* 800C654C 000C246C  7F A3 EB 78 */	mr r3, r29
/* 800C6550 000C2470  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800C6554 000C2474  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800C6558 000C2478  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 800C655C 000C247C  7C 08 03 A6 */	mtlr r0
/* 800C6560 000C2480  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 800C6564 000C2484  38 21 00 20 */	addi r1, r1, 0x20
/* 800C6568 000C2488  4E 80 00 20 */	blr

.global __OSDispatchInterrupt
__OSDispatchInterrupt:
/* 800C656C 000C248C  7C 08 02 A6 */	mflr r0
/* 800C6570 000C2490  90 01 00 04 */	stw r0, 4(r1)
/* 800C6574 000C2494  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 800C6578 000C2498  93 E1 00 24 */	stw r31, 0x24(r1)
/* 800C657C 000C249C  93 C1 00 20 */	stw r30, 0x20(r1)
/* 800C6580 000C24A0  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 800C6584 000C24A4  7C 9E 23 78 */	mr r30, r4
/* 800C6588 000C24A8  3C 60 CC 00 */	lis r3, 0xCC003000@ha
/* 800C658C 000C24AC  83 E3 30 00 */	lwz r31, 0xCC003000@l(r3)
/* 800C6590 000C24B0  57 FF 04 1C */	rlwinm r31, r31, 0, 0x10, 0xe
/* 800C6594 000C24B4  28 1F 00 00 */	cmplwi r31, 0
/* 800C6598 000C24B8  41 82 00 18 */	beq lbl_800C65B0
/* 800C659C 000C24BC  38 63 30 00 */	addi r3, r3, 0x3000
/* 800C65A0 000C24C0  80 03 00 04 */	lwz r0, 4(r3)
/* 800C65A4 000C24C4  7F E0 00 38 */	and r0, r31, r0
/* 800C65A8 000C24C8  28 00 00 00 */	cmplwi r0, 0
/* 800C65AC 000C24CC  40 82 00 0C */	bne lbl_800C65B8
lbl_800C65B0:
/* 800C65B0 000C24D0  7F C3 F3 78 */	mr r3, r30
/* 800C65B4 000C24D4  4B FF D1 F5 */	bl OSLoadContext
lbl_800C65B8:
/* 800C65B8 000C24D8  57 E0 06 30 */	rlwinm r0, r31, 0, 0x18, 0x18
/* 800C65BC 000C24DC  28 00 00 00 */	cmplwi r0, 0
/* 800C65C0 000C24E0  38 00 00 00 */	li r0, 0
/* 800C65C4 000C24E4  41 82 00 60 */	beq lbl_800C6624
/* 800C65C8 000C24E8  3C 60 CC 00 */	lis r3, 0xCC004000@ha
/* 800C65CC 000C24EC  38 63 40 00 */	addi r3, r3, 0xCC004000@l
/* 800C65D0 000C24F0  A0 83 00 1E */	lhz r4, 0x1e(r3)
/* 800C65D4 000C24F4  54 83 07 FE */	clrlwi r3, r4, 0x1f
/* 800C65D8 000C24F8  28 03 00 00 */	cmplwi r3, 0
/* 800C65DC 000C24FC  41 82 00 08 */	beq lbl_800C65E4
/* 800C65E0 000C2500  64 00 80 00 */	oris r0, r0, 0x8000
lbl_800C65E4:
/* 800C65E4 000C2504  54 83 07 BC */	rlwinm r3, r4, 0, 0x1e, 0x1e
/* 800C65E8 000C2508  28 03 00 00 */	cmplwi r3, 0
/* 800C65EC 000C250C  41 82 00 08 */	beq lbl_800C65F4
/* 800C65F0 000C2510  64 00 40 00 */	oris r0, r0, 0x4000
lbl_800C65F4:
/* 800C65F4 000C2514  54 83 07 7A */	rlwinm r3, r4, 0, 0x1d, 0x1d
/* 800C65F8 000C2518  28 03 00 00 */	cmplwi r3, 0
/* 800C65FC 000C251C  41 82 00 08 */	beq lbl_800C6604
/* 800C6600 000C2520  64 00 20 00 */	oris r0, r0, 0x2000
lbl_800C6604:
/* 800C6604 000C2524  54 83 07 38 */	rlwinm r3, r4, 0, 0x1c, 0x1c
/* 800C6608 000C2528  28 03 00 00 */	cmplwi r3, 0
/* 800C660C 000C252C  41 82 00 08 */	beq lbl_800C6614
/* 800C6610 000C2530  64 00 10 00 */	oris r0, r0, 0x1000
lbl_800C6614:
/* 800C6614 000C2534  54 83 06 F6 */	rlwinm r3, r4, 0, 0x1b, 0x1b
/* 800C6618 000C2538  28 03 00 00 */	cmplwi r3, 0
/* 800C661C 000C253C  41 82 00 08 */	beq lbl_800C6624
/* 800C6620 000C2540  64 00 08 00 */	oris r0, r0, 0x800
lbl_800C6624:
/* 800C6624 000C2544  57 E3 06 72 */	rlwinm r3, r31, 0, 0x19, 0x19
/* 800C6628 000C2548  28 03 00 00 */	cmplwi r3, 0
/* 800C662C 000C254C  41 82 00 40 */	beq lbl_800C666C
/* 800C6630 000C2550  3C 60 CC 00 */	lis r3, 0xCC005000@ha
/* 800C6634 000C2554  38 63 50 00 */	addi r3, r3, 0xCC005000@l
/* 800C6638 000C2558  A0 83 00 0A */	lhz r4, 0xa(r3)
/* 800C663C 000C255C  54 83 07 38 */	rlwinm r3, r4, 0, 0x1c, 0x1c
/* 800C6640 000C2560  28 03 00 00 */	cmplwi r3, 0
/* 800C6644 000C2564  41 82 00 08 */	beq lbl_800C664C
/* 800C6648 000C2568  64 00 04 00 */	oris r0, r0, 0x400
lbl_800C664C:
/* 800C664C 000C256C  54 83 06 B4 */	rlwinm r3, r4, 0, 0x1a, 0x1a
/* 800C6650 000C2570  28 03 00 00 */	cmplwi r3, 0
/* 800C6654 000C2574  41 82 00 08 */	beq lbl_800C665C
/* 800C6658 000C2578  64 00 02 00 */	oris r0, r0, 0x200
lbl_800C665C:
/* 800C665C 000C257C  54 83 06 30 */	rlwinm r3, r4, 0, 0x18, 0x18
/* 800C6660 000C2580  28 03 00 00 */	cmplwi r3, 0
/* 800C6664 000C2584  41 82 00 08 */	beq lbl_800C666C
/* 800C6668 000C2588  64 00 01 00 */	oris r0, r0, 0x100
lbl_800C666C:
/* 800C666C 000C258C  57 E3 06 B4 */	rlwinm r3, r31, 0, 0x1a, 0x1a
/* 800C6670 000C2590  28 03 00 00 */	cmplwi r3, 0
/* 800C6674 000C2594  41 82 00 1C */	beq lbl_800C6690
/* 800C6678 000C2598  3C 60 CC 00 */	lis r3, 0xCC006C00@ha
/* 800C667C 000C259C  80 63 6C 00 */	lwz r3, 0xCC006C00@l(r3)
/* 800C6680 000C25A0  54 63 07 38 */	rlwinm r3, r3, 0, 0x1c, 0x1c
/* 800C6684 000C25A4  28 03 00 00 */	cmplwi r3, 0
/* 800C6688 000C25A8  41 82 00 08 */	beq lbl_800C6690
/* 800C668C 000C25AC  64 00 00 80 */	oris r0, r0, 0x80
lbl_800C6690:
/* 800C6690 000C25B0  57 E3 06 F6 */	rlwinm r3, r31, 0, 0x1b, 0x1b
/* 800C6694 000C25B4  28 03 00 00 */	cmplwi r3, 0
/* 800C6698 000C25B8  41 82 00 A4 */	beq lbl_800C673C
/* 800C669C 000C25BC  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800C66A0 000C25C0  80 83 68 00 */	lwz r4, 0xCC006800@l(r3)
/* 800C66A4 000C25C4  54 83 07 BC */	rlwinm r3, r4, 0, 0x1e, 0x1e
/* 800C66A8 000C25C8  28 03 00 00 */	cmplwi r3, 0
/* 800C66AC 000C25CC  41 82 00 08 */	beq lbl_800C66B4
/* 800C66B0 000C25D0  64 00 00 40 */	oris r0, r0, 0x40
lbl_800C66B4:
/* 800C66B4 000C25D4  54 83 07 38 */	rlwinm r3, r4, 0, 0x1c, 0x1c
/* 800C66B8 000C25D8  28 03 00 00 */	cmplwi r3, 0
/* 800C66BC 000C25DC  41 82 00 08 */	beq lbl_800C66C4
/* 800C66C0 000C25E0  64 00 00 20 */	oris r0, r0, 0x20
lbl_800C66C4:
/* 800C66C4 000C25E4  54 83 05 28 */	rlwinm r3, r4, 0, 0x14, 0x14
/* 800C66C8 000C25E8  28 03 00 00 */	cmplwi r3, 0
/* 800C66CC 000C25EC  41 82 00 08 */	beq lbl_800C66D4
/* 800C66D0 000C25F0  64 00 00 10 */	oris r0, r0, 0x10
lbl_800C66D4:
/* 800C66D4 000C25F4  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800C66D8 000C25F8  38 63 68 00 */	addi r3, r3, 0xCC006800@l
/* 800C66DC 000C25FC  80 83 00 14 */	lwz r4, 0x14(r3)
/* 800C66E0 000C2600  54 83 07 BC */	rlwinm r3, r4, 0, 0x1e, 0x1e
/* 800C66E4 000C2604  28 03 00 00 */	cmplwi r3, 0
/* 800C66E8 000C2608  41 82 00 08 */	beq lbl_800C66F0
/* 800C66EC 000C260C  64 00 00 08 */	oris r0, r0, 8
lbl_800C66F0:
/* 800C66F0 000C2610  54 83 07 38 */	rlwinm r3, r4, 0, 0x1c, 0x1c
/* 800C66F4 000C2614  28 03 00 00 */	cmplwi r3, 0
/* 800C66F8 000C2618  41 82 00 08 */	beq lbl_800C6700
/* 800C66FC 000C261C  64 00 00 04 */	oris r0, r0, 4
lbl_800C6700:
/* 800C6700 000C2620  54 83 05 28 */	rlwinm r3, r4, 0, 0x14, 0x14
/* 800C6704 000C2624  28 03 00 00 */	cmplwi r3, 0
/* 800C6708 000C2628  41 82 00 08 */	beq lbl_800C6710
/* 800C670C 000C262C  64 00 00 02 */	oris r0, r0, 2
lbl_800C6710:
/* 800C6710 000C2630  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 800C6714 000C2634  38 63 68 00 */	addi r3, r3, 0xCC006800@l
/* 800C6718 000C2638  80 83 00 28 */	lwz r4, 0x28(r3)
/* 800C671C 000C263C  54 83 07 BC */	rlwinm r3, r4, 0, 0x1e, 0x1e
/* 800C6720 000C2640  28 03 00 00 */	cmplwi r3, 0
/* 800C6724 000C2644  41 82 00 08 */	beq lbl_800C672C
/* 800C6728 000C2648  64 00 00 01 */	oris r0, r0, 1
lbl_800C672C:
/* 800C672C 000C264C  54 83 07 38 */	rlwinm r3, r4, 0, 0x1c, 0x1c
/* 800C6730 000C2650  28 03 00 00 */	cmplwi r3, 0
/* 800C6734 000C2654  41 82 00 08 */	beq lbl_800C673C
/* 800C6738 000C2658  60 00 80 00 */	ori r0, r0, 0x8000
lbl_800C673C:
/* 800C673C 000C265C  57 E3 04 A4 */	rlwinm r3, r31, 0, 0x12, 0x12
/* 800C6740 000C2660  28 03 00 00 */	cmplwi r3, 0
/* 800C6744 000C2664  41 82 00 08 */	beq lbl_800C674C
/* 800C6748 000C2668  60 00 00 20 */	ori r0, r0, 0x20
lbl_800C674C:
/* 800C674C 000C266C  57 E3 04 E6 */	rlwinm r3, r31, 0, 0x13, 0x13
/* 800C6750 000C2670  28 03 00 00 */	cmplwi r3, 0
/* 800C6754 000C2674  41 82 00 08 */	beq lbl_800C675C
/* 800C6758 000C2678  60 00 00 40 */	ori r0, r0, 0x40
lbl_800C675C:
/* 800C675C 000C267C  57 E3 05 6A */	rlwinm r3, r31, 0, 0x15, 0x15
/* 800C6760 000C2680  28 03 00 00 */	cmplwi r3, 0
/* 800C6764 000C2684  41 82 00 08 */	beq lbl_800C676C
/* 800C6768 000C2688  60 00 10 00 */	ori r0, r0, 0x1000
lbl_800C676C:
/* 800C676C 000C268C  57 E3 05 AC */	rlwinm r3, r31, 0, 0x16, 0x16
/* 800C6770 000C2690  28 03 00 00 */	cmplwi r3, 0
/* 800C6774 000C2694  41 82 00 08 */	beq lbl_800C677C
/* 800C6778 000C2698  60 00 20 00 */	ori r0, r0, 0x2000
lbl_800C677C:
/* 800C677C 000C269C  57 E3 05 EE */	rlwinm r3, r31, 0, 0x17, 0x17
/* 800C6780 000C26A0  28 03 00 00 */	cmplwi r3, 0
/* 800C6784 000C26A4  41 82 00 08 */	beq lbl_800C678C
/* 800C6788 000C26A8  60 00 00 80 */	ori r0, r0, 0x80
lbl_800C678C:
/* 800C678C 000C26AC  57 E3 07 38 */	rlwinm r3, r31, 0, 0x1c, 0x1c
/* 800C6790 000C26B0  28 03 00 00 */	cmplwi r3, 0
/* 800C6794 000C26B4  41 82 00 08 */	beq lbl_800C679C
/* 800C6798 000C26B8  60 00 08 00 */	ori r0, r0, 0x800
lbl_800C679C:
/* 800C679C 000C26BC  57 E3 07 7A */	rlwinm r3, r31, 0, 0x1d, 0x1d
/* 800C67A0 000C26C0  28 03 00 00 */	cmplwi r3, 0
/* 800C67A4 000C26C4  41 82 00 08 */	beq lbl_800C67AC
/* 800C67A8 000C26C8  60 00 04 00 */	ori r0, r0, 0x400
lbl_800C67AC:
/* 800C67AC 000C26CC  57 E3 07 BC */	rlwinm r3, r31, 0, 0x1e, 0x1e
/* 800C67B0 000C26D0  28 03 00 00 */	cmplwi r3, 0
/* 800C67B4 000C26D4  41 82 00 08 */	beq lbl_800C67BC
/* 800C67B8 000C26D8  60 00 02 00 */	ori r0, r0, 0x200
lbl_800C67BC:
/* 800C67BC 000C26DC  57 E3 05 28 */	rlwinm r3, r31, 0, 0x14, 0x14
/* 800C67C0 000C26E0  28 03 00 00 */	cmplwi r3, 0
/* 800C67C4 000C26E4  41 82 00 08 */	beq lbl_800C67CC
/* 800C67C8 000C26E8  60 00 40 00 */	ori r0, r0, 0x4000
lbl_800C67CC:
/* 800C67CC 000C26EC  57 E3 07 FE */	clrlwi r3, r31, 0x1f
/* 800C67D0 000C26F0  28 03 00 00 */	cmplwi r3, 0
/* 800C67D4 000C26F4  41 82 00 08 */	beq lbl_800C67DC
/* 800C67D8 000C26F8  60 00 01 00 */	ori r0, r0, 0x100
lbl_800C67DC:
/* 800C67DC 000C26FC  3C 60 80 00 */	lis r3, 0x800000C4@ha
/* 800C67E0 000C2700  80 83 00 C4 */	lwz r4, 0x800000C4@l(r3)
/* 800C67E4 000C2704  80 63 00 C8 */	lwz r3, 0xc8(r3)
/* 800C67E8 000C2708  7C 83 1B 78 */	or r3, r4, r3
/* 800C67EC 000C270C  7C 04 18 78 */	andc r4, r0, r3
/* 800C67F0 000C2710  28 04 00 00 */	cmplwi r4, 0
/* 800C67F4 000C2714  41 82 00 78 */	beq lbl_800C686C
/* 800C67F8 000C2718  3C 60 80 1E */	lis r3, lbl_801E7418@ha
/* 800C67FC 000C271C  38 03 74 18 */	addi r0, r3, lbl_801E7418@l
/* 800C6800 000C2720  7C 03 03 78 */	mr r3, r0
/* 800C6804 000C2724  48 00 00 04 */	b lbl_800C6808
lbl_800C6808:
/* 800C6808 000C2728  48 00 00 04 */	b lbl_800C680C
lbl_800C680C:
/* 800C680C 000C272C  80 03 00 00 */	lwz r0, 0(r3)
/* 800C6810 000C2730  7C 80 00 38 */	and r0, r4, r0
/* 800C6814 000C2734  28 00 00 00 */	cmplwi r0, 0
/* 800C6818 000C2738  41 82 00 10 */	beq lbl_800C6828
/* 800C681C 000C273C  7C 00 00 34 */	cntlzw r0, r0
/* 800C6820 000C2740  7C 1D 07 34 */	extsh r29, r0
/* 800C6824 000C2744  48 00 00 0C */	b lbl_800C6830
lbl_800C6828:
/* 800C6828 000C2748  38 63 00 04 */	addi r3, r3, 4
/* 800C682C 000C274C  4B FF FF E0 */	b lbl_800C680C
lbl_800C6830:
/* 800C6830 000C2750  80 6D A1 30 */	lwz r3, InterruptHandlerTable@sda21(r13)
/* 800C6834 000C2754  57 A0 10 3A */	slwi r0, r29, 2
/* 800C6838 000C2758  7F E3 00 2E */	lwzx r31, r3, r0
/* 800C683C 000C275C  28 1F 00 00 */	cmplwi r31, 0
/* 800C6840 000C2760  41 82 00 2C */	beq lbl_800C686C
/* 800C6844 000C2764  48 00 24 81 */	bl OSDisableScheduler
/* 800C6848 000C2768  7F A3 EB 78 */	mr r3, r29
/* 800C684C 000C276C  7F C4 F3 78 */	mr r4, r30
/* 800C6850 000C2770  7F EC FB 78 */	mr r12, r31
/* 800C6854 000C2774  7D 88 03 A6 */	mtlr r12
/* 800C6858 000C2778  4E 80 00 21 */	blrl
/* 800C685C 000C277C  48 00 24 A9 */	bl OSEnableScheduler
/* 800C6860 000C2780  48 00 29 49 */	bl __OSReschedule
/* 800C6864 000C2784  7F C3 F3 78 */	mr r3, r30
/* 800C6868 000C2788  4B FF CF 41 */	bl OSLoadContext
lbl_800C686C:
/* 800C686C 000C278C  7F C3 F3 78 */	mr r3, r30
/* 800C6870 000C2790  4B FF CF 39 */	bl OSLoadContext
/* 800C6874 000C2794  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 800C6878 000C2798  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 800C687C 000C279C  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 800C6880 000C27A0  7C 08 03 A6 */	mtlr r0
/* 800C6884 000C27A4  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 800C6888 000C27A8  38 21 00 28 */	addi r1, r1, 0x28
/* 800C688C 000C27AC  4E 80 00 20 */	blr

.global ExternalInterruptHandler
ExternalInterruptHandler:
/* 800C6890 000C27B0  90 04 00 00 */	stw r0, 0(r4)
/* 800C6894 000C27B4  90 24 00 04 */	stw r1, 4(r4)
/* 800C6898 000C27B8  90 44 00 08 */	stw r2, 8(r4)
/* 800C689C 000C27BC  BC C4 00 18 */	stmw r6, 0x18(r4)
/* 800C68A0 000C27C0  7C 11 E2 A6 */	mfspr r0, 0x391
/* 800C68A4 000C27C4  90 04 01 A8 */	stw r0, 0x1a8(r4)
/* 800C68A8 000C27C8  7C 12 E2 A6 */	mfspr r0, 0x392
/* 800C68AC 000C27CC  90 04 01 AC */	stw r0, 0x1ac(r4)
/* 800C68B0 000C27D0  7C 13 E2 A6 */	mfspr r0, 0x393
/* 800C68B4 000C27D4  90 04 01 B0 */	stw r0, 0x1b0(r4)
/* 800C68B8 000C27D8  7C 14 E2 A6 */	mfspr r0, 0x394
/* 800C68BC 000C27DC  90 04 01 B4 */	stw r0, 0x1b4(r4)
/* 800C68C0 000C27E0  7C 15 E2 A6 */	mfspr r0, 0x395
/* 800C68C4 000C27E4  90 04 01 B8 */	stw r0, 0x1b8(r4)
/* 800C68C8 000C27E8  7C 16 E2 A6 */	mfspr r0, 0x396
/* 800C68CC 000C27EC  90 04 01 BC */	stw r0, 0x1bc(r4)
/* 800C68D0 000C27F0  7C 17 E2 A6 */	mfspr r0, 0x397
/* 800C68D4 000C27F4  90 04 01 C0 */	stw r0, 0x1c0(r4)
/* 800C68D8 000C27F8  4B FF FC 94 */	b __OSDispatchInterrupt

.section .data

.global lbl_801E7418
lbl_801E7418:
	# ROM: 0x1E4418
	.4byte 0x00000100
	.4byte 0x00000040
	.4byte 0xF8000000
	.4byte 0x00000200
	.4byte 0x00000080
	.4byte 0x00003000
	.4byte 0x00000020
	.4byte 0x03FF8C00
	.4byte 0x04000000
	.4byte 0x00004000
	.4byte 0xFFFFFFFF

.global lbl_801E7444
lbl_801E7444:
	# ROM: 0x1E4444
	.4byte lbl_800C61D0  ;# ptr
	.4byte lbl_800C61D0  ;# ptr
	.4byte lbl_800C61D0  ;# ptr
	.4byte lbl_800C61D0  ;# ptr
	.4byte lbl_800C6458  ;# ptr
	.4byte lbl_800C623C  ;# ptr
	.4byte lbl_800C623C  ;# ptr
	.4byte lbl_800C623C  ;# ptr
	.4byte lbl_800C6290  ;# ptr
	.4byte lbl_800C62C0  ;# ptr
	.4byte lbl_800C62C0  ;# ptr
	.4byte lbl_800C62C0  ;# ptr
	.4byte lbl_800C6310  ;# ptr
	.4byte lbl_800C6310  ;# ptr
	.4byte lbl_800C6310  ;# ptr
	.4byte lbl_800C6364  ;# ptr
	.4byte lbl_800C6364  ;# ptr
	.4byte lbl_800C63A4  ;# ptr
	.4byte lbl_800C63A4  ;# ptr
	.4byte lbl_800C63A4  ;# ptr
	.4byte lbl_800C63A4  ;# ptr
	.4byte lbl_800C63A4  ;# ptr
	.4byte lbl_800C63A4  ;# ptr
	.4byte lbl_800C63A4  ;# ptr
	.4byte lbl_800C63A4  ;# ptr
	.4byte lbl_800C63A4  ;# ptr
	.4byte lbl_800C63A4  ;# ptr

.section .sbss

.global InterruptHandlerTable
InterruptHandlerTable:
	.skip 0x8
