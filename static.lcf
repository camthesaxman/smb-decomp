/* Linker configuration for building a static (.dol) module */

MEMORY
{
    text : origin = 0x80003100
}

SECTIONS
{
    GROUP :
    {
                                      /* RAM addr    DOL file pos  Size */
        .init       ALIGN(0x20) : {}  /* 0x80003100  0x000100      0x0023A8 */
        _extab      ALIGN(0x20) : {}  /* 0x800054C0  0x10B780      0x0006A8 */
        _extabindex ALIGN(0x20) : {}  /* 0x80005B80  0x10BE40      0x000A1C */
        .text       ALIGN(0x20) : {}  /* 0x800065A0  0x0024C0      0x1092BC */
        .ctors      ALIGN(0x20) : {}  /* 0x8010F860  0x10C860      0x00000C */
        .dtors      ALIGN(0x20) : {}  /* 0x8010F880  0x10C880      0x000010 */
        .rodata     ALIGN(0x20) : {}  /* 0x8010F8A0  0x10C8A0      0x062ADC */
        .data       ALIGN(0x20) : {}  /* 0x80172380  0x16F380      0x07B591 */
        .bss        ALIGN(0x20) : {}  /* 0x801ED920  n/a           0x1028C0 */
        .sdata      ALIGN(0x20) : {}  /* 0x802F01E0  0x1EA920      0x0018F9 */
        .sbss       ALIGN(0x20) : {}  /* 0x802F1AE0  n/a           0x000D15 */
        .sdata2     ALIGN(0x20) : {}  /* 0x802F2800  0x1EC220      0x004480 */
        .sbss2      ALIGN(0x20) : {}  /* unused */
        .stack      ALIGN(0x100) : {}
    } > text

    /* stack immediately follows last section */
    _stack_end = _f_sbss2 + SIZEOF(.sbss2);
    _stack_addr = (_stack_end + 0x10000 + 0x7) & ~0x7;

    /* debug immediately follows normal stack */
    _db_stack_end = _stack_addr;
    _db_stack_addr = _db_stack_end + 0x2000;
    
    /* arena follows debug stack */
    __ArenaLo = (_db_stack_addr + 0x1F) & ~ 0x1F;
    __ArenaHi = 0x81700000;
}

FORCEACTIVE
{
    lbl_802C4960
    lbl_802F1FEC
    lbl_802B4B20
}

lbl_80292C00_alias = lbl_80292C00;
lbl_801C17D0 = 0x801C17D0;

lbl_802F4BDC = 0x802F4BDC;
lbl_802F4BE0 = 0x802F4BE0;
lbl_802F4BE4 = 0x802F4BE4;
lbl_802F4BF0 = 0x802F4BF0;
lbl_802F4C00 = 0x802F4C00;
lbl_802F4C10 = 0x802F4C10;
lbl_802F4C14 = 0x802F4C14;
lbl_802F4C18 = 0x802F4C18;
lbl_802F4C20 = 0x802F4C20;
lbl_802F4C28 = 0x802F4C28;
lbl_802F4C2C = 0x802F4C2C;
lbl_802F4C34 = 0x802F4C34;
lbl_802F4C3C = 0x802F4C3C;
lbl_802F4C48 = 0x802F4C48;
lbl_802F4C50 = 0x802F4C50;
lbl_802F4C58 = 0x802F4C58;
lbl_802F4C5C = 0x802F4C5C;
lbl_802F4C60 = 0x802F4C60;
lbl_802F4C64 = 0x802F4C64;
lbl_802F4C68 = 0x802F4C68;
lbl_802F4C70 = 0x802F4C70;
lbl_802F4C74 = 0x802F4C74;
lbl_802F4C78 = 0x802F4C78;
lbl_802F4C80 = 0x802F4C80;
lbl_802F4C88 = 0x802F4C88;
lbl_802F4C90 = 0x802F4C90;
lbl_802F4C98 = 0x802F4C98;
lbl_802F4C9C = 0x802F4C9C;
lbl_802F4CA0 = 0x802F4CA0;
lbl_802F4CD8 = 0x802F4CD8;
lbl_802F4CE8 = 0x802F4CE8;
lbl_802F4CF8 = 0x802F4CF8;
lbl_802F4D00 = 0x802F4D00;
lbl_802F4D08 = 0x802F4D08;
lbl_802F4D10 = 0x802F4D10;
lbl_802F4D18 = 0x802F4D18;
lbl_802F4D28 = 0x802F4D28;
lbl_802F4D30 = 0x802F4D30;
lbl_802F4D48 = 0x802F4D48;
lbl_802F4D50 = 0x802F4D50;
lbl_802F4D60 = 0x802F4D60;
lbl_802F4D78 = 0x802F4D78;
lbl_802F4D90 = 0x802F4D90;
lbl_802F4DA4 = 0x802F4DA4;
lbl_802F4DA8 = 0x802F4DA8;
lbl_802F4DAC = 0x802F4DAC;
lbl_802F4DB0 = 0x802F4DB0;
lbl_802F4DB4 = 0x802F4DB4;
lbl_802F4DB8 = 0x802F4DB8;
lbl_802F4DBC = 0x802F4DBC;
lbl_802F4DC0 = 0x802F4DC0;
lbl_802F4DC4 = 0x802F4DC4;
lbl_802F4DC8 = 0x802F4DC8;
lbl_802F4DCC = 0x802F4DCC;
lbl_802F4DD0 = 0x802F4DD0;
lbl_802F4DD8 = 0x802F4DD8;
lbl_802F4DE8 = 0x802F4DE8;
lbl_802F4DF8 = 0x802F4DF8;
